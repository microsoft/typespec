import "../dist/src/http/index.js";

namespace Cadl.Http;

using Private;

@doc("Http response with status code")
model Response<Status> {
  @doc("The status code.")
  @statusCode
  _: Status;
}

@doc("The request has succeeded.")
model OkResponse<Body> is Response<200> {
  @doc("The reponse body.")
  @body
  body: Body;
}

@doc("The Location header.")
model LocationHeader {
  @doc("The Location header contains the URL where the status of the long running operation can be checked.")
  @header
  location: string;
}

@doc("The request has succeeded and a new resource has been created as a result.")
model CreatedResponse is Response<201> {}

@doc("The request has been received but not yet acted upon.")
model AcceptedResponse is Response<202> {}

@doc("There is no content to send for this request, but the headers may be useful. ")
model NoContentResponse is Response<204> {}

@doc("The URL of the requested resource has been changed permanently. The new URL is given in the response.")
model MovedResponse is Response<301> {
  ...LocationHeader;
}

@doc("This is used for caching purposes.")
model NotModifiedResponse is Response<304> {}

@doc("The server could not understand the request due to invalid syntax.")
model UnauthorizedResponse is Response<401> {}

@doc("The server can not find the requested resource.")
model NotFoundResponse is Response<404> {}

@doc("This response is sent when a request conflicts with the current state of the server.")
model ConflictResponse is Response<409> {}

// Produces a new model with the same properties as T, but with @query,
// @header, @body, and @path decorators removed from all properties.
//
// ISSUE: Can't use @doc to document this as it leaks into OpenAPI output.
// We probably need a way to do Cadl-developer-only docs that show in the
// IDE but do not leak into output. https://github.com/microsoft/cadl/issues/131
@plainData
model PlainData<T> {
  ...T;
}
