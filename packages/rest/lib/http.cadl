import "../dist/src/http/index.js";

namespace Cadl.Http;

using Private;

model Response<Status> {
  @doc("The status code.")
  @statusCode
  statusCode: Status;
}
model OkResponse<Body> is Response<200> {
  @doc("The reponse body.")
  @body
  body: Body;
}

@doc("The Location header.")
model LocationHeader {
  @doc("The Location header contains the URL where the status of the long running operation can be checked.")
  @header
  location: string;
}

// Don't put @doc on these, change `getStatusCodeDescription` implementation
// to update the default descriptions for these status codes. This ensures
// that we get consistent emit between different ways to spell the same
// responses in Cadl.
model CreatedResponse is Response<201> {}
model AcceptedResponse is Response<202> {}
model NoContentResponse is Response<204> {}
model MovedResponse is Response<301> {
  ...LocationHeader;
}
model NotModifiedResponse is Response<304> {}
model BadRequestResponse is Response<400> {}
model UnauthorizedResponse is Response<401> {}
model ForbiddenResponse is Response<403> {}
model NotFoundResponse is Response<404> {}
model ConflictResponse is Response<409> {}

// Produces a new model with the same properties as T, but with @query,
// @header, @body, and @path decorators removed from all properties.
//
// ISSUE: Can't use @doc to document this as it leaks into OpenAPI output.
// We probably need a way to do Cadl-developer-only docs that show in the
// IDE but do not leak into output. https://github.com/microsoft/cadl/issues/131
@plainData
model PlainData<T> {
  ...T;
}
