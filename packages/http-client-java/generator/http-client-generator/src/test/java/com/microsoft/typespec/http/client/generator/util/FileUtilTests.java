// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

package com.microsoft.typespec.http.client.generator.util;

import static org.junit.jupiter.api.Assertions.*;

import java.io.IOException;
import java.nio.charset.StandardCharsets;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.Set;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.io.TempDir;

public final class FileUtilTests {

    @Test
    public void deleteGeneratedJavaFiles_deletesGeneratedFilesExceptKeptOnes(@TempDir Path tempDir) throws IOException {
        Path root = tempDir.resolve("output/");
        Files.createDirectories(root);

        Path srcDir = root.resolve("src/main/");
        Files.createDirectories(srcDir);

        Path gen1 = srcDir.resolve("Generated1.java");
        Files.writeString(gen1,
            "// Code generated by Microsoft (R) TypeSpec Code Generator.\npublic class Generated1 {}\n",
            StandardCharsets.UTF_8);

        Path subdir = srcDir.resolve("subdir/");
        Files.createDirectories(subdir);
        Path gen2 = subdir.resolve("Generated2.java");
        Files.writeString(gen2,
            "/* header */\n// Code generated by Microsoft (R) AutoRest Code Generator.\npublic class Generated2 {}\n",
            StandardCharsets.UTF_8);

        Path nonGen = srcDir.resolve("NotGenerated.java");
        Files.writeString(nonGen, "public class NotGenerated {}\n", StandardCharsets.UTF_8);

        Path keepdir = srcDir.resolve("keepdir/");
        Files.createDirectories(keepdir);
        Path keep = keepdir.resolve("KeepMe.java");
        Files.writeString(keep, "// Code generated by Microsoft (R) TypeSpec Code Generator.\npublic class KeepMe {}\n",
            StandardCharsets.UTF_8);

        Path testDir = root.resolve("src/test/");
        Files.createDirectories(testDir);
        Path gen3 = testDir.resolve("Generated3.java");
        Files.writeString(gen3,
            "// Code generated by Microsoft (R) TypeSpec Code Generator.\npublic class Generated3 {}\n",
            StandardCharsets.UTF_8);

        // Call method with keep set (use forward slashes for relative path)
        Set<String> keepSet = Set.of("src/main/keepdir/KeepMe.java");
        FileUtil.deleteFiles(root.toString(),
            new FileUtil.DeleteGeneratedJavaFilesOptions().setRelativePathOfJavaFilesToKeep(keepSet));

        // Assertions
        assertFalse(Files.exists(gen1), "Generated1.java should be deleted");
        assertFalse(Files.exists(gen2), "Generated2.java should be deleted");
        assertTrue(Files.exists(gen3), "Generated3.java should not be deleted, as it is not in the src/main directory");
        assertTrue(Files.exists(nonGen), "NotGenerated.java should not be deleted");
        assertTrue(Files.exists(keep), "KeepMe.java should be kept");
    }
}
