// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package azure.clientgenerator.core.hierarchybuilding.generated;

// The Java test files under 'generated' package are generated for your reference.
// If you wish to modify these files, please copy them out of the 'generated' package, and modify there.
// See https://aka.ms/azsdk/dpg/java/tests for guide on adding a test.

import azure.clientgenerator.core.hierarchybuilding.AnimalOperationsClient;
import azure.clientgenerator.core.hierarchybuilding.DogOperationsClient;
import azure.clientgenerator.core.hierarchybuilding.HierarchyBuildingClientBuilder;
import azure.clientgenerator.core.hierarchybuilding.PetOperationsClient;
import com.azure.core.http.policy.HttpLogDetailLevel;
import com.azure.core.http.policy.HttpLogOptions;
import com.azure.core.test.TestMode;
import com.azure.core.test.TestProxyTestBase;
import com.azure.core.util.Configuration;

class HierarchyBuildingClientTestBase extends TestProxyTestBase {
    protected AnimalOperationsClient animalOperationsClient;

    protected PetOperationsClient petOperationsClient;

    protected DogOperationsClient dogOperationsClient;

    @Override
    protected void beforeTest() {
        HierarchyBuildingClientBuilder animalOperationsClientbuilder = new HierarchyBuildingClientBuilder()
            .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "http://localhost:3000"))
            .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
            .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.RECORD) {
            animalOperationsClientbuilder.addPolicy(interceptorManager.getRecordPolicy());
        }
        animalOperationsClient = animalOperationsClientbuilder.buildAnimalOperationsClient();

        HierarchyBuildingClientBuilder petOperationsClientbuilder = new HierarchyBuildingClientBuilder()
            .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "http://localhost:3000"))
            .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
            .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.RECORD) {
            petOperationsClientbuilder.addPolicy(interceptorManager.getRecordPolicy());
        }
        petOperationsClient = petOperationsClientbuilder.buildPetOperationsClient();

        HierarchyBuildingClientBuilder dogOperationsClientbuilder = new HierarchyBuildingClientBuilder()
            .endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT", "http://localhost:3000"))
            .httpClient(getHttpClientOrUsePlayback(getHttpClients().findFirst().orElse(null)))
            .httpLogOptions(new HttpLogOptions().setLogLevel(HttpLogDetailLevel.BASIC));
        if (getTestMode() == TestMode.RECORD) {
            dogOperationsClientbuilder.addPolicy(interceptorManager.getRecordPolicy());
        }
        dogOperationsClient = dogOperationsClientbuilder.buildDogOperationsClient();

    }
}
