// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package cadl.longrunning.generated;

import cadl.longrunning.LongRunningClient;
import cadl.longrunning.LongRunningClientBuilder;
import cadl.longrunning.models.JobData;
import cadl.longrunning.models.JobResult;
import cadl.longrunning.models.JobResultResult;
import com.azure.core.util.Configuration;
import com.azure.core.util.polling.SyncPoller;
import java.util.HashMap;
import java.util.Map;

public class LongRunningCreateJob {
    public static void main(String[] args) {
        LongRunningClient longRunningClient
            = new LongRunningClientBuilder().endpoint(Configuration.getGlobalConfiguration().get("ENDPOINT"))
                .buildClient();
        // BEGIN:cadl.longrunning.generated.createjob.longrunningcreatejob
        SyncPoller<JobResult, JobResultResult> response = longRunningClient
            .beginCreateJob(new JobData(mapOf("max", 15.0D, "min", 14.0D, "average", 14.3D)).setConfiguration("{}"));
        // END:cadl.longrunning.generated.createjob.longrunningcreatejob
    }

    // Use "Map.of" if available
    @SuppressWarnings("unchecked")
    private static <T> Map<String, T> mapOf(Object... inputs) {
        Map<String, T> map = new HashMap<>();
        for (int i = 0; i < inputs.length; i += 2) {
            String key = (String) inputs[i];
            T value = (T) inputs[i + 1];
            map.put(key, value);
        }
        return map;
    }
}
