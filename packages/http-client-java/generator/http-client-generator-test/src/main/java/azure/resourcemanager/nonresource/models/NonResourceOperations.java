// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package azure.resourcemanager.nonresource.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of NonResourceOperations.
 */
public interface NonResourceOperations {
    /**
     * The get operation.
     * 
     * @param location The location parameter.
     * @param parameter Another parameter.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return though this model has `id`, `name`, `type` properties, it is not a resource as it doesn't extends
     * `Resource` along with {@link Response}.
     */
    Response<NonResource> getWithResponse(String location, String parameter, Context context);

    /**
     * The get operation.
     * 
     * @param location The location parameter.
     * @param parameter Another parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return though this model has `id`, `name`, `type` properties, it is not a resource as it doesn't extends
     * `Resource`.
     */
    NonResource get(String location, String parameter);

    /**
     * The get operation.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return though this model has `id`, `name`, `type` properties, it is not a resource as it doesn't extends
     * `Resource` along with {@link Response}.
     */
    NonResource getById(String id);

    /**
     * The get operation.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return though this model has `id`, `name`, `type` properties, it is not a resource as it doesn't extends
     * `Resource` along with {@link Response}.
     */
    Response<NonResource> getByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new NonResource resource.
     * 
     * @param name resource name.
     * @return the first stage of the new NonResource definition.
     */
    NonResource.DefinitionStages.Blank define(String name);
}
