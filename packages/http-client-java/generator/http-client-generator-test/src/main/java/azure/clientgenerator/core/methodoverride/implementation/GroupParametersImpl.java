// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package azure.clientgenerator.core.methodoverride.implementation;

import com.azure.core.annotation.ExpectedResponses;
import com.azure.core.annotation.Get;
import com.azure.core.annotation.Host;
import com.azure.core.annotation.HostParam;
import com.azure.core.annotation.QueryParam;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceInterface;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.annotation.UnexpectedResponseExceptionType;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.RestProxy;
import com.azure.core.util.Context;
import com.azure.core.util.FluxUtil;
import reactor.core.publisher.Mono;

/**
 * An instance of this class provides access to all the operations defined in GroupParameters.
 */
public final class GroupParametersImpl {
    /**
     * The proxy service used to perform REST calls.
     */
    private final GroupParametersService service;

    /**
     * The service client containing this operation class.
     */
    private final OverrideClientImpl client;

    /**
     * Initializes an instance of GroupParametersImpl.
     * 
     * @param client the instance of the service client containing this operation class.
     */
    GroupParametersImpl(OverrideClientImpl client) {
        this.service
            = RestProxy.create(GroupParametersService.class, client.getHttpPipeline(), client.getSerializerAdapter());
        this.client = client;
    }

    /**
     * The interface defining all the services for OverrideClientGroupParameters to be used by the proxy service to
     * perform REST calls.
     */
    @Host("{endpoint}")
    @ServiceInterface(name = "OverrideClientGroupParameters")
    public interface GroupParametersService {
        @Get("/azure/client-generator-core/override/group")
        @ExpectedResponses({ 204 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Mono<Response<Void>> group(@HostParam("endpoint") String endpoint, @QueryParam("param1") String param1,
            @QueryParam("param2") String param2, RequestOptions requestOptions, Context context);

        @Get("/azure/client-generator-core/override/group")
        @ExpectedResponses({ 204 })
        @UnexpectedResponseExceptionType(value = ClientAuthenticationException.class, code = { 401 })
        @UnexpectedResponseExceptionType(value = ResourceNotFoundException.class, code = { 404 })
        @UnexpectedResponseExceptionType(value = ResourceModifiedException.class, code = { 409 })
        @UnexpectedResponseExceptionType(HttpResponseException.class)
        Response<Void> groupSync(@HostParam("endpoint") String endpoint, @QueryParam("param1") String param1,
            @QueryParam("param2") String param2, RequestOptions requestOptions, Context context);
    }

    /**
     * The group operation.
     * 
     * @param param1 The param1 parameter.
     * @param param2 The param2 parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response} on successful completion of {@link Mono}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Mono<Response<Void>> groupWithResponseAsync(String param1, String param2, RequestOptions requestOptions) {
        return FluxUtil
            .withContext(context -> service.group(this.client.getEndpoint(), param1, param2, requestOptions, context));
    }

    /**
     * The group operation.
     * 
     * @param param1 The param1 parameter.
     * @param param2 The param2 parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<Void> groupWithResponse(String param1, String param2, RequestOptions requestOptions) {
        return service.groupSync(this.client.getEndpoint(), param1, param2, requestOptions, Context.NONE);
    }
}
