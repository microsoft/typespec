// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package azure.encode.duration.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The DurationModel model.
 */
@Immutable
public final class DurationModel implements JsonSerializable<DurationModel> {
    /*
     * The input property.
     */
    @Generated
    private final String input;

    /**
     * Creates an instance of DurationModel class.
     * 
     * @param input the input value to set.
     */
    @Generated
    public DurationModel(String input) {
        this.input = input;
    }

    /**
     * Get the input property: The input property.
     * 
     * @return the input value.
     */
    @Generated
    public String getInput() {
        return this.input;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("input", this.input);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of DurationModel from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of DurationModel if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the DurationModel.
     */
    @Generated
    public static DurationModel fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            String input = null;
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("input".equals(fieldName)) {
                    input = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }
            return new DurationModel(input);
        });
    }
}
