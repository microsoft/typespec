// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package azure.resourcemanager.commonproperties.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of Errors.
 */
public interface Errors {
    /**
     * Get a ConfidentialResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param confidentialResourceName The name of the ConfidentialResource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a ConfidentialResource along with {@link Response}.
     */
    Response<ConfidentialResource> getByResourceGroupWithResponse(String resourceGroupName,
        String confidentialResourceName, Context context);

    /**
     * Get a ConfidentialResource.
     * 
     * @param resourceGroupName The name of the resource group. The name is case insensitive.
     * @param confidentialResourceName The name of the ConfidentialResource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a ConfidentialResource.
     */
    ConfidentialResource getByResourceGroup(String resourceGroupName, String confidentialResourceName);

    /**
     * Get a ConfidentialResource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a ConfidentialResource along with {@link Response}.
     */
    ConfidentialResource getById(String id);

    /**
     * Get a ConfidentialResource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a ConfidentialResource along with {@link Response}.
     */
    Response<ConfidentialResource> getByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new ConfidentialResource resource.
     * 
     * @param name resource name.
     * @return the first stage of the new ConfidentialResource definition.
     */
    ConfidentialResource.DefinitionStages.Blank define(String name);
}
