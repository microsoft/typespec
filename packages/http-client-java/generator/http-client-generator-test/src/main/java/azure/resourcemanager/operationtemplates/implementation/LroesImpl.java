// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package azure.resourcemanager.operationtemplates.implementation;

import azure.resourcemanager.operationtemplates.fluent.LroesClient;
import azure.resourcemanager.operationtemplates.fluent.models.ExportResultInner;
import azure.resourcemanager.operationtemplates.models.ExportRequest;
import azure.resourcemanager.operationtemplates.models.ExportResult;
import azure.resourcemanager.operationtemplates.models.Lroes;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;

public final class LroesImpl implements Lroes {
    private static final ClientLogger LOGGER = new ClientLogger(LroesImpl.class);

    private final LroesClient innerClient;

    private final azure.resourcemanager.operationtemplates.OperationTemplatesManager serviceManager;

    public LroesImpl(LroesClient innerClient,
        azure.resourcemanager.operationtemplates.OperationTemplatesManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public ExportResult export(String resourceGroupName, String orderName, ExportRequest body) {
        ExportResultInner inner = this.serviceClient().export(resourceGroupName, orderName, body);
        if (inner != null) {
            return new ExportResultImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public ExportResult export(String resourceGroupName, String orderName, ExportRequest body, Context context) {
        ExportResultInner inner = this.serviceClient().export(resourceGroupName, orderName, body, context);
        if (inner != null) {
            return new ExportResultImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    public void deleteByResourceGroup(String resourceGroupName, String orderName) {
        this.serviceClient().delete(resourceGroupName, orderName);
    }

    public void delete(String resourceGroupName, String orderName, Context context) {
        this.serviceClient().delete(resourceGroupName, orderName, context);
    }

    public void deleteById(String id) {
        String resourceGroupName = ResourceManagerUtils.getValueFromIdByName(id, "resourceGroups");
        if (resourceGroupName == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                String.format("The resource ID '%s' is not valid. Missing path segment 'resourceGroups'.", id)));
        }
        String orderName = ResourceManagerUtils.getValueFromIdByName(id, "orders");
        if (orderName == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                String.format("The resource ID '%s' is not valid. Missing path segment 'orders'.", id)));
        }
        this.delete(resourceGroupName, orderName, Context.NONE);
    }

    public void deleteByIdWithResponse(String id, Context context) {
        String resourceGroupName = ResourceManagerUtils.getValueFromIdByName(id, "resourceGroups");
        if (resourceGroupName == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                String.format("The resource ID '%s' is not valid. Missing path segment 'resourceGroups'.", id)));
        }
        String orderName = ResourceManagerUtils.getValueFromIdByName(id, "orders");
        if (orderName == null) {
            throw LOGGER.logExceptionAsError(new IllegalArgumentException(
                String.format("The resource ID '%s' is not valid. Missing path segment 'orders'.", id)));
        }
        this.delete(resourceGroupName, orderName, context);
    }

    private LroesClient serviceClient() {
        return this.innerClient;
    }

    private azure.resourcemanager.operationtemplates.OperationTemplatesManager manager() {
        return this.serviceManager;
    }

    public OrderImpl define(String name) {
        return new OrderImpl(name, this.manager());
    }
}
