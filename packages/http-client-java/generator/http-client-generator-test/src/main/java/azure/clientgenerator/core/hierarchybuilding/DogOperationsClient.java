// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package azure.clientgenerator.core.hierarchybuilding;

import azure.clientgenerator.core.hierarchybuilding.implementation.DogOperationsImpl;
import azure.clientgenerator.core.hierarchybuilding.models.Dog;
import com.azure.core.annotation.Generated;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceClient;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.exception.ClientAuthenticationException;
import com.azure.core.exception.HttpResponseException;
import com.azure.core.exception.ResourceModifiedException;
import com.azure.core.exception.ResourceNotFoundException;
import com.azure.core.http.rest.RequestOptions;
import com.azure.core.http.rest.Response;
import com.azure.core.util.BinaryData;

/**
 * Initializes a new instance of the synchronous HierarchyBuildingClient type.
 */
@ServiceClient(builder = HierarchyBuildingClientBuilder.class)
public final class DogOperationsClient {
    @Generated
    private final DogOperationsImpl serviceClient;

    /**
     * Initializes an instance of DogOperationsClient class.
     * 
     * @param serviceClient the service client implementation.
     */
    @Generated
    DogOperationsClient(DogOperationsImpl serviceClient) {
        this.serviceClient = serviceClient;
    }

    /**
     * Update a dog as a dog.
     * <p><strong>Request Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     kind: String (Required)
     *     name: String (Required)
     *     trained: boolean (Required)
     *     breed: String (Required)
     * }
     * }
     * </pre>
     * 
     * <p><strong>Response Body Schema</strong></p>
     * 
     * <pre>
     * {@code
     * {
     *     kind: String (Required)
     *     name: String (Required)
     *     trained: boolean (Required)
     *     breed: String (Required)
     * }
     * }
     * </pre>
     * 
     * @param dog The dog parameter.
     * @param requestOptions The options to configure the HTTP request before HTTP client sends it.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @return the response body along with {@link Response}.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Response<BinaryData> updateDogAsDogWithResponse(BinaryData dog, RequestOptions requestOptions) {
        return this.serviceClient.updateDogAsDogWithResponse(dog, requestOptions);
    }

    /**
     * Update a dog as a dog.
     * 
     * @param dog The dog parameter.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws HttpResponseException thrown if the request is rejected by server.
     * @throws ClientAuthenticationException thrown if the request is rejected by server on status code 401.
     * @throws ResourceNotFoundException thrown if the request is rejected by server on status code 404.
     * @throws ResourceModifiedException thrown if the request is rejected by server on status code 409.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the response.
     */
    @Generated
    @ServiceMethod(returns = ReturnType.SINGLE)
    public Dog updateDogAsDog(Dog dog) {
        // Generated convenience method for updateDogAsDogWithResponse
        RequestOptions requestOptions = new RequestOptions();
        return updateDogAsDogWithResponse(BinaryData.fromObject(dog), requestOptions).getValue().toObject(Dog.class);
    }
}
