// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package azure.resourcemanager.operationtemplates.models;

import com.azure.core.annotation.Fluent;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The ActionRequest model.
 */
@Fluent
public final class ActionRequest implements JsonSerializable<ActionRequest> {
    /*
     * The action type to perform.
     */
    private String actionType;

    /*
     * Additional action parameters.
     */
    private String parameters;

    /**
     * Creates an instance of ActionRequest class.
     */
    public ActionRequest() {
    }

    /**
     * Get the actionType property: The action type to perform.
     * 
     * @return the actionType value.
     */
    public String actionType() {
        return this.actionType;
    }

    /**
     * Set the actionType property: The action type to perform.
     * 
     * @param actionType the actionType value to set.
     * @return the ActionRequest object itself.
     */
    public ActionRequest withActionType(String actionType) {
        this.actionType = actionType;
        return this;
    }

    /**
     * Get the parameters property: Additional action parameters.
     * 
     * @return the parameters value.
     */
    public String parameters() {
        return this.parameters;
    }

    /**
     * Set the parameters property: Additional action parameters.
     * 
     * @param parameters the parameters value to set.
     * @return the ActionRequest object itself.
     */
    public ActionRequest withParameters(String parameters) {
        this.parameters = parameters;
        return this;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeStringField("actionType", this.actionType);
        jsonWriter.writeStringField("parameters", this.parameters);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of ActionRequest from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of ActionRequest if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IOException If an error occurs while reading the ActionRequest.
     */
    public static ActionRequest fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            ActionRequest deserializedActionRequest = new ActionRequest();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("actionType".equals(fieldName)) {
                    deserializedActionRequest.actionType = reader.getString();
                } else if ("parameters".equals(fieldName)) {
                    deserializedActionRequest.parameters = reader.getString();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedActionRequest;
        });
    }
}
