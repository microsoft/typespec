// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package azure.resourcemanager.largeheader.fluent.models;

import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;

/**
 * The CancelResult model.
 */
@Immutable
public final class CancelResultInner implements JsonSerializable<CancelResultInner> {
    /*
     * The succeeded property.
     */
    private boolean succeeded;

    /**
     * Creates an instance of CancelResultInner class.
     */
    private CancelResultInner() {
    }

    /**
     * Get the succeeded property: The succeeded property.
     * 
     * @return the succeeded value.
     */
    public boolean succeeded() {
        return this.succeeded;
    }

    /**
     * Validates the instance.
     * 
     * @throws IllegalArgumentException thrown if the instance is not valid.
     */
    public void validate() {
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        jsonWriter.writeBooleanField("succeeded", this.succeeded);
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of CancelResultInner from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of CancelResultInner if the JsonReader was pointing to an instance of it, or null if it was
     * pointing to JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the CancelResultInner.
     */
    public static CancelResultInner fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            CancelResultInner deserializedCancelResultInner = new CancelResultInner();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("succeeded".equals(fieldName)) {
                    deserializedCancelResultInner.succeeded = reader.getBoolean();
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedCancelResultInner;
        });
    }
}
