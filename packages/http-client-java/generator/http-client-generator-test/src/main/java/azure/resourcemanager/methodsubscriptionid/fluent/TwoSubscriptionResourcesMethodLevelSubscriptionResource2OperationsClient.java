// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package azure.resourcemanager.methodsubscriptionid.fluent;

import azure.resourcemanager.methodsubscriptionid.fluent.models.SubscriptionResource2Inner;
import com.azure.core.annotation.ReturnType;
import com.azure.core.annotation.ServiceMethod;
import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * An instance of this class provides access to all the operations defined in
 * TwoSubscriptionResourcesMethodLevelSubscriptionResource2OperationsClient.
 */
public interface TwoSubscriptionResourcesMethodLevelSubscriptionResource2OperationsClient {
    /**
     * Get a SubscriptionResource2.
     * 
     * @param subscriptionId The ID of the target subscription. The value must be an UUID.
     * @param subscriptionResource2Name The name of the SubscriptionResource2.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a SubscriptionResource2 along with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SubscriptionResource2Inner> getWithResponse(String subscriptionId, String subscriptionResource2Name,
        Context context);

    /**
     * Get a SubscriptionResource2.
     * 
     * @param subscriptionId The ID of the target subscription. The value must be an UUID.
     * @param subscriptionResource2Name The name of the SubscriptionResource2.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a SubscriptionResource2.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SubscriptionResource2Inner get(String subscriptionId, String subscriptionResource2Name);

    /**
     * Create a SubscriptionResource2.
     * 
     * @param subscriptionId The ID of the target subscription. The value must be an UUID.
     * @param subscriptionResource2Name The name of the SubscriptionResource2.
     * @param resource Resource create parameters.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return concrete proxy resource types can be created by aliasing this type using a specific property type along
     * with {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<SubscriptionResource2Inner> putWithResponse(String subscriptionId, String subscriptionResource2Name,
        SubscriptionResource2Inner resource, Context context);

    /**
     * Create a SubscriptionResource2.
     * 
     * @param subscriptionId The ID of the target subscription. The value must be an UUID.
     * @param subscriptionResource2Name The name of the SubscriptionResource2.
     * @param resource Resource create parameters.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return concrete proxy resource types can be created by aliasing this type using a specific property type.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    SubscriptionResource2Inner put(String subscriptionId, String subscriptionResource2Name,
        SubscriptionResource2Inner resource);

    /**
     * Delete a SubscriptionResource2.
     * 
     * @param subscriptionId The ID of the target subscription. The value must be an UUID.
     * @param subscriptionResource2Name The name of the SubscriptionResource2.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    Response<Void> deleteWithResponse(String subscriptionId, String subscriptionResource2Name, Context context);

    /**
     * Delete a SubscriptionResource2.
     * 
     * @param subscriptionId The ID of the target subscription. The value must be an UUID.
     * @param subscriptionResource2Name The name of the SubscriptionResource2.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    @ServiceMethod(returns = ReturnType.SINGLE)
    void delete(String subscriptionId, String subscriptionResource2Name);
}
