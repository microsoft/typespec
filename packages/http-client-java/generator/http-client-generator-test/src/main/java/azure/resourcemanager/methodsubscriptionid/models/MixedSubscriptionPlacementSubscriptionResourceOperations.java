// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package azure.resourcemanager.methodsubscriptionid.models;

import com.azure.core.http.rest.Response;
import com.azure.core.util.Context;

/**
 * Resource collection API of MixedSubscriptionPlacementSubscriptionResourceOperations.
 */
public interface MixedSubscriptionPlacementSubscriptionResourceOperations {
    /**
     * Get a SubscriptionResource.
     * 
     * @param subscriptionId The ID of the target subscription. The value must be an UUID.
     * @param subscriptionResourceName The name of the SubscriptionResource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a SubscriptionResource along with {@link Response}.
     */
    Response<SubscriptionResource> getWithResponse(String subscriptionId, String subscriptionResourceName,
        Context context);

    /**
     * Get a SubscriptionResource.
     * 
     * @param subscriptionId The ID of the target subscription. The value must be an UUID.
     * @param subscriptionResourceName The name of the SubscriptionResource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a SubscriptionResource.
     */
    SubscriptionResource get(String subscriptionId, String subscriptionResourceName);

    /**
     * Delete a SubscriptionResource.
     * 
     * @param subscriptionId The ID of the target subscription. The value must be an UUID.
     * @param subscriptionResourceName The name of the SubscriptionResource.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByResourceGroupWithResponse(String subscriptionId, String subscriptionResourceName,
        Context context);

    /**
     * Delete a SubscriptionResource.
     * 
     * @param subscriptionId The ID of the target subscription. The value must be an UUID.
     * @param subscriptionResourceName The name of the SubscriptionResource.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteByResourceGroup(String subscriptionId, String subscriptionResourceName);

    /**
     * Get a SubscriptionResource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a SubscriptionResource along with {@link Response}.
     */
    SubscriptionResource getById(String id);

    /**
     * Get a SubscriptionResource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return a SubscriptionResource along with {@link Response}.
     */
    Response<SubscriptionResource> getByIdWithResponse(String id, Context context);

    /**
     * Delete a SubscriptionResource.
     * 
     * @param id the resource ID.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     */
    void deleteById(String id);

    /**
     * Delete a SubscriptionResource.
     * 
     * @param id the resource ID.
     * @param context The context to associate with this operation.
     * @throws IllegalArgumentException thrown if parameters fail the validation.
     * @throws com.azure.core.management.exception.ManagementException thrown if the request is rejected by server.
     * @throws RuntimeException all other wrapped checked exceptions if the request fails to be sent.
     * @return the {@link Response}.
     */
    Response<Void> deleteByIdWithResponse(String id, Context context);

    /**
     * Begins definition for a new SubscriptionResource resource.
     * 
     * @param name resource name.
     * @return the first stage of the new SubscriptionResource definition.
     */
    SubscriptionResource.DefinitionStages.Blank define(String name);
}
