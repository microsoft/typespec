// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package tsptest.specialheaders.models;

import com.azure.core.annotation.Generated;
import com.azure.core.annotation.Immutable;
import com.azure.json.JsonReader;
import com.azure.json.JsonSerializable;
import com.azure.json.JsonToken;
import com.azure.json.JsonWriter;
import java.io.IOException;
import java.util.List;

/**
 * Status details for long running operations.
 */
@Immutable
public final class Error1 implements JsonSerializable<Error1> {
    /*
     * the error code of this error.
     */
    @Generated
    private String code;

    /*
     * the error message of this error.
     */
    @Generated
    private String message;

    /*
     * the target of this error.
     */
    @Generated
    private String target;

    /*
     * a list of details about specific errors that led to this reported error.
     */
    @Generated
    private List<Error1> errorDetails;

    /**
     * Creates an instance of Error1 class.
     */
    @Generated
    private Error1() {
    }

    /**
     * Get the code property: the error code of this error.
     * 
     * @return the code value.
     */
    @Generated
    public String getCode() {
        return this.code;
    }

    /**
     * Get the message property: the error message of this error.
     * 
     * @return the message value.
     */
    @Generated
    public String getMessage() {
        return this.message;
    }

    /**
     * Get the target property: the target of this error.
     * 
     * @return the target value.
     */
    @Generated
    public String getTarget() {
        return this.target;
    }

    /**
     * Get the errorDetails property: a list of details about specific errors that led to this reported error.
     * 
     * @return the errorDetails value.
     */
    @Generated
    public List<Error1> getErrorDetails() {
        return this.errorDetails;
    }

    /**
     * {@inheritDoc}
     */
    @Generated
    @Override
    public JsonWriter toJson(JsonWriter jsonWriter) throws IOException {
        jsonWriter.writeStartObject();
        return jsonWriter.writeEndObject();
    }

    /**
     * Reads an instance of Error1 from the JsonReader.
     * 
     * @param jsonReader The JsonReader being read.
     * @return An instance of Error1 if the JsonReader was pointing to an instance of it, or null if it was pointing to
     * JSON null.
     * @throws IllegalStateException If the deserialized JSON object was missing any required properties.
     * @throws IOException If an error occurs while reading the Error1.
     */
    @Generated
    public static Error1 fromJson(JsonReader jsonReader) throws IOException {
        return jsonReader.readObject(reader -> {
            Error1 deserializedError1 = new Error1();
            while (reader.nextToken() != JsonToken.END_OBJECT) {
                String fieldName = reader.getFieldName();
                reader.nextToken();

                if ("code".equals(fieldName)) {
                    deserializedError1.code = reader.getString();
                } else if ("message".equals(fieldName)) {
                    deserializedError1.message = reader.getString();
                } else if ("target".equals(fieldName)) {
                    deserializedError1.target = reader.getString();
                } else if ("details".equals(fieldName)) {
                    List<Error1> errorDetails = reader.readArray(reader1 -> Error1.fromJson(reader1));
                    deserializedError1.errorDetails = errorDetails;
                } else {
                    reader.skipChildren();
                }
            }

            return deserializedError1;
        });
    }
}
