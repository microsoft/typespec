// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// Code generated by Microsoft (R) TypeSpec Code Generator.

package tsptest.armstreamstyleserialization.implementation;

import com.azure.core.http.rest.Response;
import com.azure.core.http.rest.SimpleResponse;
import com.azure.core.util.Context;
import com.azure.core.util.logging.ClientLogger;
import tsptest.armstreamstyleserialization.fluent.FunctionsClient;
import tsptest.armstreamstyleserialization.fluent.models.FunctionInner;
import tsptest.armstreamstyleserialization.models.Function;
import tsptest.armstreamstyleserialization.models.Functions;

public final class FunctionsImpl implements Functions {
    private static final ClientLogger LOGGER = new ClientLogger(FunctionsImpl.class);

    private final FunctionsClient innerClient;

    private final tsptest.armstreamstyleserialization.ArmStreamStyleSerializationManager serviceManager;

    public FunctionsImpl(FunctionsClient innerClient,
        tsptest.armstreamstyleserialization.ArmStreamStyleSerializationManager serviceManager) {
        this.innerClient = innerClient;
        this.serviceManager = serviceManager;
    }

    public Response<Function> createFunctionWithResponse(FunctionInner function, Context context) {
        Response<FunctionInner> inner = this.serviceClient().createFunctionWithResponse(function, context);
        if (inner != null) {
            return new SimpleResponse<>(inner.getRequest(), inner.getStatusCode(), inner.getHeaders(),
                new FunctionImpl(inner.getValue(), this.manager()));
        } else {
            return null;
        }
    }

    public Function createFunction(FunctionInner function) {
        FunctionInner inner = this.serviceClient().createFunction(function);
        if (inner != null) {
            return new FunctionImpl(inner, this.manager());
        } else {
            return null;
        }
    }

    private FunctionsClient serviceClient() {
        return this.innerClient;
    }

    private tsptest.armstreamstyleserialization.ArmStreamStyleSerializationManager manager() {
        return this.serviceManager;
    }
}
