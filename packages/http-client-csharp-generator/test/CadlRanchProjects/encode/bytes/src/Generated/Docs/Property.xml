<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="DefaultAsync(DefaultBytesProperty,CancellationToken)">
      <example>
This sample shows how to call DefaultAsync.
<code><![CDATA[
Property client = new BytesClient().GetPropertyClient();

DefaultBytesProperty body = new DefaultBytesProperty(BinaryData.FromObjectAsJson(new object()));
Response<DefaultBytesProperty> response = await client.DefaultAsync(body);
]]></code>
This sample shows how to call DefaultAsync with all parameters.
<code><![CDATA[
Property client = new BytesClient().GetPropertyClient();

DefaultBytesProperty body = new DefaultBytesProperty(BinaryData.FromObjectAsJson(new object()));
Response<DefaultBytesProperty> response = await client.DefaultAsync(body);
]]></code></example>
    </member>
    <member name="Default(DefaultBytesProperty,CancellationToken)">
      <example>
This sample shows how to call Default.
<code><![CDATA[
Property client = new BytesClient().GetPropertyClient();

DefaultBytesProperty body = new DefaultBytesProperty(BinaryData.FromObjectAsJson(new object()));
Response<DefaultBytesProperty> response = client.Default(body);
]]></code>
This sample shows how to call Default with all parameters.
<code><![CDATA[
Property client = new BytesClient().GetPropertyClient();

DefaultBytesProperty body = new DefaultBytesProperty(BinaryData.FromObjectAsJson(new object()));
Response<DefaultBytesProperty> response = client.Default(body);
]]></code></example>
    </member>
    <member name="DefaultAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call DefaultAsync and parse the result.
<code><![CDATA[
Property client = new BytesClient().GetPropertyClient();

using RequestContent content = RequestContent.Create(new
{
    value = new object(),
});
Response response = await client.DefaultAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value").ToString());
]]></code>
This sample shows how to call DefaultAsync with all request content and parse the result.
<code><![CDATA[
Property client = new BytesClient().GetPropertyClient();

using RequestContent content = RequestContent.Create(new
{
    value = new object(),
});
Response response = await client.DefaultAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value").ToString());
]]></code></example>
    </member>
    <member name="Default(RequestContent,RequestContext)">
      <example>
This sample shows how to call Default and parse the result.
<code><![CDATA[
Property client = new BytesClient().GetPropertyClient();

using RequestContent content = RequestContent.Create(new
{
    value = new object(),
});
Response response = client.Default(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value").ToString());
]]></code>
This sample shows how to call Default with all request content and parse the result.
<code><![CDATA[
Property client = new BytesClient().GetPropertyClient();

using RequestContent content = RequestContent.Create(new
{
    value = new object(),
});
Response response = client.Default(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value").ToString());
]]></code></example>
    </member>
    <member name="Base64Async(Base64BytesProperty,CancellationToken)">
      <example>
This sample shows how to call Base64Async.
<code><![CDATA[
Property client = new BytesClient().GetPropertyClient();

Base64BytesProperty body = new Base64BytesProperty(BinaryData.FromObjectAsJson(new object()));
Response<Base64BytesProperty> response = await client.Base64Async(body);
]]></code>
This sample shows how to call Base64Async with all parameters.
<code><![CDATA[
Property client = new BytesClient().GetPropertyClient();

Base64BytesProperty body = new Base64BytesProperty(BinaryData.FromObjectAsJson(new object()));
Response<Base64BytesProperty> response = await client.Base64Async(body);
]]></code></example>
    </member>
    <member name="Base64(Base64BytesProperty,CancellationToken)">
      <example>
This sample shows how to call Base64.
<code><![CDATA[
Property client = new BytesClient().GetPropertyClient();

Base64BytesProperty body = new Base64BytesProperty(BinaryData.FromObjectAsJson(new object()));
Response<Base64BytesProperty> response = client.Base64(body);
]]></code>
This sample shows how to call Base64 with all parameters.
<code><![CDATA[
Property client = new BytesClient().GetPropertyClient();

Base64BytesProperty body = new Base64BytesProperty(BinaryData.FromObjectAsJson(new object()));
Response<Base64BytesProperty> response = client.Base64(body);
]]></code></example>
    </member>
    <member name="Base64Async(RequestContent,RequestContext)">
      <example>
This sample shows how to call Base64Async and parse the result.
<code><![CDATA[
Property client = new BytesClient().GetPropertyClient();

using RequestContent content = RequestContent.Create(new
{
    value = new object(),
});
Response response = await client.Base64Async(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value").ToString());
]]></code>
This sample shows how to call Base64Async with all request content and parse the result.
<code><![CDATA[
Property client = new BytesClient().GetPropertyClient();

using RequestContent content = RequestContent.Create(new
{
    value = new object(),
});
Response response = await client.Base64Async(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value").ToString());
]]></code></example>
    </member>
    <member name="Base64(RequestContent,RequestContext)">
      <example>
This sample shows how to call Base64 and parse the result.
<code><![CDATA[
Property client = new BytesClient().GetPropertyClient();

using RequestContent content = RequestContent.Create(new
{
    value = new object(),
});
Response response = client.Base64(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value").ToString());
]]></code>
This sample shows how to call Base64 with all request content and parse the result.
<code><![CDATA[
Property client = new BytesClient().GetPropertyClient();

using RequestContent content = RequestContent.Create(new
{
    value = new object(),
});
Response response = client.Base64(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value").ToString());
]]></code></example>
    </member>
    <member name="Base64urlAsync(Base64urlBytesProperty,CancellationToken)">
      <example>
This sample shows how to call Base64urlAsync.
<code><![CDATA[
Property client = new BytesClient().GetPropertyClient();

Base64urlBytesProperty body = new Base64urlBytesProperty(BinaryData.FromObjectAsJson(new object()));
Response<Base64urlBytesProperty> response = await client.Base64urlAsync(body);
]]></code>
This sample shows how to call Base64urlAsync with all parameters.
<code><![CDATA[
Property client = new BytesClient().GetPropertyClient();

Base64urlBytesProperty body = new Base64urlBytesProperty(BinaryData.FromObjectAsJson(new object()));
Response<Base64urlBytesProperty> response = await client.Base64urlAsync(body);
]]></code></example>
    </member>
    <member name="Base64url(Base64urlBytesProperty,CancellationToken)">
      <example>
This sample shows how to call Base64url.
<code><![CDATA[
Property client = new BytesClient().GetPropertyClient();

Base64urlBytesProperty body = new Base64urlBytesProperty(BinaryData.FromObjectAsJson(new object()));
Response<Base64urlBytesProperty> response = client.Base64url(body);
]]></code>
This sample shows how to call Base64url with all parameters.
<code><![CDATA[
Property client = new BytesClient().GetPropertyClient();

Base64urlBytesProperty body = new Base64urlBytesProperty(BinaryData.FromObjectAsJson(new object()));
Response<Base64urlBytesProperty> response = client.Base64url(body);
]]></code></example>
    </member>
    <member name="Base64urlAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call Base64urlAsync and parse the result.
<code><![CDATA[
Property client = new BytesClient().GetPropertyClient();

using RequestContent content = RequestContent.Create(new
{
    value = new object(),
});
Response response = await client.Base64urlAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value").ToString());
]]></code>
This sample shows how to call Base64urlAsync with all request content and parse the result.
<code><![CDATA[
Property client = new BytesClient().GetPropertyClient();

using RequestContent content = RequestContent.Create(new
{
    value = new object(),
});
Response response = await client.Base64urlAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value").ToString());
]]></code></example>
    </member>
    <member name="Base64url(RequestContent,RequestContext)">
      <example>
This sample shows how to call Base64url and parse the result.
<code><![CDATA[
Property client = new BytesClient().GetPropertyClient();

using RequestContent content = RequestContent.Create(new
{
    value = new object(),
});
Response response = client.Base64url(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value").ToString());
]]></code>
This sample shows how to call Base64url with all request content and parse the result.
<code><![CDATA[
Property client = new BytesClient().GetPropertyClient();

using RequestContent content = RequestContent.Create(new
{
    value = new object(),
});
Response response = client.Base64url(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value").ToString());
]]></code></example>
    </member>
    <member name="Base64urlArrayAsync(Base64urlArrayBytesProperty,CancellationToken)">
      <example>
This sample shows how to call Base64urlArrayAsync.
<code><![CDATA[
Property client = new BytesClient().GetPropertyClient();

Base64urlArrayBytesProperty body = new Base64urlArrayBytesProperty(new BinaryData[]
{
    BinaryData.FromObjectAsJson(new object())
});
Response<Base64urlArrayBytesProperty> response = await client.Base64urlArrayAsync(body);
]]></code>
This sample shows how to call Base64urlArrayAsync with all parameters.
<code><![CDATA[
Property client = new BytesClient().GetPropertyClient();

Base64urlArrayBytesProperty body = new Base64urlArrayBytesProperty(new BinaryData[]
{
    BinaryData.FromObjectAsJson(new object())
});
Response<Base64urlArrayBytesProperty> response = await client.Base64urlArrayAsync(body);
]]></code></example>
    </member>
    <member name="Base64urlArray(Base64urlArrayBytesProperty,CancellationToken)">
      <example>
This sample shows how to call Base64urlArray.
<code><![CDATA[
Property client = new BytesClient().GetPropertyClient();

Base64urlArrayBytesProperty body = new Base64urlArrayBytesProperty(new BinaryData[]
{
    BinaryData.FromObjectAsJson(new object())
});
Response<Base64urlArrayBytesProperty> response = client.Base64urlArray(body);
]]></code>
This sample shows how to call Base64urlArray with all parameters.
<code><![CDATA[
Property client = new BytesClient().GetPropertyClient();

Base64urlArrayBytesProperty body = new Base64urlArrayBytesProperty(new BinaryData[]
{
    BinaryData.FromObjectAsJson(new object())
});
Response<Base64urlArrayBytesProperty> response = client.Base64urlArray(body);
]]></code></example>
    </member>
    <member name="Base64urlArrayAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call Base64urlArrayAsync and parse the result.
<code><![CDATA[
Property client = new BytesClient().GetPropertyClient();

using RequestContent content = RequestContent.Create(new
{
    value = new object[]
    {
        new object()
    },
});
Response response = await client.Base64urlArrayAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].ToString());
]]></code>
This sample shows how to call Base64urlArrayAsync with all request content and parse the result.
<code><![CDATA[
Property client = new BytesClient().GetPropertyClient();

using RequestContent content = RequestContent.Create(new
{
    value = new object[]
    {
        new object()
    },
});
Response response = await client.Base64urlArrayAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].ToString());
]]></code></example>
    </member>
    <member name="Base64urlArray(RequestContent,RequestContext)">
      <example>
This sample shows how to call Base64urlArray and parse the result.
<code><![CDATA[
Property client = new BytesClient().GetPropertyClient();

using RequestContent content = RequestContent.Create(new
{
    value = new object[]
    {
        new object()
    },
});
Response response = client.Base64urlArray(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].ToString());
]]></code>
This sample shows how to call Base64urlArray with all request content and parse the result.
<code><![CDATA[
Property client = new BytesClient().GetPropertyClient();

using RequestContent content = RequestContent.Create(new
{
    value = new object[]
    {
        new object()
    },
});
Response response = client.Base64urlArray(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("value")[0].ToString());
]]></code></example>
    </member>
  </members>
</doc>