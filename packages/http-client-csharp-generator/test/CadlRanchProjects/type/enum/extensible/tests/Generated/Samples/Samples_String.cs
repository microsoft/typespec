// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using _Type._Enum.Extensible;
using _Type._Enum.Extensible.Models;

namespace _Type._Enum.Extensible.Samples
{
    public partial class Samples_String
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_String_GetKnownValue_ShortVersion()
        {
            String client = new ExtensibleClient().GetStringClient();

            Response response = client.GetKnownValue(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_String_GetKnownValue_ShortVersion_Async()
        {
            String client = new ExtensibleClient().GetStringClient();

            Response response = await client.GetKnownValueAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_String_GetKnownValue_ShortVersion_Convenience()
        {
            String client = new ExtensibleClient().GetStringClient();

            Response<DaysOfWeekExtensibleEnum> response = client.GetKnownValue();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_String_GetKnownValue_ShortVersion_Convenience_Async()
        {
            String client = new ExtensibleClient().GetStringClient();

            Response<DaysOfWeekExtensibleEnum> response = await client.GetKnownValueAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_String_GetKnownValue_AllParameters()
        {
            String client = new ExtensibleClient().GetStringClient();

            Response response = client.GetKnownValue(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_String_GetKnownValue_AllParameters_Async()
        {
            String client = new ExtensibleClient().GetStringClient();

            Response response = await client.GetKnownValueAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_String_GetKnownValue_AllParameters_Convenience()
        {
            String client = new ExtensibleClient().GetStringClient();

            Response<DaysOfWeekExtensibleEnum> response = client.GetKnownValue();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_String_GetKnownValue_AllParameters_Convenience_Async()
        {
            String client = new ExtensibleClient().GetStringClient();

            Response<DaysOfWeekExtensibleEnum> response = await client.GetKnownValueAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_String_GetUnknownValue_ShortVersion()
        {
            String client = new ExtensibleClient().GetStringClient();

            Response response = client.GetUnknownValue(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_String_GetUnknownValue_ShortVersion_Async()
        {
            String client = new ExtensibleClient().GetStringClient();

            Response response = await client.GetUnknownValueAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_String_GetUnknownValue_ShortVersion_Convenience()
        {
            String client = new ExtensibleClient().GetStringClient();

            Response<DaysOfWeekExtensibleEnum> response = client.GetUnknownValue();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_String_GetUnknownValue_ShortVersion_Convenience_Async()
        {
            String client = new ExtensibleClient().GetStringClient();

            Response<DaysOfWeekExtensibleEnum> response = await client.GetUnknownValueAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_String_GetUnknownValue_AllParameters()
        {
            String client = new ExtensibleClient().GetStringClient();

            Response response = client.GetUnknownValue(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_String_GetUnknownValue_AllParameters_Async()
        {
            String client = new ExtensibleClient().GetStringClient();

            Response response = await client.GetUnknownValueAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_String_GetUnknownValue_AllParameters_Convenience()
        {
            String client = new ExtensibleClient().GetStringClient();

            Response<DaysOfWeekExtensibleEnum> response = client.GetUnknownValue();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_String_GetUnknownValue_AllParameters_Convenience_Async()
        {
            String client = new ExtensibleClient().GetStringClient();

            Response<DaysOfWeekExtensibleEnum> response = await client.GetUnknownValueAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_String_PutKnownValue_ShortVersion()
        {
            String client = new ExtensibleClient().GetStringClient();

            using RequestContent content = RequestContent.Create("Monday");
            Response response = client.PutKnownValue(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_String_PutKnownValue_ShortVersion_Async()
        {
            String client = new ExtensibleClient().GetStringClient();

            using RequestContent content = RequestContent.Create("Monday");
            Response response = await client.PutKnownValueAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_String_PutKnownValue_ShortVersion_Convenience()
        {
            String client = new ExtensibleClient().GetStringClient();

            Response response = client.PutKnownValue(DaysOfWeekExtensibleEnum.Monday);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_String_PutKnownValue_ShortVersion_Convenience_Async()
        {
            String client = new ExtensibleClient().GetStringClient();

            Response response = await client.PutKnownValueAsync(DaysOfWeekExtensibleEnum.Monday);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_String_PutKnownValue_AllParameters()
        {
            String client = new ExtensibleClient().GetStringClient();

            using RequestContent content = RequestContent.Create("Monday");
            Response response = client.PutKnownValue(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_String_PutKnownValue_AllParameters_Async()
        {
            String client = new ExtensibleClient().GetStringClient();

            using RequestContent content = RequestContent.Create("Monday");
            Response response = await client.PutKnownValueAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_String_PutKnownValue_AllParameters_Convenience()
        {
            String client = new ExtensibleClient().GetStringClient();

            Response response = client.PutKnownValue(DaysOfWeekExtensibleEnum.Monday);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_String_PutKnownValue_AllParameters_Convenience_Async()
        {
            String client = new ExtensibleClient().GetStringClient();

            Response response = await client.PutKnownValueAsync(DaysOfWeekExtensibleEnum.Monday);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_String_PutUnknownValue_ShortVersion()
        {
            String client = new ExtensibleClient().GetStringClient();

            using RequestContent content = RequestContent.Create("Monday");
            Response response = client.PutUnknownValue(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_String_PutUnknownValue_ShortVersion_Async()
        {
            String client = new ExtensibleClient().GetStringClient();

            using RequestContent content = RequestContent.Create("Monday");
            Response response = await client.PutUnknownValueAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_String_PutUnknownValue_ShortVersion_Convenience()
        {
            String client = new ExtensibleClient().GetStringClient();

            Response response = client.PutUnknownValue(DaysOfWeekExtensibleEnum.Monday);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_String_PutUnknownValue_ShortVersion_Convenience_Async()
        {
            String client = new ExtensibleClient().GetStringClient();

            Response response = await client.PutUnknownValueAsync(DaysOfWeekExtensibleEnum.Monday);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_String_PutUnknownValue_AllParameters()
        {
            String client = new ExtensibleClient().GetStringClient();

            using RequestContent content = RequestContent.Create("Monday");
            Response response = client.PutUnknownValue(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_String_PutUnknownValue_AllParameters_Async()
        {
            String client = new ExtensibleClient().GetStringClient();

            using RequestContent content = RequestContent.Create("Monday");
            Response response = await client.PutUnknownValueAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_String_PutUnknownValue_AllParameters_Convenience()
        {
            String client = new ExtensibleClient().GetStringClient();

            Response response = client.PutUnknownValue(DaysOfWeekExtensibleEnum.Monday);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_String_PutUnknownValue_AllParameters_Convenience_Async()
        {
            String client = new ExtensibleClient().GetStringClient();

            Response response = await client.PutUnknownValueAsync(DaysOfWeekExtensibleEnum.Monday);
        }
    }
}
