<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetAllAsync(CancellationToken)">
      <example>
This sample shows how to call GetAllAsync.
<code><![CDATA[
RequiredAndOptional client = new OptionalClient().GetRequiredAndOptionalClient();

Response<RequiredAndOptionalProperty> response = await client.GetAllAsync();
]]></code>
This sample shows how to call GetAllAsync with all parameters.
<code><![CDATA[
RequiredAndOptional client = new OptionalClient().GetRequiredAndOptionalClient();

Response<RequiredAndOptionalProperty> response = await client.GetAllAsync();
]]></code></example>
    </member>
    <member name="GetAll(CancellationToken)">
      <example>
This sample shows how to call GetAll.
<code><![CDATA[
RequiredAndOptional client = new OptionalClient().GetRequiredAndOptionalClient();

Response<RequiredAndOptionalProperty> response = client.GetAll();
]]></code>
This sample shows how to call GetAll with all parameters.
<code><![CDATA[
RequiredAndOptional client = new OptionalClient().GetRequiredAndOptionalClient();

Response<RequiredAndOptionalProperty> response = client.GetAll();
]]></code></example>
    </member>
    <member name="GetAllAsync(RequestContext)">
      <example>
This sample shows how to call GetAllAsync and parse the result.
<code><![CDATA[
RequiredAndOptional client = new OptionalClient().GetRequiredAndOptionalClient();

Response response = await client.GetAllAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("requiredProperty").ToString());
]]></code>
This sample shows how to call GetAllAsync with all parameters and parse the result.
<code><![CDATA[
RequiredAndOptional client = new OptionalClient().GetRequiredAndOptionalClient();

Response response = await client.GetAllAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("optionalProperty").ToString());
Console.WriteLine(result.GetProperty("requiredProperty").ToString());
]]></code></example>
    </member>
    <member name="GetAll(RequestContext)">
      <example>
This sample shows how to call GetAll and parse the result.
<code><![CDATA[
RequiredAndOptional client = new OptionalClient().GetRequiredAndOptionalClient();

Response response = client.GetAll(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("requiredProperty").ToString());
]]></code>
This sample shows how to call GetAll with all parameters and parse the result.
<code><![CDATA[
RequiredAndOptional client = new OptionalClient().GetRequiredAndOptionalClient();

Response response = client.GetAll(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("optionalProperty").ToString());
Console.WriteLine(result.GetProperty("requiredProperty").ToString());
]]></code></example>
    </member>
    <member name="GetRequiredOnlyAsync(CancellationToken)">
      <example>
This sample shows how to call GetRequiredOnlyAsync.
<code><![CDATA[
RequiredAndOptional client = new OptionalClient().GetRequiredAndOptionalClient();

Response<RequiredAndOptionalProperty> response = await client.GetRequiredOnlyAsync();
]]></code>
This sample shows how to call GetRequiredOnlyAsync with all parameters.
<code><![CDATA[
RequiredAndOptional client = new OptionalClient().GetRequiredAndOptionalClient();

Response<RequiredAndOptionalProperty> response = await client.GetRequiredOnlyAsync();
]]></code></example>
    </member>
    <member name="GetRequiredOnly(CancellationToken)">
      <example>
This sample shows how to call GetRequiredOnly.
<code><![CDATA[
RequiredAndOptional client = new OptionalClient().GetRequiredAndOptionalClient();

Response<RequiredAndOptionalProperty> response = client.GetRequiredOnly();
]]></code>
This sample shows how to call GetRequiredOnly with all parameters.
<code><![CDATA[
RequiredAndOptional client = new OptionalClient().GetRequiredAndOptionalClient();

Response<RequiredAndOptionalProperty> response = client.GetRequiredOnly();
]]></code></example>
    </member>
    <member name="GetRequiredOnlyAsync(RequestContext)">
      <example>
This sample shows how to call GetRequiredOnlyAsync and parse the result.
<code><![CDATA[
RequiredAndOptional client = new OptionalClient().GetRequiredAndOptionalClient();

Response response = await client.GetRequiredOnlyAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("requiredProperty").ToString());
]]></code>
This sample shows how to call GetRequiredOnlyAsync with all parameters and parse the result.
<code><![CDATA[
RequiredAndOptional client = new OptionalClient().GetRequiredAndOptionalClient();

Response response = await client.GetRequiredOnlyAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("optionalProperty").ToString());
Console.WriteLine(result.GetProperty("requiredProperty").ToString());
]]></code></example>
    </member>
    <member name="GetRequiredOnly(RequestContext)">
      <example>
This sample shows how to call GetRequiredOnly and parse the result.
<code><![CDATA[
RequiredAndOptional client = new OptionalClient().GetRequiredAndOptionalClient();

Response response = client.GetRequiredOnly(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("requiredProperty").ToString());
]]></code>
This sample shows how to call GetRequiredOnly with all parameters and parse the result.
<code><![CDATA[
RequiredAndOptional client = new OptionalClient().GetRequiredAndOptionalClient();

Response response = client.GetRequiredOnly(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("optionalProperty").ToString());
Console.WriteLine(result.GetProperty("requiredProperty").ToString());
]]></code></example>
    </member>
    <member name="PutAllAsync(RequiredAndOptionalProperty,CancellationToken)">
      <example>
This sample shows how to call PutAllAsync.
<code><![CDATA[
RequiredAndOptional client = new OptionalClient().GetRequiredAndOptionalClient();

RequiredAndOptionalProperty body = new RequiredAndOptionalProperty(1234);
Response response = await client.PutAllAsync(body);
]]></code>
This sample shows how to call PutAllAsync with all parameters.
<code><![CDATA[
RequiredAndOptional client = new OptionalClient().GetRequiredAndOptionalClient();

RequiredAndOptionalProperty body = new RequiredAndOptionalProperty(1234)
{
    OptionalProperty = "<optionalProperty>",
};
Response response = await client.PutAllAsync(body);
]]></code></example>
    </member>
    <member name="PutAll(RequiredAndOptionalProperty,CancellationToken)">
      <example>
This sample shows how to call PutAll.
<code><![CDATA[
RequiredAndOptional client = new OptionalClient().GetRequiredAndOptionalClient();

RequiredAndOptionalProperty body = new RequiredAndOptionalProperty(1234);
Response response = client.PutAll(body);
]]></code>
This sample shows how to call PutAll with all parameters.
<code><![CDATA[
RequiredAndOptional client = new OptionalClient().GetRequiredAndOptionalClient();

RequiredAndOptionalProperty body = new RequiredAndOptionalProperty(1234)
{
    OptionalProperty = "<optionalProperty>",
};
Response response = client.PutAll(body);
]]></code></example>
    </member>
    <member name="PutAllAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutAllAsync.
<code><![CDATA[
RequiredAndOptional client = new OptionalClient().GetRequiredAndOptionalClient();

using RequestContent content = RequestContent.Create(new
{
    requiredProperty = 1234,
});
Response response = await client.PutAllAsync(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call PutAllAsync with all request content.
<code><![CDATA[
RequiredAndOptional client = new OptionalClient().GetRequiredAndOptionalClient();

using RequestContent content = RequestContent.Create(new
{
    optionalProperty = "<optionalProperty>",
    requiredProperty = 1234,
});
Response response = await client.PutAllAsync(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PutAll(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutAll.
<code><![CDATA[
RequiredAndOptional client = new OptionalClient().GetRequiredAndOptionalClient();

using RequestContent content = RequestContent.Create(new
{
    requiredProperty = 1234,
});
Response response = client.PutAll(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call PutAll with all request content.
<code><![CDATA[
RequiredAndOptional client = new OptionalClient().GetRequiredAndOptionalClient();

using RequestContent content = RequestContent.Create(new
{
    optionalProperty = "<optionalProperty>",
    requiredProperty = 1234,
});
Response response = client.PutAll(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PutRequiredOnlyAsync(RequiredAndOptionalProperty,CancellationToken)">
      <example>
This sample shows how to call PutRequiredOnlyAsync.
<code><![CDATA[
RequiredAndOptional client = new OptionalClient().GetRequiredAndOptionalClient();

RequiredAndOptionalProperty body = new RequiredAndOptionalProperty(1234);
Response response = await client.PutRequiredOnlyAsync(body);
]]></code>
This sample shows how to call PutRequiredOnlyAsync with all parameters.
<code><![CDATA[
RequiredAndOptional client = new OptionalClient().GetRequiredAndOptionalClient();

RequiredAndOptionalProperty body = new RequiredAndOptionalProperty(1234)
{
    OptionalProperty = "<optionalProperty>",
};
Response response = await client.PutRequiredOnlyAsync(body);
]]></code></example>
    </member>
    <member name="PutRequiredOnly(RequiredAndOptionalProperty,CancellationToken)">
      <example>
This sample shows how to call PutRequiredOnly.
<code><![CDATA[
RequiredAndOptional client = new OptionalClient().GetRequiredAndOptionalClient();

RequiredAndOptionalProperty body = new RequiredAndOptionalProperty(1234);
Response response = client.PutRequiredOnly(body);
]]></code>
This sample shows how to call PutRequiredOnly with all parameters.
<code><![CDATA[
RequiredAndOptional client = new OptionalClient().GetRequiredAndOptionalClient();

RequiredAndOptionalProperty body = new RequiredAndOptionalProperty(1234)
{
    OptionalProperty = "<optionalProperty>",
};
Response response = client.PutRequiredOnly(body);
]]></code></example>
    </member>
    <member name="PutRequiredOnlyAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutRequiredOnlyAsync.
<code><![CDATA[
RequiredAndOptional client = new OptionalClient().GetRequiredAndOptionalClient();

using RequestContent content = RequestContent.Create(new
{
    requiredProperty = 1234,
});
Response response = await client.PutRequiredOnlyAsync(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call PutRequiredOnlyAsync with all request content.
<code><![CDATA[
RequiredAndOptional client = new OptionalClient().GetRequiredAndOptionalClient();

using RequestContent content = RequestContent.Create(new
{
    optionalProperty = "<optionalProperty>",
    requiredProperty = 1234,
});
Response response = await client.PutRequiredOnlyAsync(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PutRequiredOnly(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutRequiredOnly.
<code><![CDATA[
RequiredAndOptional client = new OptionalClient().GetRequiredAndOptionalClient();

using RequestContent content = RequestContent.Create(new
{
    requiredProperty = 1234,
});
Response response = client.PutRequiredOnly(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call PutRequiredOnly with all request content.
<code><![CDATA[
RequiredAndOptional client = new OptionalClient().GetRequiredAndOptionalClient();

using RequestContent content = RequestContent.Create(new
{
    optionalProperty = "<optionalProperty>",
    requiredProperty = 1234,
});
Response response = client.PutRequiredOnly(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
  </members>
</doc>