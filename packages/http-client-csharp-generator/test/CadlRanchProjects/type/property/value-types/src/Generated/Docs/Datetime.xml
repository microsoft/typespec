<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetDatetimeAsync(CancellationToken)">
      <example>
This sample shows how to call GetDatetimeAsync.
<code><![CDATA[
Datetime client = new ValueTypesClient().GetDatetimeClient();

Response<DatetimeProperty> response = await client.GetDatetimeAsync();
]]></code>
This sample shows how to call GetDatetimeAsync with all parameters.
<code><![CDATA[
Datetime client = new ValueTypesClient().GetDatetimeClient();

Response<DatetimeProperty> response = await client.GetDatetimeAsync();
]]></code></example>
    </member>
    <member name="GetDatetime(CancellationToken)">
      <example>
This sample shows how to call GetDatetime.
<code><![CDATA[
Datetime client = new ValueTypesClient().GetDatetimeClient();

Response<DatetimeProperty> response = client.GetDatetime();
]]></code>
This sample shows how to call GetDatetime with all parameters.
<code><![CDATA[
Datetime client = new ValueTypesClient().GetDatetimeClient();

Response<DatetimeProperty> response = client.GetDatetime();
]]></code></example>
    </member>
    <member name="GetDatetimeAsync(RequestContext)">
      <example>
This sample shows how to call GetDatetimeAsync and parse the result.
<code><![CDATA[
Datetime client = new ValueTypesClient().GetDatetimeClient();

Response response = await client.GetDatetimeAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("property").ToString());
]]></code>
This sample shows how to call GetDatetimeAsync with all parameters and parse the result.
<code><![CDATA[
Datetime client = new ValueTypesClient().GetDatetimeClient();

Response response = await client.GetDatetimeAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("property").ToString());
]]></code></example>
    </member>
    <member name="GetDatetime(RequestContext)">
      <example>
This sample shows how to call GetDatetime and parse the result.
<code><![CDATA[
Datetime client = new ValueTypesClient().GetDatetimeClient();

Response response = client.GetDatetime(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("property").ToString());
]]></code>
This sample shows how to call GetDatetime with all parameters and parse the result.
<code><![CDATA[
Datetime client = new ValueTypesClient().GetDatetimeClient();

Response response = client.GetDatetime(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("property").ToString());
]]></code></example>
    </member>
    <member name="PutAsync(DatetimeProperty,CancellationToken)">
      <example>
This sample shows how to call PutAsync.
<code><![CDATA[
Datetime client = new ValueTypesClient().GetDatetimeClient();

DatetimeProperty body = new DatetimeProperty(DateTimeOffset.Parse("2022-05-10T14:57:31.2311892-04:00"));
Response response = await client.PutAsync(body);
]]></code>
This sample shows how to call PutAsync with all parameters.
<code><![CDATA[
Datetime client = new ValueTypesClient().GetDatetimeClient();

DatetimeProperty body = new DatetimeProperty(DateTimeOffset.Parse("2022-05-10T14:57:31.2311892-04:00"));
Response response = await client.PutAsync(body);
]]></code></example>
    </member>
    <member name="Put(DatetimeProperty,CancellationToken)">
      <example>
This sample shows how to call Put.
<code><![CDATA[
Datetime client = new ValueTypesClient().GetDatetimeClient();

DatetimeProperty body = new DatetimeProperty(DateTimeOffset.Parse("2022-05-10T14:57:31.2311892-04:00"));
Response response = client.Put(body);
]]></code>
This sample shows how to call Put with all parameters.
<code><![CDATA[
Datetime client = new ValueTypesClient().GetDatetimeClient();

DatetimeProperty body = new DatetimeProperty(DateTimeOffset.Parse("2022-05-10T14:57:31.2311892-04:00"));
Response response = client.Put(body);
]]></code></example>
    </member>
    <member name="PutAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutAsync.
<code><![CDATA[
Datetime client = new ValueTypesClient().GetDatetimeClient();

using RequestContent content = RequestContent.Create(new
{
    property = "2022-05-10T14:57:31.2311892-04:00",
});
Response response = await client.PutAsync(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call PutAsync with all request content.
<code><![CDATA[
Datetime client = new ValueTypesClient().GetDatetimeClient();

using RequestContent content = RequestContent.Create(new
{
    property = "2022-05-10T14:57:31.2311892-04:00",
});
Response response = await client.PutAsync(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Put(RequestContent,RequestContext)">
      <example>
This sample shows how to call Put.
<code><![CDATA[
Datetime client = new ValueTypesClient().GetDatetimeClient();

using RequestContent content = RequestContent.Create(new
{
    property = "2022-05-10T14:57:31.2311892-04:00",
});
Response response = client.Put(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call Put with all request content.
<code><![CDATA[
Datetime client = new ValueTypesClient().GetDatetimeClient();

using RequestContent content = RequestContent.Create(new
{
    property = "2022-05-10T14:57:31.2311892-04:00",
});
Response response = client.Put(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
  </members>
</doc>