<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetCollectionsModelAsync(CancellationToken)">
      <example>
This sample shows how to call GetCollectionsModelAsync.
<code><![CDATA[
CollectionsModel client = new ValueTypesClient().GetCollectionsModelClient();

Response<CollectionsModelProperty> response = await client.GetCollectionsModelAsync();
]]></code>
This sample shows how to call GetCollectionsModelAsync with all parameters.
<code><![CDATA[
CollectionsModel client = new ValueTypesClient().GetCollectionsModelClient();

Response<CollectionsModelProperty> response = await client.GetCollectionsModelAsync();
]]></code></example>
    </member>
    <member name="GetCollectionsModel(CancellationToken)">
      <example>
This sample shows how to call GetCollectionsModel.
<code><![CDATA[
CollectionsModel client = new ValueTypesClient().GetCollectionsModelClient();

Response<CollectionsModelProperty> response = client.GetCollectionsModel();
]]></code>
This sample shows how to call GetCollectionsModel with all parameters.
<code><![CDATA[
CollectionsModel client = new ValueTypesClient().GetCollectionsModelClient();

Response<CollectionsModelProperty> response = client.GetCollectionsModel();
]]></code></example>
    </member>
    <member name="GetCollectionsModelAsync(RequestContext)">
      <example>
This sample shows how to call GetCollectionsModelAsync and parse the result.
<code><![CDATA[
CollectionsModel client = new ValueTypesClient().GetCollectionsModelClient();

Response response = await client.GetCollectionsModelAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("property")[0].GetProperty("property").ToString());
]]></code>
This sample shows how to call GetCollectionsModelAsync with all parameters and parse the result.
<code><![CDATA[
CollectionsModel client = new ValueTypesClient().GetCollectionsModelClient();

Response response = await client.GetCollectionsModelAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("property")[0].GetProperty("property").ToString());
]]></code></example>
    </member>
    <member name="GetCollectionsModel(RequestContext)">
      <example>
This sample shows how to call GetCollectionsModel and parse the result.
<code><![CDATA[
CollectionsModel client = new ValueTypesClient().GetCollectionsModelClient();

Response response = client.GetCollectionsModel(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("property")[0].GetProperty("property").ToString());
]]></code>
This sample shows how to call GetCollectionsModel with all parameters and parse the result.
<code><![CDATA[
CollectionsModel client = new ValueTypesClient().GetCollectionsModelClient();

Response response = client.GetCollectionsModel(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("property")[0].GetProperty("property").ToString());
]]></code></example>
    </member>
    <member name="PutAsync(CollectionsModelProperty,CancellationToken)">
      <example>
This sample shows how to call PutAsync.
<code><![CDATA[
CollectionsModel client = new ValueTypesClient().GetCollectionsModelClient();

CollectionsModelProperty body = new CollectionsModelProperty(new InnerModel[]
{
    new InnerModel("<property>")
});
Response response = await client.PutAsync(body);
]]></code>
This sample shows how to call PutAsync with all parameters.
<code><![CDATA[
CollectionsModel client = new ValueTypesClient().GetCollectionsModelClient();

CollectionsModelProperty body = new CollectionsModelProperty(new InnerModel[]
{
    new InnerModel("<property>")
});
Response response = await client.PutAsync(body);
]]></code></example>
    </member>
    <member name="Put(CollectionsModelProperty,CancellationToken)">
      <example>
This sample shows how to call Put.
<code><![CDATA[
CollectionsModel client = new ValueTypesClient().GetCollectionsModelClient();

CollectionsModelProperty body = new CollectionsModelProperty(new InnerModel[]
{
    new InnerModel("<property>")
});
Response response = client.Put(body);
]]></code>
This sample shows how to call Put with all parameters.
<code><![CDATA[
CollectionsModel client = new ValueTypesClient().GetCollectionsModelClient();

CollectionsModelProperty body = new CollectionsModelProperty(new InnerModel[]
{
    new InnerModel("<property>")
});
Response response = client.Put(body);
]]></code></example>
    </member>
    <member name="PutAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutAsync.
<code><![CDATA[
CollectionsModel client = new ValueTypesClient().GetCollectionsModelClient();

using RequestContent content = RequestContent.Create(new
{
    property = new object[]
    {
        new
        {
            property = "<property>",
        }
    },
});
Response response = await client.PutAsync(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call PutAsync with all request content.
<code><![CDATA[
CollectionsModel client = new ValueTypesClient().GetCollectionsModelClient();

using RequestContent content = RequestContent.Create(new
{
    property = new object[]
    {
        new
        {
            property = "<property>",
        }
    },
});
Response response = await client.PutAsync(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Put(RequestContent,RequestContext)">
      <example>
This sample shows how to call Put.
<code><![CDATA[
CollectionsModel client = new ValueTypesClient().GetCollectionsModelClient();

using RequestContent content = RequestContent.Create(new
{
    property = new object[]
    {
        new
        {
            property = "<property>",
        }
    },
});
Response response = client.Put(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call Put with all request content.
<code><![CDATA[
CollectionsModel client = new ValueTypesClient().GetCollectionsModelClient();

using RequestContent content = RequestContent.Create(new
{
    property = new object[]
    {
        new
        {
            property = "<property>",
        }
    },
});
Response response = client.Put(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
  </members>
</doc>