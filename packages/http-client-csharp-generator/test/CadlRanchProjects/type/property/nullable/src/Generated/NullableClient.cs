// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using Azure.Core;
using Azure.Core.Pipeline;

namespace _Type.Property.Nullable
{
    // Data plane generated client.
    /// <summary> The Nullable service client. </summary>
    public partial class NullableClient
    {
        private readonly HttpPipeline _pipeline;
        private readonly Uri _endpoint;

        /// <summary> The ClientDiagnostics is used to provide tracing support for the client library. </summary>
        internal ClientDiagnostics ClientDiagnostics { get; }

        /// <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        public virtual HttpPipeline Pipeline => _pipeline;

        /// <summary> Initializes a new instance of NullableClient. </summary>
        public NullableClient() : this(new Uri("http://localhost:3000"), new NullableClientOptions())
        {
        }

        /// <summary> Initializes a new instance of NullableClient. </summary>
        /// <param name="endpoint"> TestServer endpoint. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="endpoint"/> is null. </exception>
        public NullableClient(Uri endpoint, NullableClientOptions options)
        {
            if (endpoint == null)
            {
                throw new ArgumentNullException(nameof(endpoint));
            }
            options ??= new NullableClientOptions();

            ClientDiagnostics = new ClientDiagnostics(options, true);
            _pipeline = HttpPipelineBuilder.Build(options, Array.Empty<HttpPipelinePolicy>(), Array.Empty<HttpPipelinePolicy>(), new ResponseClassifier());
            _endpoint = endpoint;
        }

        private String _cachedString;
        private Bytes _cachedBytes;
        private Datetime _cachedDatetime;
        private Duration _cachedDuration;
        private CollectionsByte _cachedCollectionsByte;
        private CollectionsModel _cachedCollectionsModel;

        /// <summary> Initializes a new instance of String. </summary>
        public virtual String GetStringClient()
        {
            return Volatile.Read(ref _cachedString) ?? Interlocked.CompareExchange(ref _cachedString, new String(ClientDiagnostics, _pipeline, _endpoint), null) ?? _cachedString;
        }

        /// <summary> Initializes a new instance of Bytes. </summary>
        public virtual Bytes GetBytesClient()
        {
            return Volatile.Read(ref _cachedBytes) ?? Interlocked.CompareExchange(ref _cachedBytes, new Bytes(ClientDiagnostics, _pipeline, _endpoint), null) ?? _cachedBytes;
        }

        /// <summary> Initializes a new instance of Datetime. </summary>
        public virtual Datetime GetDatetimeClient()
        {
            return Volatile.Read(ref _cachedDatetime) ?? Interlocked.CompareExchange(ref _cachedDatetime, new Datetime(ClientDiagnostics, _pipeline, _endpoint), null) ?? _cachedDatetime;
        }

        /// <summary> Initializes a new instance of Duration. </summary>
        public virtual Duration GetDurationClient()
        {
            return Volatile.Read(ref _cachedDuration) ?? Interlocked.CompareExchange(ref _cachedDuration, new Duration(ClientDiagnostics, _pipeline, _endpoint), null) ?? _cachedDuration;
        }

        /// <summary> Initializes a new instance of CollectionsByte. </summary>
        public virtual CollectionsByte GetCollectionsByteClient()
        {
            return Volatile.Read(ref _cachedCollectionsByte) ?? Interlocked.CompareExchange(ref _cachedCollectionsByte, new CollectionsByte(ClientDiagnostics, _pipeline, _endpoint), null) ?? _cachedCollectionsByte;
        }

        /// <summary> Initializes a new instance of CollectionsModel. </summary>
        public virtual CollectionsModel GetCollectionsModelClient()
        {
            return Volatile.Read(ref _cachedCollectionsModel) ?? Interlocked.CompareExchange(ref _cachedCollectionsModel, new CollectionsModel(ClientDiagnostics, _pipeline, _endpoint), null) ?? _cachedCollectionsModel;
        }
    }
}
