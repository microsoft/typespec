// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Linq;

namespace _Type.Model.Inheritance.Recursive.Models
{
    /// <summary> Model factory for models. </summary>
    public static partial class TypeModelInheritanceRecursiveModelFactory
    {
        /// <summary> Initializes a new instance of <see cref="Models.Element"/>. </summary>
        /// <param name="extension"></param>
        /// <returns> A new <see cref="Models.Element"/> instance for mocking. </returns>
        public static Element Element(IEnumerable<Extension> extension = null)
        {
            extension ??= new List<Extension>();

            return new Element(extension?.ToList(), serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.Extension"/>. </summary>
        /// <param name="extension"></param>
        /// <param name="level"></param>
        /// <returns> A new <see cref="Models.Extension"/> instance for mocking. </returns>
        public static Extension Extension(IEnumerable<Extension> extension = null, sbyte level = default)
        {
            extension ??= new List<Extension>();

            return new Extension(extension?.ToList(), serializedAdditionalRawData: null, level);
        }
    }
}
