// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Identity;
using NUnit.Framework;
using SpecialHeaders.ConditionalRequest;

namespace SpecialHeaders.ConditionalRequest.Samples
{
    public partial class Samples_ConditionalRequestClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ConditionalRequest_PostIfMatch_ShortVersion()
        {
            ConditionalRequestClient client = new ConditionalRequestClient();

            Response response = client.PostIfMatch();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ConditionalRequest_PostIfMatch_ShortVersion_Async()
        {
            ConditionalRequestClient client = new ConditionalRequestClient();

            Response response = await client.PostIfMatchAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ConditionalRequest_PostIfMatch_AllParameters()
        {
            ConditionalRequestClient client = new ConditionalRequestClient();

            Response response = client.PostIfMatch(ifMatch: new ETag("<ifMatch>"));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ConditionalRequest_PostIfMatch_AllParameters_Async()
        {
            ConditionalRequestClient client = new ConditionalRequestClient();

            Response response = await client.PostIfMatchAsync(ifMatch: new ETag("<ifMatch>"));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ConditionalRequest_PostIfNoneMatch_ShortVersion()
        {
            ConditionalRequestClient client = new ConditionalRequestClient();

            Response response = client.PostIfNoneMatch();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ConditionalRequest_PostIfNoneMatch_ShortVersion_Async()
        {
            ConditionalRequestClient client = new ConditionalRequestClient();

            Response response = await client.PostIfNoneMatchAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ConditionalRequest_PostIfNoneMatch_AllParameters()
        {
            ConditionalRequestClient client = new ConditionalRequestClient();

            Response response = client.PostIfNoneMatch(ifNoneMatch: new ETag("<ifNoneMatch>"));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ConditionalRequest_PostIfNoneMatch_AllParameters_Async()
        {
            ConditionalRequestClient client = new ConditionalRequestClient();

            Response response = await client.PostIfNoneMatchAsync(ifNoneMatch: new ETag("<ifNoneMatch>"));

            Console.WriteLine(response.Status);
        }
    }
}
