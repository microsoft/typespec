// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using SpecialWords;

namespace SpecialWords.Samples
{
    public partial class Samples_ModelsOps
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithAnd_ShortVersion()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithAnd(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithAnd_ShortVersion_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithAndAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithAnd_ShortVersion_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            And body = new And("<name>");
            Response response = client.WithAnd(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithAnd_ShortVersion_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            And body = new And("<name>");
            Response response = await client.WithAndAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithAnd_AllParameters()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithAnd(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithAnd_AllParameters_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithAndAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithAnd_AllParameters_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            And body = new And("<name>");
            Response response = client.WithAnd(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithAnd_AllParameters_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            And body = new And("<name>");
            Response response = await client.WithAndAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithAs_ShortVersion()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithAs(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithAs_ShortVersion_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithAsAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithAs_ShortVersion_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            As body = new As("<name>");
            Response response = client.WithAs(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithAs_ShortVersion_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            As body = new As("<name>");
            Response response = await client.WithAsAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithAs_AllParameters()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithAs(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithAs_AllParameters_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithAsAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithAs_AllParameters_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            As body = new As("<name>");
            Response response = client.WithAs(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithAs_AllParameters_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            As body = new As("<name>");
            Response response = await client.WithAsAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithAssert_ShortVersion()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithAssert(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithAssert_ShortVersion_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithAssertAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithAssert_ShortVersion_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Assert body = new Assert("<name>");
            Response response = client.WithAssert(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithAssert_ShortVersion_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Assert body = new Assert("<name>");
            Response response = await client.WithAssertAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithAssert_AllParameters()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithAssert(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithAssert_AllParameters_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithAssertAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithAssert_AllParameters_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Assert body = new Assert("<name>");
            Response response = client.WithAssert(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithAssert_AllParameters_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Assert body = new Assert("<name>");
            Response response = await client.WithAssertAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithAsync_ShortVersion()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithAsync_ShortVersion_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithAsyncAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithAsync_ShortVersion_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Async body = new Async("<name>");
            Response response = client.WithAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithAsync_ShortVersion_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Async body = new Async("<name>");
            Response response = await client.WithAsyncAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithAsync_AllParameters()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithAsync_AllParameters_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithAsyncAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithAsync_AllParameters_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Async body = new Async("<name>");
            Response response = client.WithAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithAsync_AllParameters_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Async body = new Async("<name>");
            Response response = await client.WithAsyncAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithAwait_ShortVersion()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithAwait(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithAwait_ShortVersion_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithAwaitAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithAwait_ShortVersion_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Await body = new Await("<name>");
            Response response = client.WithAwait(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithAwait_ShortVersion_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Await body = new Await("<name>");
            Response response = await client.WithAwaitAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithAwait_AllParameters()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithAwait(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithAwait_AllParameters_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithAwaitAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithAwait_AllParameters_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Await body = new Await("<name>");
            Response response = client.WithAwait(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithAwait_AllParameters_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Await body = new Await("<name>");
            Response response = await client.WithAwaitAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithBreak_ShortVersion()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithBreak(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithBreak_ShortVersion_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithBreakAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithBreak_ShortVersion_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Break body = new Break("<name>");
            Response response = client.WithBreak(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithBreak_ShortVersion_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Break body = new Break("<name>");
            Response response = await client.WithBreakAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithBreak_AllParameters()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithBreak(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithBreak_AllParameters_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithBreakAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithBreak_AllParameters_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Break body = new Break("<name>");
            Response response = client.WithBreak(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithBreak_AllParameters_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Break body = new Break("<name>");
            Response response = await client.WithBreakAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithClass_ShortVersion()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithClass(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithClass_ShortVersion_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithClassAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithClass_ShortVersion_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Class body = new Class("<name>");
            Response response = client.WithClass(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithClass_ShortVersion_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Class body = new Class("<name>");
            Response response = await client.WithClassAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithClass_AllParameters()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithClass(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithClass_AllParameters_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithClassAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithClass_AllParameters_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Class body = new Class("<name>");
            Response response = client.WithClass(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithClass_AllParameters_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Class body = new Class("<name>");
            Response response = await client.WithClassAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithConstructor_ShortVersion()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithConstructor(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithConstructor_ShortVersion_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithConstructorAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithConstructor_ShortVersion_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Constructor body = new Constructor("<name>");
            Response response = client.WithConstructor(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithConstructor_ShortVersion_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Constructor body = new Constructor("<name>");
            Response response = await client.WithConstructorAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithConstructor_AllParameters()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithConstructor(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithConstructor_AllParameters_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithConstructorAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithConstructor_AllParameters_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Constructor body = new Constructor("<name>");
            Response response = client.WithConstructor(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithConstructor_AllParameters_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Constructor body = new Constructor("<name>");
            Response response = await client.WithConstructorAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithContinue_ShortVersion()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithContinue(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithContinue_ShortVersion_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithContinueAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithContinue_ShortVersion_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Continue body = new Continue("<name>");
            Response response = client.WithContinue(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithContinue_ShortVersion_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Continue body = new Continue("<name>");
            Response response = await client.WithContinueAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithContinue_AllParameters()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithContinue(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithContinue_AllParameters_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithContinueAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithContinue_AllParameters_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Continue body = new Continue("<name>");
            Response response = client.WithContinue(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithContinue_AllParameters_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Continue body = new Continue("<name>");
            Response response = await client.WithContinueAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithDef_ShortVersion()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithDef(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithDef_ShortVersion_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithDefAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithDef_ShortVersion_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Def body = new Def("<name>");
            Response response = client.WithDef(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithDef_ShortVersion_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Def body = new Def("<name>");
            Response response = await client.WithDefAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithDef_AllParameters()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithDef(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithDef_AllParameters_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithDefAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithDef_AllParameters_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Def body = new Def("<name>");
            Response response = client.WithDef(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithDef_AllParameters_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Def body = new Def("<name>");
            Response response = await client.WithDefAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithDel_ShortVersion()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithDel(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithDel_ShortVersion_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithDelAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithDel_ShortVersion_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Del body = new Del("<name>");
            Response response = client.WithDel(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithDel_ShortVersion_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Del body = new Del("<name>");
            Response response = await client.WithDelAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithDel_AllParameters()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithDel(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithDel_AllParameters_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithDelAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithDel_AllParameters_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Del body = new Del("<name>");
            Response response = client.WithDel(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithDel_AllParameters_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Del body = new Del("<name>");
            Response response = await client.WithDelAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithElif_ShortVersion()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithElif(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithElif_ShortVersion_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithElifAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithElif_ShortVersion_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Elif body = new Elif("<name>");
            Response response = client.WithElif(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithElif_ShortVersion_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Elif body = new Elif("<name>");
            Response response = await client.WithElifAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithElif_AllParameters()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithElif(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithElif_AllParameters_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithElifAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithElif_AllParameters_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Elif body = new Elif("<name>");
            Response response = client.WithElif(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithElif_AllParameters_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Elif body = new Elif("<name>");
            Response response = await client.WithElifAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithElse_ShortVersion()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithElse(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithElse_ShortVersion_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithElseAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithElse_ShortVersion_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Else body = new Else("<name>");
            Response response = client.WithElse(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithElse_ShortVersion_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Else body = new Else("<name>");
            Response response = await client.WithElseAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithElse_AllParameters()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithElse(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithElse_AllParameters_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithElseAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithElse_AllParameters_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Else body = new Else("<name>");
            Response response = client.WithElse(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithElse_AllParameters_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Else body = new Else("<name>");
            Response response = await client.WithElseAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithExcept_ShortVersion()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithExcept(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithExcept_ShortVersion_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithExceptAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithExcept_ShortVersion_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Except body = new Except("<name>");
            Response response = client.WithExcept(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithExcept_ShortVersion_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Except body = new Except("<name>");
            Response response = await client.WithExceptAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithExcept_AllParameters()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithExcept(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithExcept_AllParameters_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithExceptAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithExcept_AllParameters_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Except body = new Except("<name>");
            Response response = client.WithExcept(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithExcept_AllParameters_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Except body = new Except("<name>");
            Response response = await client.WithExceptAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithExec_ShortVersion()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithExec(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithExec_ShortVersion_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithExecAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithExec_ShortVersion_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Exec body = new Exec("<name>");
            Response response = client.WithExec(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithExec_ShortVersion_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Exec body = new Exec("<name>");
            Response response = await client.WithExecAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithExec_AllParameters()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithExec(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithExec_AllParameters_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithExecAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithExec_AllParameters_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Exec body = new Exec("<name>");
            Response response = client.WithExec(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithExec_AllParameters_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Exec body = new Exec("<name>");
            Response response = await client.WithExecAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithFinally_ShortVersion()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithFinally(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithFinally_ShortVersion_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithFinallyAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithFinally_ShortVersion_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Finally body = new Finally("<name>");
            Response response = client.WithFinally(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithFinally_ShortVersion_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Finally body = new Finally("<name>");
            Response response = await client.WithFinallyAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithFinally_AllParameters()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithFinally(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithFinally_AllParameters_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithFinallyAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithFinally_AllParameters_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Finally body = new Finally("<name>");
            Response response = client.WithFinally(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithFinally_AllParameters_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Finally body = new Finally("<name>");
            Response response = await client.WithFinallyAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithFor_ShortVersion()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithFor(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithFor_ShortVersion_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithForAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithFor_ShortVersion_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            For body = new For("<name>");
            Response response = client.WithFor(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithFor_ShortVersion_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            For body = new For("<name>");
            Response response = await client.WithForAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithFor_AllParameters()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithFor(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithFor_AllParameters_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithForAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithFor_AllParameters_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            For body = new For("<name>");
            Response response = client.WithFor(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithFor_AllParameters_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            For body = new For("<name>");
            Response response = await client.WithForAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithFrom_ShortVersion()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithFrom(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithFrom_ShortVersion_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithFromAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithFrom_ShortVersion_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            From body = new From("<name>");
            Response response = client.WithFrom(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithFrom_ShortVersion_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            From body = new From("<name>");
            Response response = await client.WithFromAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithFrom_AllParameters()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithFrom(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithFrom_AllParameters_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithFromAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithFrom_AllParameters_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            From body = new From("<name>");
            Response response = client.WithFrom(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithFrom_AllParameters_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            From body = new From("<name>");
            Response response = await client.WithFromAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithGlobal_ShortVersion()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithGlobal(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithGlobal_ShortVersion_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithGlobalAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithGlobal_ShortVersion_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Global body = new Global("<name>");
            Response response = client.WithGlobal(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithGlobal_ShortVersion_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Global body = new Global("<name>");
            Response response = await client.WithGlobalAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithGlobal_AllParameters()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithGlobal(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithGlobal_AllParameters_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithGlobalAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithGlobal_AllParameters_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Global body = new Global("<name>");
            Response response = client.WithGlobal(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithGlobal_AllParameters_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Global body = new Global("<name>");
            Response response = await client.WithGlobalAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithIf_ShortVersion()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithIf(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithIf_ShortVersion_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithIfAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithIf_ShortVersion_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            If body = new If("<name>");
            Response response = client.WithIf(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithIf_ShortVersion_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            If body = new If("<name>");
            Response response = await client.WithIfAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithIf_AllParameters()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithIf(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithIf_AllParameters_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithIfAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithIf_AllParameters_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            If body = new If("<name>");
            Response response = client.WithIf(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithIf_AllParameters_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            If body = new If("<name>");
            Response response = await client.WithIfAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithImport_ShortVersion()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithImport(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithImport_ShortVersion_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithImportAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithImport_ShortVersion_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Import body = new Import("<name>");
            Response response = client.WithImport(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithImport_ShortVersion_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Import body = new Import("<name>");
            Response response = await client.WithImportAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithImport_AllParameters()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithImport(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithImport_AllParameters_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithImportAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithImport_AllParameters_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Import body = new Import("<name>");
            Response response = client.WithImport(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithImport_AllParameters_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Import body = new Import("<name>");
            Response response = await client.WithImportAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithIn_ShortVersion()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithIn(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithIn_ShortVersion_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithInAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithIn_ShortVersion_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            In body = new In("<name>");
            Response response = client.WithIn(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithIn_ShortVersion_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            In body = new In("<name>");
            Response response = await client.WithInAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithIn_AllParameters()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithIn(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithIn_AllParameters_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithInAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithIn_AllParameters_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            In body = new In("<name>");
            Response response = client.WithIn(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithIn_AllParameters_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            In body = new In("<name>");
            Response response = await client.WithInAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithIs_ShortVersion()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithIs(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithIs_ShortVersion_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithIsAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithIs_ShortVersion_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Is body = new Is("<name>");
            Response response = client.WithIs(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithIs_ShortVersion_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Is body = new Is("<name>");
            Response response = await client.WithIsAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithIs_AllParameters()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithIs(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithIs_AllParameters_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithIsAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithIs_AllParameters_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Is body = new Is("<name>");
            Response response = client.WithIs(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithIs_AllParameters_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Is body = new Is("<name>");
            Response response = await client.WithIsAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithLambda_ShortVersion()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithLambda(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithLambda_ShortVersion_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithLambdaAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithLambda_ShortVersion_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Lambda body = new Lambda("<name>");
            Response response = client.WithLambda(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithLambda_ShortVersion_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Lambda body = new Lambda("<name>");
            Response response = await client.WithLambdaAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithLambda_AllParameters()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithLambda(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithLambda_AllParameters_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithLambdaAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithLambda_AllParameters_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Lambda body = new Lambda("<name>");
            Response response = client.WithLambda(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithLambda_AllParameters_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Lambda body = new Lambda("<name>");
            Response response = await client.WithLambdaAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithNot_ShortVersion()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithNot(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithNot_ShortVersion_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithNotAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithNot_ShortVersion_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Not body = new Not("<name>");
            Response response = client.WithNot(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithNot_ShortVersion_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Not body = new Not("<name>");
            Response response = await client.WithNotAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithNot_AllParameters()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithNot(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithNot_AllParameters_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithNotAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithNot_AllParameters_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Not body = new Not("<name>");
            Response response = client.WithNot(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithNot_AllParameters_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Not body = new Not("<name>");
            Response response = await client.WithNotAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithOr_ShortVersion()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithOr(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithOr_ShortVersion_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithOrAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithOr_ShortVersion_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Or body = new Or("<name>");
            Response response = client.WithOr(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithOr_ShortVersion_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Or body = new Or("<name>");
            Response response = await client.WithOrAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithOr_AllParameters()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithOr(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithOr_AllParameters_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithOrAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithOr_AllParameters_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Or body = new Or("<name>");
            Response response = client.WithOr(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithOr_AllParameters_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Or body = new Or("<name>");
            Response response = await client.WithOrAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithPass_ShortVersion()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithPass(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithPass_ShortVersion_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithPassAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithPass_ShortVersion_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Pass body = new Pass("<name>");
            Response response = client.WithPass(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithPass_ShortVersion_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Pass body = new Pass("<name>");
            Response response = await client.WithPassAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithPass_AllParameters()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithPass(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithPass_AllParameters_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithPassAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithPass_AllParameters_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Pass body = new Pass("<name>");
            Response response = client.WithPass(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithPass_AllParameters_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Pass body = new Pass("<name>");
            Response response = await client.WithPassAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithRaise_ShortVersion()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithRaise(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithRaise_ShortVersion_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithRaiseAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithRaise_ShortVersion_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Raise body = new Raise("<name>");
            Response response = client.WithRaise(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithRaise_ShortVersion_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Raise body = new Raise("<name>");
            Response response = await client.WithRaiseAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithRaise_AllParameters()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithRaise(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithRaise_AllParameters_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithRaiseAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithRaise_AllParameters_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Raise body = new Raise("<name>");
            Response response = client.WithRaise(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithRaise_AllParameters_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Raise body = new Raise("<name>");
            Response response = await client.WithRaiseAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithReturn_ShortVersion()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithReturn(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithReturn_ShortVersion_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithReturnAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithReturn_ShortVersion_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Return body = new Return("<name>");
            Response response = client.WithReturn(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithReturn_ShortVersion_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Return body = new Return("<name>");
            Response response = await client.WithReturnAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithReturn_AllParameters()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithReturn(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithReturn_AllParameters_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithReturnAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithReturn_AllParameters_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Return body = new Return("<name>");
            Response response = client.WithReturn(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithReturn_AllParameters_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Return body = new Return("<name>");
            Response response = await client.WithReturnAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithTry_ShortVersion()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithTry(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithTry_ShortVersion_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithTryAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithTry_ShortVersion_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Try body = new Try("<name>");
            Response response = client.WithTry(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithTry_ShortVersion_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Try body = new Try("<name>");
            Response response = await client.WithTryAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithTry_AllParameters()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithTry(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithTry_AllParameters_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithTryAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithTry_AllParameters_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Try body = new Try("<name>");
            Response response = client.WithTry(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithTry_AllParameters_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Try body = new Try("<name>");
            Response response = await client.WithTryAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithWhile_ShortVersion()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithWhile(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithWhile_ShortVersion_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithWhileAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithWhile_ShortVersion_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            While body = new While("<name>");
            Response response = client.WithWhile(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithWhile_ShortVersion_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            While body = new While("<name>");
            Response response = await client.WithWhileAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithWhile_AllParameters()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithWhile(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithWhile_AllParameters_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithWhileAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithWhile_AllParameters_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            While body = new While("<name>");
            Response response = client.WithWhile(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithWhile_AllParameters_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            While body = new While("<name>");
            Response response = await client.WithWhileAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithWith_ShortVersion()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithWith(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithWith_ShortVersion_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithWithAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithWith_ShortVersion_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            With body = new With("<name>");
            Response response = client.WithWith(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithWith_ShortVersion_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            With body = new With("<name>");
            Response response = await client.WithWithAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithWith_AllParameters()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithWith(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithWith_AllParameters_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithWithAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithWith_AllParameters_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            With body = new With("<name>");
            Response response = client.WithWith(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithWith_AllParameters_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            With body = new With("<name>");
            Response response = await client.WithWithAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithYield_ShortVersion()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithYield(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithYield_ShortVersion_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithYieldAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithYield_ShortVersion_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Yield body = new Yield("<name>");
            Response response = client.WithYield(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithYield_ShortVersion_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Yield body = new Yield("<name>");
            Response response = await client.WithYieldAsync(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithYield_AllParameters()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = client.WithYield(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithYield_AllParameters_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            Response response = await client.WithYieldAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Models_WithYield_AllParameters_Convenience()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Yield body = new Yield("<name>");
            Response response = client.WithYield(body);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Models_WithYield_AllParameters_Convenience_Async()
        {
            ModelsOps client = new SpecialWordsClient().GetModelsOpsClient();

            Yield body = new Yield("<name>");
            Response response = await client.WithYieldAsync(body);
        }
    }
}
