// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Identity;
using NUnit.Framework;
using Projection.ProjectedName;

namespace Projection.ProjectedName.Samples
{
    public partial class Samples_ProjectedNameClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ProjectedName_ClientName_ShortVersion()
        {
            ProjectedNameClient client = new ProjectedNameClient();

            Response response = client.ClientName();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ProjectedName_ClientName_ShortVersion_Async()
        {
            ProjectedNameClient client = new ProjectedNameClient();

            Response response = await client.ClientNameAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ProjectedName_ClientName_AllParameters()
        {
            ProjectedNameClient client = new ProjectedNameClient();

            Response response = client.ClientName();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ProjectedName_ClientName_AllParameters_Async()
        {
            ProjectedNameClient client = new ProjectedNameClient();

            Response response = await client.ClientNameAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ProjectedName_Parameter_ShortVersion()
        {
            ProjectedNameClient client = new ProjectedNameClient();

            Response response = client.Parameter("<clientName>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ProjectedName_Parameter_ShortVersion_Async()
        {
            ProjectedNameClient client = new ProjectedNameClient();

            Response response = await client.ParameterAsync("<clientName>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ProjectedName_Parameter_AllParameters()
        {
            ProjectedNameClient client = new ProjectedNameClient();

            Response response = client.Parameter("<clientName>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ProjectedName_Parameter_AllParameters_Async()
        {
            ProjectedNameClient client = new ProjectedNameClient();

            Response response = await client.ParameterAsync("<clientName>");

            Console.WriteLine(response.Status);
        }
    }
}
