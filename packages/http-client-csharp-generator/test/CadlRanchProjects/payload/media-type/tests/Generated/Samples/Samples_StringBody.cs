// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using Payload.MediaType;

namespace Payload.MediaType.Samples
{
    public partial class Samples_StringBody
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringBody_SendAsText_ShortVersion()
        {
            StringBody client = new MediaTypeClient().GetStringBodyClient();

            using RequestContent content = RequestContent.Create("<text>");
            Response response = client.SendAsText(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringBody_SendAsText_ShortVersion_Async()
        {
            StringBody client = new MediaTypeClient().GetStringBodyClient();

            using RequestContent content = RequestContent.Create("<text>");
            Response response = await client.SendAsTextAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringBody_SendAsText_ShortVersion_Convenience()
        {
            StringBody client = new MediaTypeClient().GetStringBodyClient();

            Response response = client.SendAsText("<text>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringBody_SendAsText_ShortVersion_Convenience_Async()
        {
            StringBody client = new MediaTypeClient().GetStringBodyClient();

            Response response = await client.SendAsTextAsync("<text>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringBody_SendAsText_AllParameters()
        {
            StringBody client = new MediaTypeClient().GetStringBodyClient();

            using RequestContent content = RequestContent.Create("<text>");
            Response response = client.SendAsText(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringBody_SendAsText_AllParameters_Async()
        {
            StringBody client = new MediaTypeClient().GetStringBodyClient();

            using RequestContent content = RequestContent.Create("<text>");
            Response response = await client.SendAsTextAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringBody_SendAsText_AllParameters_Convenience()
        {
            StringBody client = new MediaTypeClient().GetStringBodyClient();

            Response response = client.SendAsText("<text>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringBody_SendAsText_AllParameters_Convenience_Async()
        {
            StringBody client = new MediaTypeClient().GetStringBodyClient();

            Response response = await client.SendAsTextAsync("<text>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringBody_GetAsText_ShortVersion()
        {
            StringBody client = new MediaTypeClient().GetStringBodyClient();

            Response response = client.GetAsText(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringBody_GetAsText_ShortVersion_Async()
        {
            StringBody client = new MediaTypeClient().GetStringBodyClient();

            Response response = await client.GetAsTextAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringBody_GetAsText_ShortVersion_Convenience()
        {
            StringBody client = new MediaTypeClient().GetStringBodyClient();

            Response<string> response = client.GetAsText();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringBody_GetAsText_ShortVersion_Convenience_Async()
        {
            StringBody client = new MediaTypeClient().GetStringBodyClient();

            Response<string> response = await client.GetAsTextAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringBody_GetAsText_AllParameters()
        {
            StringBody client = new MediaTypeClient().GetStringBodyClient();

            Response response = client.GetAsText(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringBody_GetAsText_AllParameters_Async()
        {
            StringBody client = new MediaTypeClient().GetStringBodyClient();

            Response response = await client.GetAsTextAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringBody_GetAsText_AllParameters_Convenience()
        {
            StringBody client = new MediaTypeClient().GetStringBodyClient();

            Response<string> response = client.GetAsText();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringBody_GetAsText_AllParameters_Convenience_Async()
        {
            StringBody client = new MediaTypeClient().GetStringBodyClient();

            Response<string> response = await client.GetAsTextAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringBody_SendAsJson_ShortVersion()
        {
            StringBody client = new MediaTypeClient().GetStringBodyClient();

            using RequestContent content = RequestContent.Create("<text>");
            Response response = client.SendAsJson(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringBody_SendAsJson_ShortVersion_Async()
        {
            StringBody client = new MediaTypeClient().GetStringBodyClient();

            using RequestContent content = RequestContent.Create("<text>");
            Response response = await client.SendAsJsonAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringBody_SendAsJson_ShortVersion_Convenience()
        {
            StringBody client = new MediaTypeClient().GetStringBodyClient();

            Response response = client.SendAsJson("<text>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringBody_SendAsJson_ShortVersion_Convenience_Async()
        {
            StringBody client = new MediaTypeClient().GetStringBodyClient();

            Response response = await client.SendAsJsonAsync("<text>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringBody_SendAsJson_AllParameters()
        {
            StringBody client = new MediaTypeClient().GetStringBodyClient();

            using RequestContent content = RequestContent.Create("<text>");
            Response response = client.SendAsJson(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringBody_SendAsJson_AllParameters_Async()
        {
            StringBody client = new MediaTypeClient().GetStringBodyClient();

            using RequestContent content = RequestContent.Create("<text>");
            Response response = await client.SendAsJsonAsync(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringBody_SendAsJson_AllParameters_Convenience()
        {
            StringBody client = new MediaTypeClient().GetStringBodyClient();

            Response response = client.SendAsJson("<text>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringBody_SendAsJson_AllParameters_Convenience_Async()
        {
            StringBody client = new MediaTypeClient().GetStringBodyClient();

            Response response = await client.SendAsJsonAsync("<text>");
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringBody_GetAsJson_ShortVersion()
        {
            StringBody client = new MediaTypeClient().GetStringBodyClient();

            Response response = client.GetAsJson(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringBody_GetAsJson_ShortVersion_Async()
        {
            StringBody client = new MediaTypeClient().GetStringBodyClient();

            Response response = await client.GetAsJsonAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringBody_GetAsJson_ShortVersion_Convenience()
        {
            StringBody client = new MediaTypeClient().GetStringBodyClient();

            Response<string> response = client.GetAsJson();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringBody_GetAsJson_ShortVersion_Convenience_Async()
        {
            StringBody client = new MediaTypeClient().GetStringBodyClient();

            Response<string> response = await client.GetAsJsonAsync();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringBody_GetAsJson_AllParameters()
        {
            StringBody client = new MediaTypeClient().GetStringBodyClient();

            Response response = client.GetAsJson(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringBody_GetAsJson_AllParameters_Async()
        {
            StringBody client = new MediaTypeClient().GetStringBodyClient();

            Response response = await client.GetAsJsonAsync(null);

            JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringBody_GetAsJson_AllParameters_Convenience()
        {
            StringBody client = new MediaTypeClient().GetStringBodyClient();

            Response<string> response = client.GetAsJson();
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringBody_GetAsJson_AllParameters_Convenience_Async()
        {
            StringBody client = new MediaTypeClient().GetStringBodyClient();

            Response<string> response = await client.GetAsJsonAsync();
        }
    }
}
