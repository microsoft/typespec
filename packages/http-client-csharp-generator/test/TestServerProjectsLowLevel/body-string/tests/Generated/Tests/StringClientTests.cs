// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using body_string_LowLevel;

namespace body_string_LowLevel.Tests
{
    public partial class StringClientTests : body_string_LowLevelTestBase
    {
        public StringClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetNull_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            StringClient client = CreateStringClient(endpoint, credential);

            Response response = await client.GetNullAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetNull_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            StringClient client = CreateStringClient(endpoint, credential);

            Response response = await client.GetNullAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task PutNull_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            StringClient client = CreateStringClient(endpoint, credential);

            using RequestContent content = null;
            Response response = await client.PutNullAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task PutNull_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            StringClient client = CreateStringClient(endpoint, credential);

            using RequestContent content = RequestContent.Create("<stringBody>");
            Response response = await client.PutNullAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetEmpty_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            StringClient client = CreateStringClient(endpoint, credential);

            Response response = await client.GetEmptyAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetEmpty_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            StringClient client = CreateStringClient(endpoint, credential);

            Response response = await client.GetEmptyAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task PutEmpty_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            StringClient client = CreateStringClient(endpoint, credential);

            using RequestContent content = RequestContent.Create("");
            Response response = await client.PutEmptyAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task PutEmpty_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            StringClient client = CreateStringClient(endpoint, credential);

            using RequestContent content = RequestContent.Create("");
            Response response = await client.PutEmptyAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetMbcs_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            StringClient client = CreateStringClient(endpoint, credential);

            Response response = await client.GetMbcsAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetMbcs_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            StringClient client = CreateStringClient(endpoint, credential);

            Response response = await client.GetMbcsAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task PutMbcs_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            StringClient client = CreateStringClient(endpoint, credential);

            using RequestContent content = RequestContent.Create("啊齄丂狛狜隣郎隣兀﨩ˊ〞〡￤℡㈱‐ー﹡﹢﹫、〓ⅰⅹ⒈€㈠㈩ⅠⅫ！￣ぁんァヶΑ︴АЯаяāɡㄅㄩ─╋︵﹄︻︱︳︴ⅰⅹɑɡ〇〾⿻⺁䜣€");
            Response response = await client.PutMbcsAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task PutMbcs_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            StringClient client = CreateStringClient(endpoint, credential);

            using RequestContent content = RequestContent.Create("啊齄丂狛狜隣郎隣兀﨩ˊ〞〡￤℡㈱‐ー﹡﹢﹫、〓ⅰⅹ⒈€㈠㈩ⅠⅫ！￣ぁんァヶΑ︴АЯаяāɡㄅㄩ─╋︵﹄︻︱︳︴ⅰⅹɑɡ〇〾⿻⺁䜣€");
            Response response = await client.PutMbcsAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetWhitespace_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            StringClient client = CreateStringClient(endpoint, credential);

            Response response = await client.GetWhitespaceAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetWhitespace_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            StringClient client = CreateStringClient(endpoint, credential);

            Response response = await client.GetWhitespaceAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task PutWhitespace_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            StringClient client = CreateStringClient(endpoint, credential);

            using RequestContent content = RequestContent.Create("    Now is the time for all good men to come to the aid of their country    ");
            Response response = await client.PutWhitespaceAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task PutWhitespace_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            StringClient client = CreateStringClient(endpoint, credential);

            using RequestContent content = RequestContent.Create("    Now is the time for all good men to come to the aid of their country    ");
            Response response = await client.PutWhitespaceAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetNotProvided_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            StringClient client = CreateStringClient(endpoint, credential);

            Response response = await client.GetNotProvidedAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetNotProvided_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            StringClient client = CreateStringClient(endpoint, credential);

            Response response = await client.GetNotProvidedAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetBase64Encoded_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            StringClient client = CreateStringClient(endpoint, credential);

            Response response = await client.GetBase64EncodedAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetBase64Encoded_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            StringClient client = CreateStringClient(endpoint, credential);

            Response response = await client.GetBase64EncodedAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetBase64UrlEncoded_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            StringClient client = CreateStringClient(endpoint, credential);

            Response response = await client.GetBase64UrlEncodedAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetBase64UrlEncoded_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            StringClient client = CreateStringClient(endpoint, credential);

            Response response = await client.GetBase64UrlEncodedAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task PutBase64UrlEncoded_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            StringClient client = CreateStringClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new object());
            Response response = await client.PutBase64UrlEncodedAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task PutBase64UrlEncoded_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            StringClient client = CreateStringClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new object());
            Response response = await client.PutBase64UrlEncodedAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetNullBase64UrlEncoded_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            StringClient client = CreateStringClient(endpoint, credential);

            Response response = await client.GetNullBase64UrlEncodedAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetNullBase64UrlEncoded_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            StringClient client = CreateStringClient(endpoint, credential);

            Response response = await client.GetNullBase64UrlEncodedAsync(null);
        }
    }
}
