// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using httpInfrastructure_LowLevel;

namespace httpInfrastructure_LowLevel.Tests
{
    public partial class HttpClientFailureClientTests : httpInfrastructure_LowLevelTestBase
    {
        public HttpClientFailureClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Head400_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            Response response = await client.Head400Async();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Head400_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            Response response = await client.Head400Async();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Get400_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            Response response = await client.Get400Async();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Get400_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            Response response = await client.Get400Async();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Options400_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            Response response = await client.Options400Async();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Options400_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            Response response = await client.Options400Async();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Put400_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            using RequestContent content = null;
            Response response = await client.Put400Async(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Put400_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            using RequestContent content = RequestContent.Create("true");
            Response response = await client.Put400Async(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Patch400_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            using RequestContent content = null;
            Response response = await client.Patch400Async(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Patch400_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            using RequestContent content = RequestContent.Create("true");
            Response response = await client.Patch400Async(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Post400_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            using RequestContent content = null;
            Response response = await client.Post400Async(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Post400_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            using RequestContent content = RequestContent.Create("true");
            Response response = await client.Post400Async(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Delete400_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            using RequestContent content = null;
            Response response = await client.Delete400Async(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Delete400_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            using RequestContent content = RequestContent.Create("true");
            Response response = await client.Delete400Async(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Head401_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            Response response = await client.Head401Async();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Head401_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            Response response = await client.Head401Async();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Get402_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            Response response = await client.Get402Async();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Get402_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            Response response = await client.Get402Async();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Options403_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            Response response = await client.Options403Async();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Options403_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            Response response = await client.Options403Async();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Get403_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            Response response = await client.Get403Async();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Get403_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            Response response = await client.Get403Async();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Put404_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            using RequestContent content = null;
            Response response = await client.Put404Async(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Put404_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            using RequestContent content = RequestContent.Create("true");
            Response response = await client.Put404Async(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Patch405_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            using RequestContent content = null;
            Response response = await client.Patch405Async(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Patch405_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            using RequestContent content = RequestContent.Create("true");
            Response response = await client.Patch405Async(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Post406_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            using RequestContent content = null;
            Response response = await client.Post406Async(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Post406_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            using RequestContent content = RequestContent.Create("true");
            Response response = await client.Post406Async(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Delete407_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            using RequestContent content = null;
            Response response = await client.Delete407Async(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Delete407_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            using RequestContent content = RequestContent.Create("true");
            Response response = await client.Delete407Async(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Put409_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            using RequestContent content = null;
            Response response = await client.Put409Async(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Put409_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            using RequestContent content = RequestContent.Create("true");
            Response response = await client.Put409Async(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Head410_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            Response response = await client.Head410Async();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Head410_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            Response response = await client.Head410Async();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Get411_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            Response response = await client.Get411Async();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Get411_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            Response response = await client.Get411Async();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Options412_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            Response response = await client.Options412Async();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Options412_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            Response response = await client.Options412Async();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Get412_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            Response response = await client.Get412Async();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Get412_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            Response response = await client.Get412Async();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Put413_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            using RequestContent content = null;
            Response response = await client.Put413Async(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Put413_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            using RequestContent content = RequestContent.Create("true");
            Response response = await client.Put413Async(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Patch414_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            using RequestContent content = null;
            Response response = await client.Patch414Async(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Patch414_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            using RequestContent content = RequestContent.Create("true");
            Response response = await client.Patch414Async(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Post415_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            using RequestContent content = null;
            Response response = await client.Post415Async(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Post415_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            using RequestContent content = RequestContent.Create("true");
            Response response = await client.Post415Async(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Get416_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            Response response = await client.Get416Async();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Get416_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            Response response = await client.Get416Async();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Delete417_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            using RequestContent content = null;
            Response response = await client.Delete417Async(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Delete417_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            using RequestContent content = RequestContent.Create("true");
            Response response = await client.Delete417Async(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Head429_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            Response response = await client.Head429Async();
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task Head429_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpClientFailureClient client = CreateHttpClientFailureClient(endpoint, credential);

            Response response = await client.Head429Async();
        }
    }
}
