// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using Azure;
using Azure.Core.TestFramework;
using httpInfrastructure_LowLevel;

namespace httpInfrastructure_LowLevel.Tests
{
    public partial class httpInfrastructure_LowLevelTestBase : RecordedTestBase<httpInfrastructure_LowLevelTestEnvironment>
    {
        public httpInfrastructure_LowLevelTestBase(bool isAsync) : base(isAsync)
        {
        }

        protected HttpFailureClient CreateHttpFailureClient(Uri endpoint, AzureKeyCredential credential)
        {
            AutoRestHttpInfrastructureTestServiceClientOptions options = InstrumentClientOptions(new AutoRestHttpInfrastructureTestServiceClientOptions());
            HttpFailureClient client = new HttpFailureClient(endpoint, credential, options);
            return InstrumentClient(client);
        }

        protected HttpSuccessClient CreateHttpSuccessClient(Uri endpoint, AzureKeyCredential credential)
        {
            AutoRestHttpInfrastructureTestServiceClientOptions options = InstrumentClientOptions(new AutoRestHttpInfrastructureTestServiceClientOptions());
            HttpSuccessClient client = new HttpSuccessClient(endpoint, credential, options);
            return InstrumentClient(client);
        }

        protected HttpRedirectsClient CreateHttpRedirectsClient(Uri endpoint, AzureKeyCredential credential)
        {
            AutoRestHttpInfrastructureTestServiceClientOptions options = InstrumentClientOptions(new AutoRestHttpInfrastructureTestServiceClientOptions());
            HttpRedirectsClient client = new HttpRedirectsClient(endpoint, credential, options);
            return InstrumentClient(client);
        }

        protected HttpClientFailureClient CreateHttpClientFailureClient(Uri endpoint, AzureKeyCredential credential)
        {
            AutoRestHttpInfrastructureTestServiceClientOptions options = InstrumentClientOptions(new AutoRestHttpInfrastructureTestServiceClientOptions());
            HttpClientFailureClient client = new HttpClientFailureClient(endpoint, credential, options);
            return InstrumentClient(client);
        }

        protected HttpServerFailureClient CreateHttpServerFailureClient(Uri endpoint, AzureKeyCredential credential)
        {
            AutoRestHttpInfrastructureTestServiceClientOptions options = InstrumentClientOptions(new AutoRestHttpInfrastructureTestServiceClientOptions());
            HttpServerFailureClient client = new HttpServerFailureClient(endpoint, credential, options);
            return InstrumentClient(client);
        }

        protected HttpRetryClient CreateHttpRetryClient(Uri endpoint, AzureKeyCredential credential)
        {
            AutoRestHttpInfrastructureTestServiceClientOptions options = InstrumentClientOptions(new AutoRestHttpInfrastructureTestServiceClientOptions());
            HttpRetryClient client = new HttpRetryClient(endpoint, credential, options);
            return InstrumentClient(client);
        }

        protected MultipleResponsesClient CreateMultipleResponsesClient(Uri endpoint, AzureKeyCredential credential)
        {
            AutoRestHttpInfrastructureTestServiceClientOptions options = InstrumentClientOptions(new AutoRestHttpInfrastructureTestServiceClientOptions());
            MultipleResponsesClient client = new MultipleResponsesClient(endpoint, credential, options);
            return InstrumentClient(client);
        }
    }
}
