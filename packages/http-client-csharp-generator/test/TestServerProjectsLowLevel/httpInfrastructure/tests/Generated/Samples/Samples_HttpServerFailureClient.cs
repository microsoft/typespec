// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using httpInfrastructure_LowLevel;

namespace httpInfrastructure_LowLevel.Samples
{
    public partial class Samples_HttpServerFailureClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Head501_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpServerFailureClient client = new HttpServerFailureClient(credential);

            Response response = client.Head501();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Head501_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpServerFailureClient client = new HttpServerFailureClient(credential);

            Response response = await client.Head501Async();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Head501_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpServerFailureClient client = new HttpServerFailureClient(credential);

            Response response = client.Head501();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Head501_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpServerFailureClient client = new HttpServerFailureClient(credential);

            Response response = await client.Head501Async();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Get501_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpServerFailureClient client = new HttpServerFailureClient(credential);

            Response response = client.Get501();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Get501_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpServerFailureClient client = new HttpServerFailureClient(credential);

            Response response = await client.Get501Async();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Get501_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpServerFailureClient client = new HttpServerFailureClient(credential);

            Response response = client.Get501();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Get501_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpServerFailureClient client = new HttpServerFailureClient(credential);

            Response response = await client.Get501Async();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Post505_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpServerFailureClient client = new HttpServerFailureClient(credential);

            using RequestContent content = null;
            Response response = client.Post505(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Post505_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpServerFailureClient client = new HttpServerFailureClient(credential);

            using RequestContent content = null;
            Response response = await client.Post505Async(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Post505_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpServerFailureClient client = new HttpServerFailureClient(credential);

            using RequestContent content = RequestContent.Create("true");
            Response response = client.Post505(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Post505_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpServerFailureClient client = new HttpServerFailureClient(credential);

            using RequestContent content = RequestContent.Create("true");
            Response response = await client.Post505Async(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Delete505_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpServerFailureClient client = new HttpServerFailureClient(credential);

            using RequestContent content = null;
            Response response = client.Delete505(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Delete505_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpServerFailureClient client = new HttpServerFailureClient(credential);

            using RequestContent content = null;
            Response response = await client.Delete505Async(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Delete505_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpServerFailureClient client = new HttpServerFailureClient(credential);

            using RequestContent content = RequestContent.Create("true");
            Response response = client.Delete505(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Delete505_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpServerFailureClient client = new HttpServerFailureClient(credential);

            using RequestContent content = RequestContent.Create("true");
            Response response = await client.Delete505Async(content);

            Console.WriteLine(response.Status);
        }
    }
}
