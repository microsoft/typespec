// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using httpInfrastructure_LowLevel;

namespace httpInfrastructure_LowLevel.Samples
{
    public partial class Samples_HttpRedirectsClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Head300_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            Response response = client.Head300();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Head300_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            Response response = await client.Head300Async();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Head300_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            Response response = client.Head300();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Head300_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            Response response = await client.Head300Async();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Get300_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            Response response = client.Get300();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Get300_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            Response response = await client.Get300Async();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Get300_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            Response response = client.Get300();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Get300_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            Response response = await client.Get300Async();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Head301_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            Response response = client.Head301();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Head301_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            Response response = await client.Head301Async();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Head301_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            Response response = client.Head301();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Head301_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            Response response = await client.Head301Async();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Get301_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            Response response = client.Get301();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Get301_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            Response response = await client.Get301Async();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Get301_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            Response response = client.Get301();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Get301_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            Response response = await client.Get301Async();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Put301_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            using RequestContent content = null;
            Response response = client.Put301(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Put301_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            using RequestContent content = null;
            Response response = await client.Put301Async(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Put301_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            using RequestContent content = RequestContent.Create("true");
            Response response = client.Put301(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Put301_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            using RequestContent content = RequestContent.Create("true");
            Response response = await client.Put301Async(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Head302_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            Response response = client.Head302();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Head302_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            Response response = await client.Head302Async();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Head302_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            Response response = client.Head302();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Head302_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            Response response = await client.Head302Async();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Get302_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            Response response = client.Get302();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Get302_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            Response response = await client.Get302Async();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Get302_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            Response response = client.Get302();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Get302_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            Response response = await client.Get302Async();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Patch302_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            using RequestContent content = null;
            Response response = client.Patch302(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Patch302_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            using RequestContent content = null;
            Response response = await client.Patch302Async(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Patch302_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            using RequestContent content = RequestContent.Create("true");
            Response response = client.Patch302(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Patch302_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            using RequestContent content = RequestContent.Create("true");
            Response response = await client.Patch302Async(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Post303_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            using RequestContent content = null;
            Response response = client.Post303(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Post303_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            using RequestContent content = null;
            Response response = await client.Post303Async(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Post303_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            using RequestContent content = RequestContent.Create("true");
            Response response = client.Post303(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Post303_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            using RequestContent content = RequestContent.Create("true");
            Response response = await client.Post303Async(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Head307_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            Response response = client.Head307();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Head307_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            Response response = await client.Head307Async();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Head307_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            Response response = client.Head307();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Head307_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            Response response = await client.Head307Async();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Get307_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            Response response = client.Get307();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Get307_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            Response response = await client.Get307Async();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Get307_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            Response response = client.Get307();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Get307_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            Response response = await client.Get307Async();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Options307_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            Response response = client.Options307();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Options307_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            Response response = await client.Options307Async();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Options307_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            Response response = client.Options307();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Options307_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            Response response = await client.Options307Async();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Put307_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            using RequestContent content = null;
            Response response = client.Put307(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Put307_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            using RequestContent content = null;
            Response response = await client.Put307Async(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Put307_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            using RequestContent content = RequestContent.Create("true");
            Response response = client.Put307(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Put307_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            using RequestContent content = RequestContent.Create("true");
            Response response = await client.Put307Async(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Patch307_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            using RequestContent content = null;
            Response response = client.Patch307(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Patch307_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            using RequestContent content = null;
            Response response = await client.Patch307Async(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Patch307_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            using RequestContent content = RequestContent.Create("true");
            Response response = client.Patch307(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Patch307_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            using RequestContent content = RequestContent.Create("true");
            Response response = await client.Patch307Async(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Post307_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            using RequestContent content = null;
            Response response = client.Post307(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Post307_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            using RequestContent content = null;
            Response response = await client.Post307Async(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Post307_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            using RequestContent content = RequestContent.Create("true");
            Response response = client.Post307(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Post307_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            using RequestContent content = RequestContent.Create("true");
            Response response = await client.Post307Async(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Delete307_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            using RequestContent content = null;
            Response response = client.Delete307(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Delete307_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            using RequestContent content = null;
            Response response = await client.Delete307Async(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Delete307_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            using RequestContent content = RequestContent.Create("true");
            Response response = client.Delete307(content);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Delete307_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HttpRedirectsClient client = new HttpRedirectsClient(credential);

            using RequestContent content = RequestContent.Create("true");
            Response response = await client.Delete307Async(content);

            Console.WriteLine(response.Status);
        }
    }
}
