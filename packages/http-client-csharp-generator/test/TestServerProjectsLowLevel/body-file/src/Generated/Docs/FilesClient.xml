<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetFileAsync(RequestContext)">
      <example>
This sample shows how to call GetFileAsync and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FilesClient client = new FilesClient(credential);

Response response = await client.GetFileAsync(null);

if (response.ContentStream != null)
{
    using Stream outFileStream = File.OpenWrite("<filepath>");
    response.ContentStream.CopyTo(outFileStream);
}
]]></code>
This sample shows how to call GetFileAsync with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FilesClient client = new FilesClient(credential);

Response response = await client.GetFileAsync(null);

if (response.ContentStream != null)
{
    using Stream outFileStream = File.OpenWrite("<filepath>");
    response.ContentStream.CopyTo(outFileStream);
}
]]></code></example>
    </member>
    <member name="GetFile(RequestContext)">
      <example>
This sample shows how to call GetFile and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FilesClient client = new FilesClient(credential);

Response response = client.GetFile(null);

if (response.ContentStream != null)
{
    using Stream outFileStream = File.OpenWrite("<filepath>");
    response.ContentStream.CopyTo(outFileStream);
}
]]></code>
This sample shows how to call GetFile with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FilesClient client = new FilesClient(credential);

Response response = client.GetFile(null);

if (response.ContentStream != null)
{
    using Stream outFileStream = File.OpenWrite("<filepath>");
    response.ContentStream.CopyTo(outFileStream);
}
]]></code></example>
    </member>
    <member name="GetFileLargeAsync(RequestContext)">
      <example>
This sample shows how to call GetFileLargeAsync and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FilesClient client = new FilesClient(credential);

Response response = await client.GetFileLargeAsync(null);

if (response.ContentStream != null)
{
    using Stream outFileStream = File.OpenWrite("<filepath>");
    response.ContentStream.CopyTo(outFileStream);
}
]]></code>
This sample shows how to call GetFileLargeAsync with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FilesClient client = new FilesClient(credential);

Response response = await client.GetFileLargeAsync(null);

if (response.ContentStream != null)
{
    using Stream outFileStream = File.OpenWrite("<filepath>");
    response.ContentStream.CopyTo(outFileStream);
}
]]></code></example>
    </member>
    <member name="GetFileLarge(RequestContext)">
      <example>
This sample shows how to call GetFileLarge and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FilesClient client = new FilesClient(credential);

Response response = client.GetFileLarge(null);

if (response.ContentStream != null)
{
    using Stream outFileStream = File.OpenWrite("<filepath>");
    response.ContentStream.CopyTo(outFileStream);
}
]]></code>
This sample shows how to call GetFileLarge with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FilesClient client = new FilesClient(credential);

Response response = client.GetFileLarge(null);

if (response.ContentStream != null)
{
    using Stream outFileStream = File.OpenWrite("<filepath>");
    response.ContentStream.CopyTo(outFileStream);
}
]]></code></example>
    </member>
    <member name="GetEmptyFileAsync(RequestContext)">
      <example>
This sample shows how to call GetEmptyFileAsync and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FilesClient client = new FilesClient(credential);

Response response = await client.GetEmptyFileAsync(null);

if (response.ContentStream != null)
{
    using Stream outFileStream = File.OpenWrite("<filepath>");
    response.ContentStream.CopyTo(outFileStream);
}
]]></code>
This sample shows how to call GetEmptyFileAsync with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FilesClient client = new FilesClient(credential);

Response response = await client.GetEmptyFileAsync(null);

if (response.ContentStream != null)
{
    using Stream outFileStream = File.OpenWrite("<filepath>");
    response.ContentStream.CopyTo(outFileStream);
}
]]></code></example>
    </member>
    <member name="GetEmptyFile(RequestContext)">
      <example>
This sample shows how to call GetEmptyFile and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FilesClient client = new FilesClient(credential);

Response response = client.GetEmptyFile(null);

if (response.ContentStream != null)
{
    using Stream outFileStream = File.OpenWrite("<filepath>");
    response.ContentStream.CopyTo(outFileStream);
}
]]></code>
This sample shows how to call GetEmptyFile with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
FilesClient client = new FilesClient(credential);

Response response = client.GetEmptyFile(null);

if (response.ContentStream != null)
{
    using Stream outFileStream = File.OpenWrite("<filepath>");
    response.ContentStream.CopyTo(outFileStream);
}
]]></code></example>
    </member>
  </members>
</doc>