// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using lro_LowLevel;

namespace lro_LowLevel.Samples
{
    public partial class Samples_LrosaDsClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PutNonRetry400_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = null;
            Operation<BinaryData> operation = client.PutNonRetry400(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PutNonRetry400_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = null;
            Operation<BinaryData> operation = await client.PutNonRetry400Async(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PutNonRetry400_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    provisioningState = "<provisioningState>",
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation<BinaryData> operation = client.PutNonRetry400(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningStateValues").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("location").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PutNonRetry400_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    provisioningState = "<provisioningState>",
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation<BinaryData> operation = await client.PutNonRetry400Async(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningStateValues").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("location").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PutNonRetry201Creating400_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = null;
            Operation<BinaryData> operation = client.PutNonRetry201Creating400(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PutNonRetry201Creating400_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = null;
            Operation<BinaryData> operation = await client.PutNonRetry201Creating400Async(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PutNonRetry201Creating400_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    provisioningState = "<provisioningState>",
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation<BinaryData> operation = client.PutNonRetry201Creating400(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningStateValues").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("location").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PutNonRetry201Creating400_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    provisioningState = "<provisioningState>",
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation<BinaryData> operation = await client.PutNonRetry201Creating400Async(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningStateValues").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("location").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PutNonRetry201Creating400InvalidJson_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = null;
            Operation<BinaryData> operation = client.PutNonRetry201Creating400InvalidJson(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PutNonRetry201Creating400InvalidJson_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = null;
            Operation<BinaryData> operation = await client.PutNonRetry201Creating400InvalidJsonAsync(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PutNonRetry201Creating400InvalidJson_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    provisioningState = "<provisioningState>",
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation<BinaryData> operation = client.PutNonRetry201Creating400InvalidJson(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningStateValues").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("location").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PutNonRetry201Creating400InvalidJson_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    provisioningState = "<provisioningState>",
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation<BinaryData> operation = await client.PutNonRetry201Creating400InvalidJsonAsync(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningStateValues").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("location").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PutAsyncRelativeRetry400_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = null;
            Operation<BinaryData> operation = client.PutAsyncRelativeRetry400(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PutAsyncRelativeRetry400_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = null;
            Operation<BinaryData> operation = await client.PutAsyncRelativeRetry400Async(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PutAsyncRelativeRetry400_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    provisioningState = "<provisioningState>",
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation<BinaryData> operation = client.PutAsyncRelativeRetry400(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningStateValues").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("location").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PutAsyncRelativeRetry400_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    provisioningState = "<provisioningState>",
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation<BinaryData> operation = await client.PutAsyncRelativeRetry400Async(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningStateValues").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("location").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DeleteNonRetry400_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            Operation operation = client.DeleteNonRetry400(WaitUntil.Completed);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DeleteNonRetry400_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            Operation operation = await client.DeleteNonRetry400Async(WaitUntil.Completed);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DeleteNonRetry400_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            Operation operation = client.DeleteNonRetry400(WaitUntil.Completed);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DeleteNonRetry400_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            Operation operation = await client.DeleteNonRetry400Async(WaitUntil.Completed);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Delete202NonRetry400_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            Operation operation = client.Delete202NonRetry400(WaitUntil.Completed);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Delete202NonRetry400_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            Operation operation = await client.Delete202NonRetry400Async(WaitUntil.Completed);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Delete202NonRetry400_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            Operation operation = client.Delete202NonRetry400(WaitUntil.Completed);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Delete202NonRetry400_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            Operation operation = await client.Delete202NonRetry400Async(WaitUntil.Completed);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DeleteAsyncRelativeRetry400_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            Operation operation = client.DeleteAsyncRelativeRetry400(WaitUntil.Completed);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DeleteAsyncRelativeRetry400_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            Operation operation = await client.DeleteAsyncRelativeRetry400Async(WaitUntil.Completed);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DeleteAsyncRelativeRetry400_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            Operation operation = client.DeleteAsyncRelativeRetry400(WaitUntil.Completed);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DeleteAsyncRelativeRetry400_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            Operation operation = await client.DeleteAsyncRelativeRetry400Async(WaitUntil.Completed);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PostNonRetry400_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = null;
            Operation operation = client.PostNonRetry400(WaitUntil.Completed, content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PostNonRetry400_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = null;
            Operation operation = await client.PostNonRetry400Async(WaitUntil.Completed, content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PostNonRetry400_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    provisioningState = "<provisioningState>",
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation operation = client.PostNonRetry400(WaitUntil.Completed, content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PostNonRetry400_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    provisioningState = "<provisioningState>",
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation operation = await client.PostNonRetry400Async(WaitUntil.Completed, content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Post202NonRetry400_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = null;
            Operation operation = client.Post202NonRetry400(WaitUntil.Completed, content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Post202NonRetry400_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = null;
            Operation operation = await client.Post202NonRetry400Async(WaitUntil.Completed, content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Post202NonRetry400_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    provisioningState = "<provisioningState>",
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation operation = client.Post202NonRetry400(WaitUntil.Completed, content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Post202NonRetry400_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    provisioningState = "<provisioningState>",
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation operation = await client.Post202NonRetry400Async(WaitUntil.Completed, content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PostAsyncRelativeRetry400_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = null;
            Operation operation = client.PostAsyncRelativeRetry400(WaitUntil.Completed, content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PostAsyncRelativeRetry400_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = null;
            Operation operation = await client.PostAsyncRelativeRetry400Async(WaitUntil.Completed, content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PostAsyncRelativeRetry400_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    provisioningState = "<provisioningState>",
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation operation = client.PostAsyncRelativeRetry400(WaitUntil.Completed, content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PostAsyncRelativeRetry400_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    provisioningState = "<provisioningState>",
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation operation = await client.PostAsyncRelativeRetry400Async(WaitUntil.Completed, content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PutError201NoProvisioningStatePayload_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = null;
            Operation<BinaryData> operation = client.PutError201NoProvisioningStatePayload(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PutError201NoProvisioningStatePayload_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = null;
            Operation<BinaryData> operation = await client.PutError201NoProvisioningStatePayloadAsync(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PutError201NoProvisioningStatePayload_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    provisioningState = "<provisioningState>",
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation<BinaryData> operation = client.PutError201NoProvisioningStatePayload(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningStateValues").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("location").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PutError201NoProvisioningStatePayload_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    provisioningState = "<provisioningState>",
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation<BinaryData> operation = await client.PutError201NoProvisioningStatePayloadAsync(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningStateValues").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("location").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PutAsyncRelativeRetryNoStatus_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = null;
            Operation<BinaryData> operation = client.PutAsyncRelativeRetryNoStatus(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PutAsyncRelativeRetryNoStatus_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = null;
            Operation<BinaryData> operation = await client.PutAsyncRelativeRetryNoStatusAsync(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PutAsyncRelativeRetryNoStatus_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    provisioningState = "<provisioningState>",
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation<BinaryData> operation = client.PutAsyncRelativeRetryNoStatus(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningStateValues").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("location").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PutAsyncRelativeRetryNoStatus_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    provisioningState = "<provisioningState>",
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation<BinaryData> operation = await client.PutAsyncRelativeRetryNoStatusAsync(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningStateValues").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("location").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PutAsyncRelativeRetryNoStatusPayload_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = null;
            Operation<BinaryData> operation = client.PutAsyncRelativeRetryNoStatusPayload(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PutAsyncRelativeRetryNoStatusPayload_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = null;
            Operation<BinaryData> operation = await client.PutAsyncRelativeRetryNoStatusPayloadAsync(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PutAsyncRelativeRetryNoStatusPayload_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    provisioningState = "<provisioningState>",
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation<BinaryData> operation = client.PutAsyncRelativeRetryNoStatusPayload(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningStateValues").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("location").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PutAsyncRelativeRetryNoStatusPayload_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    provisioningState = "<provisioningState>",
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation<BinaryData> operation = await client.PutAsyncRelativeRetryNoStatusPayloadAsync(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningStateValues").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("location").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Delete204Succeeded_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            Operation operation = client.Delete204Succeeded(WaitUntil.Completed);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Delete204Succeeded_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            Operation operation = await client.Delete204SucceededAsync(WaitUntil.Completed);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Delete204Succeeded_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            Operation operation = client.Delete204Succeeded(WaitUntil.Completed);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Delete204Succeeded_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            Operation operation = await client.Delete204SucceededAsync(WaitUntil.Completed);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DeleteAsyncRelativeRetryNoStatus_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            Operation operation = client.DeleteAsyncRelativeRetryNoStatus(WaitUntil.Completed);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DeleteAsyncRelativeRetryNoStatus_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            Operation operation = await client.DeleteAsyncRelativeRetryNoStatusAsync(WaitUntil.Completed);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DeleteAsyncRelativeRetryNoStatus_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            Operation operation = client.DeleteAsyncRelativeRetryNoStatus(WaitUntil.Completed);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DeleteAsyncRelativeRetryNoStatus_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            Operation operation = await client.DeleteAsyncRelativeRetryNoStatusAsync(WaitUntil.Completed);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Post202NoLocation_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = null;
            Operation operation = client.Post202NoLocation(WaitUntil.Completed, content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Post202NoLocation_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = null;
            Operation operation = await client.Post202NoLocationAsync(WaitUntil.Completed, content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Post202NoLocation_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    provisioningState = "<provisioningState>",
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation operation = client.Post202NoLocation(WaitUntil.Completed, content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Post202NoLocation_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    provisioningState = "<provisioningState>",
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation operation = await client.Post202NoLocationAsync(WaitUntil.Completed, content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PostAsyncRelativeRetryNoPayload_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = null;
            Operation operation = client.PostAsyncRelativeRetryNoPayload(WaitUntil.Completed, content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PostAsyncRelativeRetryNoPayload_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = null;
            Operation operation = await client.PostAsyncRelativeRetryNoPayloadAsync(WaitUntil.Completed, content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PostAsyncRelativeRetryNoPayload_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    provisioningState = "<provisioningState>",
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation operation = client.PostAsyncRelativeRetryNoPayload(WaitUntil.Completed, content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PostAsyncRelativeRetryNoPayload_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    provisioningState = "<provisioningState>",
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation operation = await client.PostAsyncRelativeRetryNoPayloadAsync(WaitUntil.Completed, content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Put200InvalidJson_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = null;
            Operation<BinaryData> operation = client.Put200InvalidJson(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Put200InvalidJson_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = null;
            Operation<BinaryData> operation = await client.Put200InvalidJsonAsync(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Put200InvalidJson_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    provisioningState = "<provisioningState>",
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation<BinaryData> operation = client.Put200InvalidJson(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningStateValues").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("location").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Put200InvalidJson_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    provisioningState = "<provisioningState>",
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation<BinaryData> operation = await client.Put200InvalidJsonAsync(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningStateValues").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("location").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PutAsyncRelativeRetryInvalidHeader_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = null;
            Operation<BinaryData> operation = client.PutAsyncRelativeRetryInvalidHeader(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PutAsyncRelativeRetryInvalidHeader_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = null;
            Operation<BinaryData> operation = await client.PutAsyncRelativeRetryInvalidHeaderAsync(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PutAsyncRelativeRetryInvalidHeader_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    provisioningState = "<provisioningState>",
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation<BinaryData> operation = client.PutAsyncRelativeRetryInvalidHeader(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningStateValues").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("location").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PutAsyncRelativeRetryInvalidHeader_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    provisioningState = "<provisioningState>",
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation<BinaryData> operation = await client.PutAsyncRelativeRetryInvalidHeaderAsync(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningStateValues").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("location").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PutAsyncRelativeRetryInvalidJsonPolling_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = null;
            Operation<BinaryData> operation = client.PutAsyncRelativeRetryInvalidJsonPolling(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PutAsyncRelativeRetryInvalidJsonPolling_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = null;
            Operation<BinaryData> operation = await client.PutAsyncRelativeRetryInvalidJsonPollingAsync(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PutAsyncRelativeRetryInvalidJsonPolling_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    provisioningState = "<provisioningState>",
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation<BinaryData> operation = client.PutAsyncRelativeRetryInvalidJsonPolling(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningStateValues").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("location").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PutAsyncRelativeRetryInvalidJsonPolling_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    provisioningState = "<provisioningState>",
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation<BinaryData> operation = await client.PutAsyncRelativeRetryInvalidJsonPollingAsync(WaitUntil.Completed, content);
            BinaryData responseData = operation.Value;

            JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningState").ToString());
            Console.WriteLine(result.GetProperty("properties").GetProperty("provisioningStateValues").ToString());
            Console.WriteLine(result.GetProperty("id").ToString());
            Console.WriteLine(result.GetProperty("type").ToString());
            Console.WriteLine(result.GetProperty("tags").GetProperty("<key>").ToString());
            Console.WriteLine(result.GetProperty("location").ToString());
            Console.WriteLine(result.GetProperty("name").ToString());
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Delete202RetryInvalidHeader_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            Operation operation = client.Delete202RetryInvalidHeader(WaitUntil.Completed);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Delete202RetryInvalidHeader_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            Operation operation = await client.Delete202RetryInvalidHeaderAsync(WaitUntil.Completed);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Delete202RetryInvalidHeader_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            Operation operation = client.Delete202RetryInvalidHeader(WaitUntil.Completed);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Delete202RetryInvalidHeader_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            Operation operation = await client.Delete202RetryInvalidHeaderAsync(WaitUntil.Completed);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DeleteAsyncRelativeRetryInvalidHeader_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            Operation operation = client.DeleteAsyncRelativeRetryInvalidHeader(WaitUntil.Completed);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DeleteAsyncRelativeRetryInvalidHeader_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            Operation operation = await client.DeleteAsyncRelativeRetryInvalidHeaderAsync(WaitUntil.Completed);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DeleteAsyncRelativeRetryInvalidHeader_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            Operation operation = client.DeleteAsyncRelativeRetryInvalidHeader(WaitUntil.Completed);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DeleteAsyncRelativeRetryInvalidHeader_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            Operation operation = await client.DeleteAsyncRelativeRetryInvalidHeaderAsync(WaitUntil.Completed);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DeleteAsyncRelativeRetryInvalidJsonPolling_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            Operation operation = client.DeleteAsyncRelativeRetryInvalidJsonPolling(WaitUntil.Completed);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DeleteAsyncRelativeRetryInvalidJsonPolling_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            Operation operation = await client.DeleteAsyncRelativeRetryInvalidJsonPollingAsync(WaitUntil.Completed);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DeleteAsyncRelativeRetryInvalidJsonPolling_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            Operation operation = client.DeleteAsyncRelativeRetryInvalidJsonPolling(WaitUntil.Completed);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DeleteAsyncRelativeRetryInvalidJsonPolling_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            Operation operation = await client.DeleteAsyncRelativeRetryInvalidJsonPollingAsync(WaitUntil.Completed);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Post202RetryInvalidHeader_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = null;
            Operation operation = client.Post202RetryInvalidHeader(WaitUntil.Completed, content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Post202RetryInvalidHeader_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = null;
            Operation operation = await client.Post202RetryInvalidHeaderAsync(WaitUntil.Completed, content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Post202RetryInvalidHeader_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    provisioningState = "<provisioningState>",
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation operation = client.Post202RetryInvalidHeader(WaitUntil.Completed, content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Post202RetryInvalidHeader_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    provisioningState = "<provisioningState>",
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation operation = await client.Post202RetryInvalidHeaderAsync(WaitUntil.Completed, content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PostAsyncRelativeRetryInvalidHeader_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = null;
            Operation operation = client.PostAsyncRelativeRetryInvalidHeader(WaitUntil.Completed, content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PostAsyncRelativeRetryInvalidHeader_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = null;
            Operation operation = await client.PostAsyncRelativeRetryInvalidHeaderAsync(WaitUntil.Completed, content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PostAsyncRelativeRetryInvalidHeader_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    provisioningState = "<provisioningState>",
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation operation = client.PostAsyncRelativeRetryInvalidHeader(WaitUntil.Completed, content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PostAsyncRelativeRetryInvalidHeader_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    provisioningState = "<provisioningState>",
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation operation = await client.PostAsyncRelativeRetryInvalidHeaderAsync(WaitUntil.Completed, content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PostAsyncRelativeRetryInvalidJsonPolling_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = null;
            Operation operation = client.PostAsyncRelativeRetryInvalidJsonPolling(WaitUntil.Completed, content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PostAsyncRelativeRetryInvalidJsonPolling_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = null;
            Operation operation = await client.PostAsyncRelativeRetryInvalidJsonPollingAsync(WaitUntil.Completed, content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PostAsyncRelativeRetryInvalidJsonPolling_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    provisioningState = "<provisioningState>",
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation operation = client.PostAsyncRelativeRetryInvalidJsonPolling(WaitUntil.Completed, content);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PostAsyncRelativeRetryInvalidJsonPolling_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            LrosaDsClient client = new LrosaDsClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                properties = new
                {
                    provisioningState = "<provisioningState>",
                },
                tags = new
                {
                    key = "<tags>",
                },
                location = "<location>",
            });
            Operation operation = await client.PostAsyncRelativeRetryInvalidJsonPollingAsync(WaitUntil.Completed, content);
        }
    }
}
