<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="ParamExistingKeyAsync(string,RequestContext)">
      <example>
This sample shows how to call ParamExistingKeyAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ParamExistingKeyAsync("<userAgent>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamExistingKeyAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ParamExistingKeyAsync("<userAgent>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ParamExistingKey(string,RequestContext)">
      <example>
This sample shows how to call ParamExistingKey.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ParamExistingKey("<userAgent>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamExistingKey with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ParamExistingKey("<userAgent>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ResponseExistingKeyAsync(RequestContext)">
      <example>
This sample shows how to call ResponseExistingKeyAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ResponseExistingKeyAsync();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ResponseExistingKeyAsync with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ResponseExistingKeyAsync();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ResponseExistingKey(RequestContext)">
      <example>
This sample shows how to call ResponseExistingKey.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ResponseExistingKey();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ResponseExistingKey with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ResponseExistingKey();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ParamProtectedKeyAsync(string,RequestContext)">
      <example>
This sample shows how to call ParamProtectedKeyAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ParamProtectedKeyAsync("<contentType>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamProtectedKeyAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ParamProtectedKeyAsync("<contentType>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ParamProtectedKey(string,RequestContext)">
      <example>
This sample shows how to call ParamProtectedKey.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ParamProtectedKey("<contentType>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamProtectedKey with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ParamProtectedKey("<contentType>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ResponseProtectedKeyAsync(RequestContext)">
      <example>
This sample shows how to call ResponseProtectedKeyAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ResponseProtectedKeyAsync();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ResponseProtectedKeyAsync with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ResponseProtectedKeyAsync();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ResponseProtectedKey(RequestContext)">
      <example>
This sample shows how to call ResponseProtectedKey.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ResponseProtectedKey();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ResponseProtectedKey with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ResponseProtectedKey();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ParamIntegerAsync(string,int,RequestContext)">
      <example>
This sample shows how to call ParamIntegerAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ParamIntegerAsync("<scenario>", 1234);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamIntegerAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ParamIntegerAsync("<scenario>", 1234);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ParamInteger(string,int,RequestContext)">
      <example>
This sample shows how to call ParamInteger.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ParamInteger("<scenario>", 1234);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamInteger with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ParamInteger("<scenario>", 1234);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ResponseIntegerAsync(string,RequestContext)">
      <example>
This sample shows how to call ResponseIntegerAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ResponseIntegerAsync("<scenario>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ResponseIntegerAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ResponseIntegerAsync("<scenario>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ResponseInteger(string,RequestContext)">
      <example>
This sample shows how to call ResponseInteger.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ResponseInteger("<scenario>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ResponseInteger with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ResponseInteger("<scenario>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ParamLongAsync(string,long,RequestContext)">
      <example>
This sample shows how to call ParamLongAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ParamLongAsync("<scenario>", 1234L);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamLongAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ParamLongAsync("<scenario>", 1234L);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ParamLong(string,long,RequestContext)">
      <example>
This sample shows how to call ParamLong.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ParamLong("<scenario>", 1234L);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamLong with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ParamLong("<scenario>", 1234L);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ResponseLongAsync(string,RequestContext)">
      <example>
This sample shows how to call ResponseLongAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ResponseLongAsync("<scenario>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ResponseLongAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ResponseLongAsync("<scenario>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ResponseLong(string,RequestContext)">
      <example>
This sample shows how to call ResponseLong.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ResponseLong("<scenario>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ResponseLong with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ResponseLong("<scenario>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ParamFloatAsync(string,float,RequestContext)">
      <example>
This sample shows how to call ParamFloatAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ParamFloatAsync("<scenario>", 123.45F);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamFloatAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ParamFloatAsync("<scenario>", 123.45F);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ParamFloat(string,float,RequestContext)">
      <example>
This sample shows how to call ParamFloat.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ParamFloat("<scenario>", 123.45F);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamFloat with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ParamFloat("<scenario>", 123.45F);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ResponseFloatAsync(string,RequestContext)">
      <example>
This sample shows how to call ResponseFloatAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ResponseFloatAsync("<scenario>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ResponseFloatAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ResponseFloatAsync("<scenario>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ResponseFloat(string,RequestContext)">
      <example>
This sample shows how to call ResponseFloat.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ResponseFloat("<scenario>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ResponseFloat with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ResponseFloat("<scenario>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ParamDoubleAsync(string,double,RequestContext)">
      <example>
This sample shows how to call ParamDoubleAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ParamDoubleAsync("<scenario>", 123.45);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamDoubleAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ParamDoubleAsync("<scenario>", 123.45);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ParamDouble(string,double,RequestContext)">
      <example>
This sample shows how to call ParamDouble.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ParamDouble("<scenario>", 123.45);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamDouble with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ParamDouble("<scenario>", 123.45);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ResponseDoubleAsync(string,RequestContext)">
      <example>
This sample shows how to call ResponseDoubleAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ResponseDoubleAsync("<scenario>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ResponseDoubleAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ResponseDoubleAsync("<scenario>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ResponseDouble(string,RequestContext)">
      <example>
This sample shows how to call ResponseDouble.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ResponseDouble("<scenario>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ResponseDouble with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ResponseDouble("<scenario>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ParamBoolAsync(string,bool,RequestContext)">
      <example>
This sample shows how to call ParamBoolAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ParamBoolAsync("<scenario>", true);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamBoolAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ParamBoolAsync("<scenario>", true);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ParamBool(string,bool,RequestContext)">
      <example>
This sample shows how to call ParamBool.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ParamBool("<scenario>", true);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamBool with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ParamBool("<scenario>", true);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ResponseBoolAsync(string,RequestContext)">
      <example>
This sample shows how to call ResponseBoolAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ResponseBoolAsync("<scenario>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ResponseBoolAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ResponseBoolAsync("<scenario>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ResponseBool(string,RequestContext)">
      <example>
This sample shows how to call ResponseBool.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ResponseBool("<scenario>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ResponseBool with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ResponseBool("<scenario>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ParamStringAsync(string,string,RequestContext)">
      <example>
This sample shows how to call ParamStringAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ParamStringAsync("<scenario>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamStringAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ParamStringAsync("<scenario>", value: "<value>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ParamString(string,string,RequestContext)">
      <example>
This sample shows how to call ParamString.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ParamString("<scenario>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamString with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ParamString("<scenario>", value: "<value>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ResponseStringAsync(string,RequestContext)">
      <example>
This sample shows how to call ResponseStringAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ResponseStringAsync("<scenario>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ResponseStringAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ResponseStringAsync("<scenario>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ResponseString(string,RequestContext)">
      <example>
This sample shows how to call ResponseString.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ResponseString("<scenario>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ResponseString with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ResponseString("<scenario>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ParamDateAsync(string,DateTimeOffset,RequestContext)">
      <example>
This sample shows how to call ParamDateAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ParamDateAsync("<scenario>", DateTimeOffset.Parse("2022-05-10"));

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamDateAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ParamDateAsync("<scenario>", DateTimeOffset.Parse("2022-05-10"));

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ParamDate(string,DateTimeOffset,RequestContext)">
      <example>
This sample shows how to call ParamDate.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ParamDate("<scenario>", DateTimeOffset.Parse("2022-05-10"));

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamDate with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ParamDate("<scenario>", DateTimeOffset.Parse("2022-05-10"));

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ResponseDateAsync(string,RequestContext)">
      <example>
This sample shows how to call ResponseDateAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ResponseDateAsync("<scenario>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ResponseDateAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ResponseDateAsync("<scenario>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ResponseDate(string,RequestContext)">
      <example>
This sample shows how to call ResponseDate.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ResponseDate("<scenario>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ResponseDate with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ResponseDate("<scenario>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ParamDatetimeAsync(string,DateTimeOffset,RequestContext)">
      <example>
This sample shows how to call ParamDatetimeAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ParamDatetimeAsync("<scenario>", DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"));

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamDatetimeAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ParamDatetimeAsync("<scenario>", DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"));

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ParamDatetime(string,DateTimeOffset,RequestContext)">
      <example>
This sample shows how to call ParamDatetime.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ParamDatetime("<scenario>", DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"));

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamDatetime with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ParamDatetime("<scenario>", DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"));

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ResponseDatetimeAsync(string,RequestContext)">
      <example>
This sample shows how to call ResponseDatetimeAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ResponseDatetimeAsync("<scenario>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ResponseDatetimeAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ResponseDatetimeAsync("<scenario>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ResponseDatetime(string,RequestContext)">
      <example>
This sample shows how to call ResponseDatetime.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ResponseDatetime("<scenario>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ResponseDatetime with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ResponseDatetime("<scenario>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ParamDatetimeRfc1123Async(string,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call ParamDatetimeRfc1123Async.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ParamDatetimeRfc1123Async("<scenario>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamDatetimeRfc1123Async with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ParamDatetimeRfc1123Async("<scenario>", value: DateTimeOffset.Parse("Tue, 10 May 2022 18:57:31 GMT"));

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ParamDatetimeRfc1123(string,DateTimeOffset?,RequestContext)">
      <example>
This sample shows how to call ParamDatetimeRfc1123.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ParamDatetimeRfc1123("<scenario>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamDatetimeRfc1123 with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ParamDatetimeRfc1123("<scenario>", value: DateTimeOffset.Parse("Tue, 10 May 2022 18:57:31 GMT"));

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ResponseDatetimeRfc1123Async(string,RequestContext)">
      <example>
This sample shows how to call ResponseDatetimeRfc1123Async.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ResponseDatetimeRfc1123Async("<scenario>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ResponseDatetimeRfc1123Async with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ResponseDatetimeRfc1123Async("<scenario>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ResponseDatetimeRfc1123(string,RequestContext)">
      <example>
This sample shows how to call ResponseDatetimeRfc1123.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ResponseDatetimeRfc1123("<scenario>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ResponseDatetimeRfc1123 with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ResponseDatetimeRfc1123("<scenario>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ParamDurationAsync(string,TimeSpan,RequestContext)">
      <example>
This sample shows how to call ParamDurationAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ParamDurationAsync("<scenario>", XmlConvert.ToTimeSpan("PT1H23M45S"));

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamDurationAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ParamDurationAsync("<scenario>", XmlConvert.ToTimeSpan("PT1H23M45S"));

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ParamDuration(string,TimeSpan,RequestContext)">
      <example>
This sample shows how to call ParamDuration.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ParamDuration("<scenario>", XmlConvert.ToTimeSpan("PT1H23M45S"));

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamDuration with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ParamDuration("<scenario>", XmlConvert.ToTimeSpan("PT1H23M45S"));

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ResponseDurationAsync(string,RequestContext)">
      <example>
This sample shows how to call ResponseDurationAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ResponseDurationAsync("<scenario>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ResponseDurationAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ResponseDurationAsync("<scenario>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ResponseDuration(string,RequestContext)">
      <example>
This sample shows how to call ResponseDuration.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ResponseDuration("<scenario>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ResponseDuration with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ResponseDuration("<scenario>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ParamByteAsync(string,BinaryData,RequestContext)">
      <example>
This sample shows how to call ParamByteAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ParamByteAsync("<scenario>", BinaryData.FromObjectAsJson(new object()));

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamByteAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ParamByteAsync("<scenario>", BinaryData.FromObjectAsJson(new object()));

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ParamByte(string,BinaryData,RequestContext)">
      <example>
This sample shows how to call ParamByte.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ParamByte("<scenario>", BinaryData.FromObjectAsJson(new object()));

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamByte with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ParamByte("<scenario>", BinaryData.FromObjectAsJson(new object()));

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ResponseByteAsync(string,RequestContext)">
      <example>
This sample shows how to call ResponseByteAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ResponseByteAsync("<scenario>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ResponseByteAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ResponseByteAsync("<scenario>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ResponseByte(string,RequestContext)">
      <example>
This sample shows how to call ResponseByte.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ResponseByte("<scenario>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ResponseByte with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ResponseByte("<scenario>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ParamEnumAsync(string,string,RequestContext)">
      <example>
This sample shows how to call ParamEnumAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ParamEnumAsync("<scenario>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamEnumAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ParamEnumAsync("<scenario>", value: "White");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ParamEnum(string,string,RequestContext)">
      <example>
This sample shows how to call ParamEnum.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ParamEnum("<scenario>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ParamEnum with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ParamEnum("<scenario>", value: "White");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ResponseEnumAsync(string,RequestContext)">
      <example>
This sample shows how to call ResponseEnumAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ResponseEnumAsync("<scenario>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ResponseEnumAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.ResponseEnumAsync("<scenario>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ResponseEnum(string,RequestContext)">
      <example>
This sample shows how to call ResponseEnum.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ResponseEnum("<scenario>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ResponseEnum with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.ResponseEnum("<scenario>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="CustomRequestIdAsync(RequestContext)">
      <example>
This sample shows how to call CustomRequestIdAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.CustomRequestIdAsync();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CustomRequestIdAsync with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = await client.CustomRequestIdAsync();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="CustomRequestId(RequestContext)">
      <example>
This sample shows how to call CustomRequestId.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.CustomRequestId();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CustomRequestId with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
HeaderClient client = new HeaderClient(credential);

Response response = client.CustomRequestId();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
  </members>
</doc>