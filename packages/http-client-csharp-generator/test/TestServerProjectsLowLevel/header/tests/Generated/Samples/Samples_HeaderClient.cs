// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using System.Xml;
using Azure;
using Azure.Identity;
using NUnit.Framework;
using header_LowLevel;

namespace header_LowLevel.Samples
{
    public partial class Samples_HeaderClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamExistingKey_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamExistingKey("<userAgent>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamExistingKey_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamExistingKeyAsync("<userAgent>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamExistingKey_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamExistingKey("<userAgent>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamExistingKey_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamExistingKeyAsync("<userAgent>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseExistingKey_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseExistingKey();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseExistingKey_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseExistingKeyAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseExistingKey_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseExistingKey();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseExistingKey_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseExistingKeyAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamProtectedKey_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamProtectedKey("<contentType>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamProtectedKey_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamProtectedKeyAsync("<contentType>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamProtectedKey_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamProtectedKey("<contentType>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamProtectedKey_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamProtectedKeyAsync("<contentType>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseProtectedKey_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseProtectedKey();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseProtectedKey_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseProtectedKeyAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseProtectedKey_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseProtectedKey();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseProtectedKey_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseProtectedKeyAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamInteger_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamInteger("<scenario>", 1234);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamInteger_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamIntegerAsync("<scenario>", 1234);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamInteger_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamInteger("<scenario>", 1234);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamInteger_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamIntegerAsync("<scenario>", 1234);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseInteger_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseInteger("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseInteger_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseIntegerAsync("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseInteger_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseInteger("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseInteger_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseIntegerAsync("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamLong_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamLong("<scenario>", 1234L);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamLong_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamLongAsync("<scenario>", 1234L);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamLong_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamLong("<scenario>", 1234L);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamLong_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamLongAsync("<scenario>", 1234L);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseLong_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseLong("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseLong_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseLongAsync("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseLong_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseLong("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseLong_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseLongAsync("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamFloat_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamFloat("<scenario>", 123.45F);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamFloat_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamFloatAsync("<scenario>", 123.45F);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamFloat_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamFloat("<scenario>", 123.45F);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamFloat_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamFloatAsync("<scenario>", 123.45F);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseFloat_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseFloat("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseFloat_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseFloatAsync("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseFloat_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseFloat("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseFloat_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseFloatAsync("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamDouble_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamDouble("<scenario>", 123.45);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamDouble_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamDoubleAsync("<scenario>", 123.45);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamDouble_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamDouble("<scenario>", 123.45);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamDouble_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamDoubleAsync("<scenario>", 123.45);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseDouble_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseDouble("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseDouble_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseDoubleAsync("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseDouble_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseDouble("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseDouble_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseDoubleAsync("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamBool_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamBool("<scenario>", true);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamBool_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamBoolAsync("<scenario>", true);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamBool_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamBool("<scenario>", true);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamBool_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamBoolAsync("<scenario>", true);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseBool_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseBool("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseBool_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseBoolAsync("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseBool_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseBool("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseBool_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseBoolAsync("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamString_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamString("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamString_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamStringAsync("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamString_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamString("<scenario>", value: "<value>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamString_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamStringAsync("<scenario>", value: "<value>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseString_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseString("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseString_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseStringAsync("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseString_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseString("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseString_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseStringAsync("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamDate_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamDate("<scenario>", DateTimeOffset.Parse("2022-05-10"));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamDate_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamDateAsync("<scenario>", DateTimeOffset.Parse("2022-05-10"));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamDate_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamDate("<scenario>", DateTimeOffset.Parse("2022-05-10"));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamDate_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamDateAsync("<scenario>", DateTimeOffset.Parse("2022-05-10"));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseDate_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseDate("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseDate_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseDateAsync("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseDate_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseDate("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseDate_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseDateAsync("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamDatetime_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamDatetime("<scenario>", DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamDatetime_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamDatetimeAsync("<scenario>", DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamDatetime_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamDatetime("<scenario>", DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamDatetime_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamDatetimeAsync("<scenario>", DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseDatetime_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseDatetime("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseDatetime_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseDatetimeAsync("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseDatetime_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseDatetime("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseDatetime_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseDatetimeAsync("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamDatetimeRfc1123_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamDatetimeRfc1123("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamDatetimeRfc1123_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamDatetimeRfc1123Async("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamDatetimeRfc1123_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamDatetimeRfc1123("<scenario>", value: DateTimeOffset.Parse("Tue, 10 May 2022 18:57:31 GMT"));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamDatetimeRfc1123_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamDatetimeRfc1123Async("<scenario>", value: DateTimeOffset.Parse("Tue, 10 May 2022 18:57:31 GMT"));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseDatetimeRfc1123_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseDatetimeRfc1123("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseDatetimeRfc1123_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseDatetimeRfc1123Async("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseDatetimeRfc1123_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseDatetimeRfc1123("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseDatetimeRfc1123_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseDatetimeRfc1123Async("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamDuration_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamDuration("<scenario>", XmlConvert.ToTimeSpan("PT1H23M45S"));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamDuration_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamDurationAsync("<scenario>", XmlConvert.ToTimeSpan("PT1H23M45S"));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamDuration_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamDuration("<scenario>", XmlConvert.ToTimeSpan("PT1H23M45S"));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamDuration_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamDurationAsync("<scenario>", XmlConvert.ToTimeSpan("PT1H23M45S"));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseDuration_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseDuration("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseDuration_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseDurationAsync("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseDuration_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseDuration("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseDuration_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseDurationAsync("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamByte_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamByte("<scenario>", BinaryData.FromObjectAsJson(new object()));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamByte_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamByteAsync("<scenario>", BinaryData.FromObjectAsJson(new object()));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamByte_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamByte("<scenario>", BinaryData.FromObjectAsJson(new object()));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamByte_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamByteAsync("<scenario>", BinaryData.FromObjectAsJson(new object()));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseByte_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseByte("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseByte_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseByteAsync("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseByte_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseByte("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseByte_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseByteAsync("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamEnum_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamEnum("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamEnum_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamEnumAsync("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ParamEnum_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ParamEnum("<scenario>", value: "White");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ParamEnum_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ParamEnumAsync("<scenario>", value: "White");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseEnum_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseEnum("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseEnum_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseEnumAsync("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ResponseEnum_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.ResponseEnum("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ResponseEnum_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.ResponseEnumAsync("<scenario>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CustomRequestId_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.CustomRequestId();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CustomRequestId_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.CustomRequestIdAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_CustomRequestId_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = client.CustomRequestId();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_CustomRequestId_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            HeaderClient client = new HeaderClient(credential);

            Response response = await client.CustomRequestIdAsync();

            Console.WriteLine(response.Status);
        }
    }
}
