<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetModelAsync(string,RequestContext)">
      <example>
This sample shows how to call GetModelAsync and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DPGClient client = new DPGClient(credential);

Response response = await client.GetModelAsync("<mode>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("received").ToString());
]]></code>
This sample shows how to call GetModelAsync with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DPGClient client = new DPGClient(credential);

Response response = await client.GetModelAsync("<mode>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("received").ToString());
]]></code></example>
    </member>
    <member name="GetModel(string,RequestContext)">
      <example>
This sample shows how to call GetModel and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DPGClient client = new DPGClient(credential);

Response response = client.GetModel("<mode>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("received").ToString());
]]></code>
This sample shows how to call GetModel with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DPGClient client = new DPGClient(credential);

Response response = client.GetModel("<mode>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("received").ToString());
]]></code></example>
    </member>
    <member name="PostModelAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call PostModelAsync and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DPGClient client = new DPGClient(credential);

using RequestContent content = RequestContent.Create(new
{
    hello = "<hello>",
});
Response response = await client.PostModelAsync("<mode>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("received").ToString());
]]></code>
This sample shows how to call PostModelAsync with all parameters and request content and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DPGClient client = new DPGClient(credential);

using RequestContent content = RequestContent.Create(new
{
    hello = "<hello>",
});
Response response = await client.PostModelAsync("<mode>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("received").ToString());
]]></code></example>
    </member>
    <member name="PostModel(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call PostModel and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DPGClient client = new DPGClient(credential);

using RequestContent content = RequestContent.Create(new
{
    hello = "<hello>",
});
Response response = client.PostModel("<mode>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("received").ToString());
]]></code>
This sample shows how to call PostModel with all parameters and request content and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DPGClient client = new DPGClient(credential);

using RequestContent content = RequestContent.Create(new
{
    hello = "<hello>",
});
Response response = client.PostModel("<mode>", content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("received").ToString());
]]></code></example>
    </member>
    <member name="GetPagesAsync(string,RequestContext)">
      <example>
This sample shows how to call GetPagesAsync and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DPGClient client = new DPGClient(credential);

await foreach (BinaryData item in client.GetPagesAsync("<mode>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("received").ToString());
}
]]></code>
This sample shows how to call GetPagesAsync with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DPGClient client = new DPGClient(credential);

await foreach (BinaryData item in client.GetPagesAsync("<mode>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("received").ToString());
}
]]></code></example>
    </member>
    <member name="GetPages(string,RequestContext)">
      <example>
This sample shows how to call GetPages and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DPGClient client = new DPGClient(credential);

foreach (BinaryData item in client.GetPages("<mode>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("received").ToString());
}
]]></code>
This sample shows how to call GetPages with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DPGClient client = new DPGClient(credential);

foreach (BinaryData item in client.GetPages("<mode>", null))
{
    JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
    Console.WriteLine(result.GetProperty("received").ToString());
}
]]></code></example>
    </member>
    <member name="LroAsync(WaitUntil,string,RequestContext)">
      <example>
This sample shows how to call LroAsync and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DPGClient client = new DPGClient(credential);

Operation<BinaryData> operation = await client.LroAsync(WaitUntil.Completed, "<mode>", null);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("provisioningState").ToString());
Console.WriteLine(result.GetProperty("received").ToString());
]]></code>
This sample shows how to call LroAsync with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DPGClient client = new DPGClient(credential);

Operation<BinaryData> operation = await client.LroAsync(WaitUntil.Completed, "<mode>", null);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("provisioningState").ToString());
Console.WriteLine(result.GetProperty("received").ToString());
]]></code></example>
    </member>
    <member name="Lro(WaitUntil,string,RequestContext)">
      <example>
This sample shows how to call Lro and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DPGClient client = new DPGClient(credential);

Operation<BinaryData> operation = client.Lro(WaitUntil.Completed, "<mode>", null);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("provisioningState").ToString());
Console.WriteLine(result.GetProperty("received").ToString());
]]></code>
This sample shows how to call Lro with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DPGClient client = new DPGClient(credential);

Operation<BinaryData> operation = client.Lro(WaitUntil.Completed, "<mode>", null);
BinaryData responseData = operation.Value;

JsonElement result = JsonDocument.Parse(responseData.ToStream()).RootElement;
Console.WriteLine(result.GetProperty("provisioningState").ToString());
Console.WriteLine(result.GetProperty("received").ToString());
]]></code></example>
    </member>
  </members>
</doc>