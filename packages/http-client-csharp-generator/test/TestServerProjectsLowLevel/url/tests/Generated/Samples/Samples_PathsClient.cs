// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Identity;
using NUnit.Framework;
using url_LowLevel;

namespace url_LowLevel.Samples
{
    public partial class Samples_PathsClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetBooleanTrue_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.GetBooleanTrue();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetBooleanTrue_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.GetBooleanTrueAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetBooleanTrue_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.GetBooleanTrue();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetBooleanTrue_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.GetBooleanTrueAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetBooleanFalse_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.GetBooleanFalse();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetBooleanFalse_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.GetBooleanFalseAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetBooleanFalse_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.GetBooleanFalse();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetBooleanFalse_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.GetBooleanFalseAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetIntOneMillion_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.GetIntOneMillion();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetIntOneMillion_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.GetIntOneMillionAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetIntOneMillion_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.GetIntOneMillion();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetIntOneMillion_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.GetIntOneMillionAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetIntNegativeOneMillion_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.GetIntNegativeOneMillion();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetIntNegativeOneMillion_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.GetIntNegativeOneMillionAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetIntNegativeOneMillion_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.GetIntNegativeOneMillion();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetIntNegativeOneMillion_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.GetIntNegativeOneMillionAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetTenBillion_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.GetTenBillion();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetTenBillion_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.GetTenBillionAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetTenBillion_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.GetTenBillion();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetTenBillion_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.GetTenBillionAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetNegativeTenBillion_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.GetNegativeTenBillion();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetNegativeTenBillion_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.GetNegativeTenBillionAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetNegativeTenBillion_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.GetNegativeTenBillion();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetNegativeTenBillion_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.GetNegativeTenBillionAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FloatScientificPositive_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.FloatScientificPositive();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FloatScientificPositive_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.FloatScientificPositiveAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FloatScientificPositive_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.FloatScientificPositive();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FloatScientificPositive_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.FloatScientificPositiveAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FloatScientificNegative_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.FloatScientificNegative();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FloatScientificNegative_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.FloatScientificNegativeAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FloatScientificNegative_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.FloatScientificNegative();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FloatScientificNegative_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.FloatScientificNegativeAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DoubleDecimalPositive_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.DoubleDecimalPositive();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DoubleDecimalPositive_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.DoubleDecimalPositiveAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DoubleDecimalPositive_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.DoubleDecimalPositive();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DoubleDecimalPositive_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.DoubleDecimalPositiveAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DoubleDecimalNegative_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.DoubleDecimalNegative();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DoubleDecimalNegative_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.DoubleDecimalNegativeAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DoubleDecimalNegative_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.DoubleDecimalNegative();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DoubleDecimalNegative_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.DoubleDecimalNegativeAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringUnicode_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.StringUnicode();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringUnicode_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.StringUnicodeAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringUnicode_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.StringUnicode();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringUnicode_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.StringUnicodeAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringUrlEncoded_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.StringUrlEncoded();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringUrlEncoded_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.StringUrlEncodedAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringUrlEncoded_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.StringUrlEncoded();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringUrlEncoded_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.StringUrlEncodedAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringUrlNonEncoded_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.StringUrlNonEncoded();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringUrlNonEncoded_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.StringUrlNonEncodedAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringUrlNonEncoded_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.StringUrlNonEncoded();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringUrlNonEncoded_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.StringUrlNonEncodedAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringEmpty_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.StringEmpty();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringEmpty_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.StringEmptyAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringEmpty_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.StringEmpty();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringEmpty_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.StringEmptyAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringNull_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.StringNull("<stringPath>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringNull_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.StringNullAsync("<stringPath>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringNull_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.StringNull("<stringPath>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.StringNullAsync("<stringPath>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_EnumValid_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.EnumValid("red color");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_EnumValid_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.EnumValidAsync("red color");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_EnumValid_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.EnumValid("red color");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_EnumValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.EnumValidAsync("red color");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_EnumNull_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.EnumNull("red color");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_EnumNull_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.EnumNullAsync("red color");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_EnumNull_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.EnumNull("red color");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_EnumNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.EnumNullAsync("red color");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ByteMultiByte_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.ByteMultiByte(BinaryData.FromObjectAsJson(new object()));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ByteMultiByte_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.ByteMultiByteAsync(BinaryData.FromObjectAsJson(new object()));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ByteMultiByte_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.ByteMultiByte(BinaryData.FromObjectAsJson(new object()));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ByteMultiByte_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.ByteMultiByteAsync(BinaryData.FromObjectAsJson(new object()));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ByteEmpty_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.ByteEmpty();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ByteEmpty_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.ByteEmptyAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ByteEmpty_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.ByteEmpty();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ByteEmpty_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.ByteEmptyAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ByteNull_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.ByteNull(BinaryData.FromObjectAsJson(new object()));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ByteNull_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.ByteNullAsync(BinaryData.FromObjectAsJson(new object()));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ByteNull_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.ByteNull(BinaryData.FromObjectAsJson(new object()));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ByteNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.ByteNullAsync(BinaryData.FromObjectAsJson(new object()));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DateValid_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.DateValid();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DateValid_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.DateValidAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DateValid_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.DateValid();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DateValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.DateValidAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DateNull_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.DateNull(DateTimeOffset.Parse("2022-05-10"));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DateNull_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.DateNullAsync(DateTimeOffset.Parse("2022-05-10"));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DateNull_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.DateNull(DateTimeOffset.Parse("2022-05-10"));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DateNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.DateNullAsync(DateTimeOffset.Parse("2022-05-10"));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DateTimeValid_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.DateTimeValid();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DateTimeValid_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.DateTimeValidAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DateTimeValid_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.DateTimeValid();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DateTimeValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.DateTimeValidAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DateTimeNull_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.DateTimeNull(DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DateTimeNull_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.DateTimeNullAsync(DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DateTimeNull_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.DateTimeNull(DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DateTimeNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.DateTimeNullAsync(DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Base64Url_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.Base64Url(BinaryData.FromObjectAsJson(new object()));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Base64Url_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.Base64UrlAsync(BinaryData.FromObjectAsJson(new object()));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_Base64Url_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.Base64Url(BinaryData.FromObjectAsJson(new object()));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_Base64Url_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.Base64UrlAsync(BinaryData.FromObjectAsJson(new object()));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ArrayCsvInPath_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.ArrayCsvInPath(new string[] { "<arrayPath>" });

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ArrayCsvInPath_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.ArrayCsvInPathAsync(new string[] { "<arrayPath>" });

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ArrayCsvInPath_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.ArrayCsvInPath(new string[] { "<arrayPath>" });

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ArrayCsvInPath_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.ArrayCsvInPathAsync(new string[] { "<arrayPath>" });

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_UnixTimeUrl_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.UnixTimeUrl(DateTimeOffset.FromUnixTimeSeconds(1652209051L));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_UnixTimeUrl_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.UnixTimeUrlAsync(DateTimeOffset.FromUnixTimeSeconds(1652209051L));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_UnixTimeUrl_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = client.UnixTimeUrl(DateTimeOffset.FromUnixTimeSeconds(1652209051L));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_UnixTimeUrl_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PathsClient client = new PathsClient(credential);

            Response response = await client.UnixTimeUrlAsync(DateTimeOffset.FromUnixTimeSeconds(1652209051L));

            Console.WriteLine(response.Status);
        }
    }
}
