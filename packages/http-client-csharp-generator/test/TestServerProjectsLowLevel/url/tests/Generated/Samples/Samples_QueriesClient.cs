// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Identity;
using NUnit.Framework;
using url_LowLevel;

namespace url_LowLevel.Samples
{
    public partial class Samples_QueriesClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetBooleanTrue_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.GetBooleanTrue();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetBooleanTrue_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.GetBooleanTrueAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetBooleanTrue_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.GetBooleanTrue();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetBooleanTrue_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.GetBooleanTrueAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetBooleanFalse_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.GetBooleanFalse();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetBooleanFalse_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.GetBooleanFalseAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetBooleanFalse_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.GetBooleanFalse();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetBooleanFalse_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.GetBooleanFalseAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetBooleanNull_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.GetBooleanNull();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetBooleanNull_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.GetBooleanNullAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetBooleanNull_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.GetBooleanNull(boolQuery: true);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetBooleanNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.GetBooleanNullAsync(boolQuery: true);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetIntOneMillion_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.GetIntOneMillion();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetIntOneMillion_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.GetIntOneMillionAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetIntOneMillion_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.GetIntOneMillion();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetIntOneMillion_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.GetIntOneMillionAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetIntNegativeOneMillion_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.GetIntNegativeOneMillion();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetIntNegativeOneMillion_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.GetIntNegativeOneMillionAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetIntNegativeOneMillion_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.GetIntNegativeOneMillion();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetIntNegativeOneMillion_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.GetIntNegativeOneMillionAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetIntNull_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.GetIntNull();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetIntNull_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.GetIntNullAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetIntNull_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.GetIntNull(intQuery: 1234);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetIntNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.GetIntNullAsync(intQuery: 1234);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetTenBillion_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.GetTenBillion();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetTenBillion_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.GetTenBillionAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetTenBillion_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.GetTenBillion();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetTenBillion_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.GetTenBillionAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetNegativeTenBillion_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.GetNegativeTenBillion();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetNegativeTenBillion_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.GetNegativeTenBillionAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetNegativeTenBillion_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.GetNegativeTenBillion();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetNegativeTenBillion_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.GetNegativeTenBillionAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetLongNull_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.GetLongNull();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetLongNull_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.GetLongNullAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetLongNull_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.GetLongNull(longQuery: 1234L);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetLongNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.GetLongNullAsync(longQuery: 1234L);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FloatScientificPositive_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.FloatScientificPositive();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FloatScientificPositive_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.FloatScientificPositiveAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FloatScientificPositive_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.FloatScientificPositive();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FloatScientificPositive_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.FloatScientificPositiveAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FloatScientificNegative_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.FloatScientificNegative();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FloatScientificNegative_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.FloatScientificNegativeAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FloatScientificNegative_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.FloatScientificNegative();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FloatScientificNegative_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.FloatScientificNegativeAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FloatNull_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.FloatNull();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FloatNull_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.FloatNullAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FloatNull_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.FloatNull(floatQuery: 123.45F);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FloatNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.FloatNullAsync(floatQuery: 123.45F);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DoubleDecimalPositive_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.DoubleDecimalPositive();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DoubleDecimalPositive_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.DoubleDecimalPositiveAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DoubleDecimalPositive_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.DoubleDecimalPositive();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DoubleDecimalPositive_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.DoubleDecimalPositiveAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DoubleDecimalNegative_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.DoubleDecimalNegative();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DoubleDecimalNegative_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.DoubleDecimalNegativeAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DoubleDecimalNegative_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.DoubleDecimalNegative();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DoubleDecimalNegative_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.DoubleDecimalNegativeAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DoubleNull_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.DoubleNull();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DoubleNull_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.DoubleNullAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DoubleNull_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.DoubleNull(doubleQuery: 123.45);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DoubleNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.DoubleNullAsync(doubleQuery: 123.45);

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringUnicode_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.StringUnicode();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringUnicode_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.StringUnicodeAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringUnicode_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.StringUnicode();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringUnicode_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.StringUnicodeAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringUrlEncoded_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.StringUrlEncoded();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringUrlEncoded_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.StringUrlEncodedAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringUrlEncoded_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.StringUrlEncoded();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringUrlEncoded_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.StringUrlEncodedAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringEmpty_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.StringEmpty();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringEmpty_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.StringEmptyAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringEmpty_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.StringEmpty();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringEmpty_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.StringEmptyAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringNull_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.StringNull();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringNull_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.StringNullAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_StringNull_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.StringNull(stringQuery: "<stringQuery>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_StringNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.StringNullAsync(stringQuery: "<stringQuery>");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_EnumValid_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.EnumValid();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_EnumValid_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.EnumValidAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_EnumValid_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.EnumValid(enumQuery: "red color");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_EnumValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.EnumValidAsync(enumQuery: "red color");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_EnumNull_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.EnumNull();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_EnumNull_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.EnumNullAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_EnumNull_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.EnumNull(enumQuery: "red color");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_EnumNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.EnumNullAsync(enumQuery: "red color");

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ByteMultiByte_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.ByteMultiByte();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ByteMultiByte_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.ByteMultiByteAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ByteMultiByte_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.ByteMultiByte(byteQuery: BinaryData.FromObjectAsJson(new object()));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ByteMultiByte_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.ByteMultiByteAsync(byteQuery: BinaryData.FromObjectAsJson(new object()));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ByteEmpty_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.ByteEmpty();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ByteEmpty_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.ByteEmptyAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ByteEmpty_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.ByteEmpty();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ByteEmpty_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.ByteEmptyAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ByteNull_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.ByteNull();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ByteNull_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.ByteNullAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ByteNull_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.ByteNull(byteQuery: BinaryData.FromObjectAsJson(new object()));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ByteNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.ByteNullAsync(byteQuery: BinaryData.FromObjectAsJson(new object()));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DateValid_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.DateValid();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DateValid_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.DateValidAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DateValid_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.DateValid();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DateValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.DateValidAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DateNull_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.DateNull();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DateNull_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.DateNullAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DateNull_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.DateNull(dateQuery: DateTimeOffset.Parse("2022-05-10"));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DateNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.DateNullAsync(dateQuery: DateTimeOffset.Parse("2022-05-10"));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DateTimeValid_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.DateTimeValid();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DateTimeValid_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.DateTimeValidAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DateTimeValid_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.DateTimeValid();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DateTimeValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.DateTimeValidAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DateTimeNull_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.DateTimeNull();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DateTimeNull_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.DateTimeNullAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DateTimeNull_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.DateTimeNull(dateTimeQuery: DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DateTimeNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.DateTimeNullAsync(dateTimeQuery: DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"));

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ArrayStringCsvValid_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.ArrayStringCsvValid();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ArrayStringCsvValid_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.ArrayStringCsvValidAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ArrayStringCsvValid_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.ArrayStringCsvValid(arrayQuery: new string[] { "<arrayQuery>" });

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ArrayStringCsvValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.ArrayStringCsvValidAsync(arrayQuery: new string[] { "<arrayQuery>" });

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ArrayStringCsvNull_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.ArrayStringCsvNull();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ArrayStringCsvNull_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.ArrayStringCsvNullAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ArrayStringCsvNull_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.ArrayStringCsvNull(arrayQuery: new string[] { "<arrayQuery>" });

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ArrayStringCsvNull_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.ArrayStringCsvNullAsync(arrayQuery: new string[] { "<arrayQuery>" });

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ArrayStringCsvEmpty_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.ArrayStringCsvEmpty();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ArrayStringCsvEmpty_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.ArrayStringCsvEmptyAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ArrayStringCsvEmpty_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.ArrayStringCsvEmpty(arrayQuery: new string[] { "<arrayQuery>" });

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ArrayStringCsvEmpty_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.ArrayStringCsvEmptyAsync(arrayQuery: new string[] { "<arrayQuery>" });

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ArrayStringNoCollectionFormatEmpty_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.ArrayStringNoCollectionFormatEmpty();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ArrayStringNoCollectionFormatEmpty_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.ArrayStringNoCollectionFormatEmptyAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ArrayStringNoCollectionFormatEmpty_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.ArrayStringNoCollectionFormatEmpty(arrayQuery: new string[] { "<arrayQuery>" });

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ArrayStringNoCollectionFormatEmpty_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.ArrayStringNoCollectionFormatEmptyAsync(arrayQuery: new string[] { "<arrayQuery>" });

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ArrayStringSsvValid_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.ArrayStringSsvValid();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ArrayStringSsvValid_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.ArrayStringSsvValidAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ArrayStringSsvValid_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.ArrayStringSsvValid(arrayQuery: new string[] { "<arrayQuery>" });

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ArrayStringSsvValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.ArrayStringSsvValidAsync(arrayQuery: new string[] { "<arrayQuery>" });

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ArrayStringTsvValid_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.ArrayStringTsvValid();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ArrayStringTsvValid_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.ArrayStringTsvValidAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ArrayStringTsvValid_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.ArrayStringTsvValid(arrayQuery: new string[] { "<arrayQuery>" });

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ArrayStringTsvValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.ArrayStringTsvValidAsync(arrayQuery: new string[] { "<arrayQuery>" });

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ArrayStringPipesValid_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.ArrayStringPipesValid();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ArrayStringPipesValid_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.ArrayStringPipesValidAsync();

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ArrayStringPipesValid_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = client.ArrayStringPipesValid(arrayQuery: new string[] { "<arrayQuery>" });

            Console.WriteLine(response.Status);
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ArrayStringPipesValid_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            QueriesClient client = new QueriesClient(credential);

            Response response = await client.ArrayStringPipesValidAsync(arrayQuery: new string[] { "<arrayQuery>" });

            Console.WriteLine(response.Status);
        }
    }
}
