<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetBooleanTrueAsync(RequestContext)">
      <example>
This sample shows how to call GetBooleanTrueAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.GetBooleanTrueAsync();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call GetBooleanTrueAsync with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.GetBooleanTrueAsync();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetBooleanTrue(RequestContext)">
      <example>
This sample shows how to call GetBooleanTrue.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.GetBooleanTrue();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call GetBooleanTrue with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.GetBooleanTrue();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetBooleanFalseAsync(RequestContext)">
      <example>
This sample shows how to call GetBooleanFalseAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.GetBooleanFalseAsync();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call GetBooleanFalseAsync with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.GetBooleanFalseAsync();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetBooleanFalse(RequestContext)">
      <example>
This sample shows how to call GetBooleanFalse.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.GetBooleanFalse();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call GetBooleanFalse with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.GetBooleanFalse();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetIntOneMillionAsync(RequestContext)">
      <example>
This sample shows how to call GetIntOneMillionAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.GetIntOneMillionAsync();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call GetIntOneMillionAsync with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.GetIntOneMillionAsync();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetIntOneMillion(RequestContext)">
      <example>
This sample shows how to call GetIntOneMillion.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.GetIntOneMillion();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call GetIntOneMillion with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.GetIntOneMillion();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetIntNegativeOneMillionAsync(RequestContext)">
      <example>
This sample shows how to call GetIntNegativeOneMillionAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.GetIntNegativeOneMillionAsync();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call GetIntNegativeOneMillionAsync with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.GetIntNegativeOneMillionAsync();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetIntNegativeOneMillion(RequestContext)">
      <example>
This sample shows how to call GetIntNegativeOneMillion.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.GetIntNegativeOneMillion();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call GetIntNegativeOneMillion with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.GetIntNegativeOneMillion();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetTenBillionAsync(RequestContext)">
      <example>
This sample shows how to call GetTenBillionAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.GetTenBillionAsync();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call GetTenBillionAsync with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.GetTenBillionAsync();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetTenBillion(RequestContext)">
      <example>
This sample shows how to call GetTenBillion.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.GetTenBillion();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call GetTenBillion with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.GetTenBillion();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetNegativeTenBillionAsync(RequestContext)">
      <example>
This sample shows how to call GetNegativeTenBillionAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.GetNegativeTenBillionAsync();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call GetNegativeTenBillionAsync with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.GetNegativeTenBillionAsync();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetNegativeTenBillion(RequestContext)">
      <example>
This sample shows how to call GetNegativeTenBillion.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.GetNegativeTenBillion();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call GetNegativeTenBillion with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.GetNegativeTenBillion();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="FloatScientificPositiveAsync(RequestContext)">
      <example>
This sample shows how to call FloatScientificPositiveAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.FloatScientificPositiveAsync();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call FloatScientificPositiveAsync with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.FloatScientificPositiveAsync();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="FloatScientificPositive(RequestContext)">
      <example>
This sample shows how to call FloatScientificPositive.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.FloatScientificPositive();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call FloatScientificPositive with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.FloatScientificPositive();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="FloatScientificNegativeAsync(RequestContext)">
      <example>
This sample shows how to call FloatScientificNegativeAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.FloatScientificNegativeAsync();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call FloatScientificNegativeAsync with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.FloatScientificNegativeAsync();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="FloatScientificNegative(RequestContext)">
      <example>
This sample shows how to call FloatScientificNegative.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.FloatScientificNegative();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call FloatScientificNegative with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.FloatScientificNegative();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DoubleDecimalPositiveAsync(RequestContext)">
      <example>
This sample shows how to call DoubleDecimalPositiveAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.DoubleDecimalPositiveAsync();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DoubleDecimalPositiveAsync with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.DoubleDecimalPositiveAsync();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DoubleDecimalPositive(RequestContext)">
      <example>
This sample shows how to call DoubleDecimalPositive.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.DoubleDecimalPositive();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DoubleDecimalPositive with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.DoubleDecimalPositive();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DoubleDecimalNegativeAsync(RequestContext)">
      <example>
This sample shows how to call DoubleDecimalNegativeAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.DoubleDecimalNegativeAsync();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DoubleDecimalNegativeAsync with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.DoubleDecimalNegativeAsync();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DoubleDecimalNegative(RequestContext)">
      <example>
This sample shows how to call DoubleDecimalNegative.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.DoubleDecimalNegative();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DoubleDecimalNegative with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.DoubleDecimalNegative();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="StringUnicodeAsync(RequestContext)">
      <example>
This sample shows how to call StringUnicodeAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.StringUnicodeAsync();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call StringUnicodeAsync with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.StringUnicodeAsync();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="StringUnicode(RequestContext)">
      <example>
This sample shows how to call StringUnicode.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.StringUnicode();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call StringUnicode with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.StringUnicode();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="StringUrlEncodedAsync(RequestContext)">
      <example>
This sample shows how to call StringUrlEncodedAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.StringUrlEncodedAsync();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call StringUrlEncodedAsync with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.StringUrlEncodedAsync();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="StringUrlEncoded(RequestContext)">
      <example>
This sample shows how to call StringUrlEncoded.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.StringUrlEncoded();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call StringUrlEncoded with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.StringUrlEncoded();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="StringUrlNonEncodedAsync(RequestContext)">
      <example>
This sample shows how to call StringUrlNonEncodedAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.StringUrlNonEncodedAsync();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call StringUrlNonEncodedAsync with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.StringUrlNonEncodedAsync();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="StringUrlNonEncoded(RequestContext)">
      <example>
This sample shows how to call StringUrlNonEncoded.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.StringUrlNonEncoded();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call StringUrlNonEncoded with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.StringUrlNonEncoded();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="StringEmptyAsync(RequestContext)">
      <example>
This sample shows how to call StringEmptyAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.StringEmptyAsync();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call StringEmptyAsync with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.StringEmptyAsync();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="StringEmpty(RequestContext)">
      <example>
This sample shows how to call StringEmpty.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.StringEmpty();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call StringEmpty with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.StringEmpty();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="StringNullAsync(string,RequestContext)">
      <example>
This sample shows how to call StringNullAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.StringNullAsync("<stringPath>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call StringNullAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.StringNullAsync("<stringPath>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="StringNull(string,RequestContext)">
      <example>
This sample shows how to call StringNull.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.StringNull("<stringPath>");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call StringNull with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.StringNull("<stringPath>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="EnumValidAsync(string,RequestContext)">
      <example>
This sample shows how to call EnumValidAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.EnumValidAsync("red color");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call EnumValidAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.EnumValidAsync("red color");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="EnumValid(string,RequestContext)">
      <example>
This sample shows how to call EnumValid.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.EnumValid("red color");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call EnumValid with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.EnumValid("red color");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="EnumNullAsync(string,RequestContext)">
      <example>
This sample shows how to call EnumNullAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.EnumNullAsync("red color");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call EnumNullAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.EnumNullAsync("red color");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="EnumNull(string,RequestContext)">
      <example>
This sample shows how to call EnumNull.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.EnumNull("red color");

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call EnumNull with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.EnumNull("red color");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ByteMultiByteAsync(BinaryData,RequestContext)">
      <example>
This sample shows how to call ByteMultiByteAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.ByteMultiByteAsync(BinaryData.FromObjectAsJson(new object()));

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ByteMultiByteAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.ByteMultiByteAsync(BinaryData.FromObjectAsJson(new object()));

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ByteMultiByte(BinaryData,RequestContext)">
      <example>
This sample shows how to call ByteMultiByte.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.ByteMultiByte(BinaryData.FromObjectAsJson(new object()));

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ByteMultiByte with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.ByteMultiByte(BinaryData.FromObjectAsJson(new object()));

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ByteEmptyAsync(RequestContext)">
      <example>
This sample shows how to call ByteEmptyAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.ByteEmptyAsync();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ByteEmptyAsync with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.ByteEmptyAsync();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ByteEmpty(RequestContext)">
      <example>
This sample shows how to call ByteEmpty.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.ByteEmpty();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ByteEmpty with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.ByteEmpty();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ByteNullAsync(BinaryData,RequestContext)">
      <example>
This sample shows how to call ByteNullAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.ByteNullAsync(BinaryData.FromObjectAsJson(new object()));

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ByteNullAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.ByteNullAsync(BinaryData.FromObjectAsJson(new object()));

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ByteNull(BinaryData,RequestContext)">
      <example>
This sample shows how to call ByteNull.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.ByteNull(BinaryData.FromObjectAsJson(new object()));

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ByteNull with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.ByteNull(BinaryData.FromObjectAsJson(new object()));

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DateValidAsync(RequestContext)">
      <example>
This sample shows how to call DateValidAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.DateValidAsync();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DateValidAsync with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.DateValidAsync();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DateValid(RequestContext)">
      <example>
This sample shows how to call DateValid.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.DateValid();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DateValid with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.DateValid();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DateNullAsync(DateTimeOffset,RequestContext)">
      <example>
This sample shows how to call DateNullAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.DateNullAsync(DateTimeOffset.Parse("2022-05-10"));

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DateNullAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.DateNullAsync(DateTimeOffset.Parse("2022-05-10"));

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DateNull(DateTimeOffset,RequestContext)">
      <example>
This sample shows how to call DateNull.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.DateNull(DateTimeOffset.Parse("2022-05-10"));

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DateNull with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.DateNull(DateTimeOffset.Parse("2022-05-10"));

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DateTimeValidAsync(RequestContext)">
      <example>
This sample shows how to call DateTimeValidAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.DateTimeValidAsync();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DateTimeValidAsync with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.DateTimeValidAsync();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DateTimeValid(RequestContext)">
      <example>
This sample shows how to call DateTimeValid.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.DateTimeValid();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DateTimeValid with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.DateTimeValid();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DateTimeNullAsync(DateTimeOffset,RequestContext)">
      <example>
This sample shows how to call DateTimeNullAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.DateTimeNullAsync(DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"));

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DateTimeNullAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.DateTimeNullAsync(DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"));

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="DateTimeNull(DateTimeOffset,RequestContext)">
      <example>
This sample shows how to call DateTimeNull.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.DateTimeNull(DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"));

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call DateTimeNull with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.DateTimeNull(DateTimeOffset.Parse("2022-05-10T18:57:31.2311892Z"));

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Base64UrlAsync(BinaryData,RequestContext)">
      <example>
This sample shows how to call Base64UrlAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.Base64UrlAsync(BinaryData.FromObjectAsJson(new object()));

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call Base64UrlAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.Base64UrlAsync(BinaryData.FromObjectAsJson(new object()));

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Base64Url(BinaryData,RequestContext)">
      <example>
This sample shows how to call Base64Url.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.Base64Url(BinaryData.FromObjectAsJson(new object()));

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call Base64Url with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.Base64Url(BinaryData.FromObjectAsJson(new object()));

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ArrayCsvInPathAsync(IEnumerable{string},RequestContext)">
      <example>
This sample shows how to call ArrayCsvInPathAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.ArrayCsvInPathAsync(new string[] { "<arrayPath>" });

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ArrayCsvInPathAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.ArrayCsvInPathAsync(new string[] { "<arrayPath>" });

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="ArrayCsvInPath(IEnumerable{string},RequestContext)">
      <example>
This sample shows how to call ArrayCsvInPath.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.ArrayCsvInPath(new string[] { "<arrayPath>" });

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call ArrayCsvInPath with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.ArrayCsvInPath(new string[] { "<arrayPath>" });

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="UnixTimeUrlAsync(DateTimeOffset,RequestContext)">
      <example>
This sample shows how to call UnixTimeUrlAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.UnixTimeUrlAsync(DateTimeOffset.FromUnixTimeSeconds(1652209051L));

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call UnixTimeUrlAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = await client.UnixTimeUrlAsync(DateTimeOffset.FromUnixTimeSeconds(1652209051L));

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="UnixTimeUrl(DateTimeOffset,RequestContext)">
      <example>
This sample shows how to call UnixTimeUrl.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.UnixTimeUrl(DateTimeOffset.FromUnixTimeSeconds(1652209051L));

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call UnixTimeUrl with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
PathsClient client = new PathsClient(credential);

Response response = client.UnixTimeUrl(DateTimeOffset.FromUnixTimeSeconds(1652209051L));

Console.WriteLine(response.Status);
]]></code></example>
    </member>
  </members>
</doc>