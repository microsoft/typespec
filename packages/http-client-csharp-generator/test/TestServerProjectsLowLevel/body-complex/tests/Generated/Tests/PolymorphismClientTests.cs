// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using body_complex_LowLevel;

namespace body_complex_LowLevel.Tests
{
    public partial class PolymorphismClientTests : body_complex_LowLevelTestBase
    {
        public PolymorphismClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetValid_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PolymorphismClient client = CreatePolymorphismClient(endpoint, credential);

            Response response = await client.GetValidAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetValid_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PolymorphismClient client = CreatePolymorphismClient(endpoint, credential);

            Response response = await client.GetValidAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task PutValid_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PolymorphismClient client = CreatePolymorphismClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                fishtype = "salmon",
                length = 123.45F,
            });
            Response response = await client.PutValidAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task PutValid_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PolymorphismClient client = CreatePolymorphismClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                location = "<location>",
                iswild = true,
                fishtype = "salmon",
                species = "<species>",
                length = 123.45F,
                siblings = new object[]
            {
null
            },
            });
            Response response = await client.PutValidAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetDotSyntax_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PolymorphismClient client = CreatePolymorphismClient(endpoint, credential);

            Response response = await client.GetDotSyntaxAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetDotSyntax_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PolymorphismClient client = CreatePolymorphismClient(endpoint, credential);

            Response response = await client.GetDotSyntaxAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetComposedWithDiscriminator_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PolymorphismClient client = CreatePolymorphismClient(endpoint, credential);

            Response response = await client.GetComposedWithDiscriminatorAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetComposedWithDiscriminator_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PolymorphismClient client = CreatePolymorphismClient(endpoint, credential);

            Response response = await client.GetComposedWithDiscriminatorAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetComposedWithoutDiscriminator_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PolymorphismClient client = CreatePolymorphismClient(endpoint, credential);

            Response response = await client.GetComposedWithoutDiscriminatorAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetComposedWithoutDiscriminator_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PolymorphismClient client = CreatePolymorphismClient(endpoint, credential);

            Response response = await client.GetComposedWithoutDiscriminatorAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetComplicated_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PolymorphismClient client = CreatePolymorphismClient(endpoint, credential);

            Response response = await client.GetComplicatedAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetComplicated_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PolymorphismClient client = CreatePolymorphismClient(endpoint, credential);

            Response response = await client.GetComplicatedAsync(null);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task PutComplicated_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PolymorphismClient client = CreatePolymorphismClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                fishtype = "smart_salmon",
                length = 123.45F,
            });
            Response response = await client.PutComplicatedAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task PutComplicated_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PolymorphismClient client = CreatePolymorphismClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                college_degree = "<college_degree>",
                location = "<location>",
                iswild = true,
                fishtype = "smart_salmon",
                species = "<species>",
                length = 123.45F,
                siblings = new object[]
            {
new
{
location = "<location>",
iswild = true,
fishtype = "salmon",
species = "<species>",
length = 123.45F,
siblings = new object[]
{
null
},
}
            },
            });
            Response response = await client.PutComplicatedAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task PutMissingDiscriminator_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PolymorphismClient client = CreatePolymorphismClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                fishtype = "smart_salmon",
                length = 123.45F,
            });
            Response response = await client.PutMissingDiscriminatorAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task PutMissingDiscriminator_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PolymorphismClient client = CreatePolymorphismClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                college_degree = "<college_degree>",
                location = "<location>",
                iswild = true,
                fishtype = "smart_salmon",
                species = "<species>",
                length = 123.45F,
                siblings = new object[]
            {
new
{
location = "<location>",
iswild = true,
fishtype = "salmon",
species = "<species>",
length = 123.45F,
siblings = new object[]
{
null
},
}
            },
            });
            Response response = await client.PutMissingDiscriminatorAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task PutValidMissingRequired_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PolymorphismClient client = CreatePolymorphismClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                fishtype = "salmon",
                length = 123.45F,
            });
            Response response = await client.PutValidMissingRequiredAsync(content);
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task PutValidMissingRequired_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PolymorphismClient client = CreatePolymorphismClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                location = "<location>",
                iswild = true,
                fishtype = "salmon",
                species = "<species>",
                length = 123.45F,
                siblings = new object[]
            {
null
            },
            });
            Response response = await client.PutValidMissingRequiredAsync(content);
        }
    }
}
