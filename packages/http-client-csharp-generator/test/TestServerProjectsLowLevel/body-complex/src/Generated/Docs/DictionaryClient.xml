<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="GetValidAsync(RequestContext)">
      <example>
This sample shows how to call GetValidAsync and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DictionaryClient client = new DictionaryClient(credential);

Response response = await client.GetValidAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetValidAsync with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DictionaryClient client = new DictionaryClient(credential);

Response response = await client.GetValidAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("defaultProgram").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetValid(RequestContext)">
      <example>
This sample shows how to call GetValid and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DictionaryClient client = new DictionaryClient(credential);

Response response = client.GetValid(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetValid with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DictionaryClient client = new DictionaryClient(credential);

Response response = client.GetValid(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("defaultProgram").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="PutValidAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutValidAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DictionaryClient client = new DictionaryClient(credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.PutValidAsync(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call PutValidAsync with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DictionaryClient client = new DictionaryClient(credential);

using RequestContent content = RequestContent.Create(new
{
    defaultProgram = new
    {
        key = "<defaultProgram>",
    },
});
Response response = await client.PutValidAsync(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PutValid(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutValid.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DictionaryClient client = new DictionaryClient(credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.PutValid(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call PutValid with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DictionaryClient client = new DictionaryClient(credential);

using RequestContent content = RequestContent.Create(new
{
    defaultProgram = new
    {
        key = "<defaultProgram>",
    },
});
Response response = client.PutValid(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetEmptyAsync(RequestContext)">
      <example>
This sample shows how to call GetEmptyAsync and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DictionaryClient client = new DictionaryClient(credential);

Response response = await client.GetEmptyAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetEmptyAsync with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DictionaryClient client = new DictionaryClient(credential);

Response response = await client.GetEmptyAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("defaultProgram").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetEmpty(RequestContext)">
      <example>
This sample shows how to call GetEmpty and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DictionaryClient client = new DictionaryClient(credential);

Response response = client.GetEmpty(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetEmpty with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DictionaryClient client = new DictionaryClient(credential);

Response response = client.GetEmpty(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("defaultProgram").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="PutEmptyAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutEmptyAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DictionaryClient client = new DictionaryClient(credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.PutEmptyAsync(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call PutEmptyAsync with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DictionaryClient client = new DictionaryClient(credential);

using RequestContent content = RequestContent.Create(new
{
    defaultProgram = new
    {
        key = "<defaultProgram>",
    },
});
Response response = await client.PutEmptyAsync(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="PutEmpty(RequestContent,RequestContext)">
      <example>
This sample shows how to call PutEmpty.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DictionaryClient client = new DictionaryClient(credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.PutEmpty(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call PutEmpty with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DictionaryClient client = new DictionaryClient(credential);

using RequestContent content = RequestContent.Create(new
{
    defaultProgram = new
    {
        key = "<defaultProgram>",
    },
});
Response response = client.PutEmpty(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetNullAsync(RequestContext)">
      <example>
This sample shows how to call GetNullAsync and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DictionaryClient client = new DictionaryClient(credential);

Response response = await client.GetNullAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetNullAsync with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DictionaryClient client = new DictionaryClient(credential);

Response response = await client.GetNullAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("defaultProgram").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetNull(RequestContext)">
      <example>
This sample shows how to call GetNull and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DictionaryClient client = new DictionaryClient(credential);

Response response = client.GetNull(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetNull with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DictionaryClient client = new DictionaryClient(credential);

Response response = client.GetNull(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("defaultProgram").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetNotProvidedAsync(RequestContext)">
      <example>
This sample shows how to call GetNotProvidedAsync and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DictionaryClient client = new DictionaryClient(credential);

Response response = await client.GetNotProvidedAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetNotProvidedAsync with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DictionaryClient client = new DictionaryClient(credential);

Response response = await client.GetNotProvidedAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("defaultProgram").GetProperty("<key>").ToString());
]]></code></example>
    </member>
    <member name="GetNotProvided(RequestContext)">
      <example>
This sample shows how to call GetNotProvided and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DictionaryClient client = new DictionaryClient(credential);

Response response = client.GetNotProvided(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call GetNotProvided with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
DictionaryClient client = new DictionaryClient(credential);

Response response = client.GetNotProvided(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("defaultProgram").GetProperty("<key>").ToString());
]]></code></example>
    </member>
  </members>
</doc>