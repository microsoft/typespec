// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using paging_LowLevel;

namespace paging_LowLevel.Tests
{
    public partial class PagingClientTests : paging_LowLevelTestBase
    {
        public PagingClientTests(bool isAsync) : base(isAsync)
        {
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetNoItemNamePages_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.GetNoItemNamePagesAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetNoItemNamePages_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.GetNoItemNamePagesAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetEmptyNextLinkNamePages_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.GetEmptyNextLinkNamePagesAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetEmptyNextLinkNamePages_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.GetEmptyNextLinkNamePagesAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetNullNextLinkNamePages_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.GetNullNextLinkNamePagesAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetNullNextLinkNamePages_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.GetNullNextLinkNamePagesAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetSinglePages_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.GetSinglePagesAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetSinglePages_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.GetSinglePagesAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetSinglePagesWithBodyParams_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new object());
            await foreach (BinaryData item in client.GetSinglePagesWithBodyParamsAsync(content))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetSinglePagesWithBodyParams_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            await foreach (BinaryData item in client.GetSinglePagesWithBodyParamsAsync(content))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task FirstResponseEmpty_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.FirstResponseEmptyAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task FirstResponseEmpty_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.FirstResponseEmptyAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetMultiplePages_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.GetMultiplePagesAsync(null, null, null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetMultiplePages_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.GetMultiplePagesAsync(1234, 1234, null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetWithQueryParams_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.GetWithQueryParamsAsync(1234, null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetWithQueryParams_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.GetWithQueryParamsAsync(1234, null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task DuplicateParams_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.DuplicateParamsAsync(null, null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task DuplicateParams_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.DuplicateParamsAsync("<filter>", null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task PageWithMaxPageSize_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.PageWithMaxPageSizeAsync(null, null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task PageWithMaxPageSize_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.PageWithMaxPageSizeAsync("5", null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task NextOperationWithQueryParams_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.NextOperationWithQueryParamsAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task NextOperationWithQueryParams_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.NextOperationWithQueryParamsAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetOdataMultiplePages_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.GetOdataMultiplePagesAsync(null, null, null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetOdataMultiplePages_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.GetOdataMultiplePagesAsync(1234, 1234, null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetMultiplePagesWithOffset_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.GetMultiplePagesWithOffsetAsync(1234, null, null, null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetMultiplePagesWithOffset_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.GetMultiplePagesWithOffsetAsync(1234, 1234, 1234, null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetMultiplePagesRetryFirst_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.GetMultiplePagesRetryFirstAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetMultiplePagesRetryFirst_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.GetMultiplePagesRetryFirstAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetMultiplePagesRetrySecond_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.GetMultiplePagesRetrySecondAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetMultiplePagesRetrySecond_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.GetMultiplePagesRetrySecondAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetSinglePagesFailure_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.GetSinglePagesFailureAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetSinglePagesFailure_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.GetSinglePagesFailureAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetMultiplePagesFailure_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.GetMultiplePagesFailureAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetMultiplePagesFailure_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.GetMultiplePagesFailureAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetMultiplePagesFailureUri_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.GetMultiplePagesFailureUriAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetMultiplePagesFailureUri_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.GetMultiplePagesFailureUriAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetMultiplePagesFragmentNextLink_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.GetMultiplePagesFragmentNextLinkAsync("<tenant>", "<apiVersion>", null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetMultiplePagesFragmentNextLink_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.GetMultiplePagesFragmentNextLinkAsync("<tenant>", "<apiVersion>", null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetMultiplePagesFragmentWithGroupingNextLink_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.GetMultiplePagesFragmentWithGroupingNextLinkAsync("<tenant>", "<apiVersion>", null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetMultiplePagesFragmentWithGroupingNextLink_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.GetMultiplePagesFragmentWithGroupingNextLinkAsync("<tenant>", "<apiVersion>", null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task AppendApiVersion_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.AppendApiVersionAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task AppendApiVersion_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.AppendApiVersionAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task ReplaceApiVersion_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.ReplaceApiVersionAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task ReplaceApiVersion_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.ReplaceApiVersionAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task NextFragment_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.NextFragmentAsync("<tenant>", "<nextLink>", "<apiVersion>", null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task NextFragment_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.NextFragmentAsync("<tenant>", "<nextLink>", "<apiVersion>", null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task NextFragmentWithGrouping_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.NextFragmentWithGroupingAsync("<tenant>", "<nextLink>", "<apiVersion>", null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task NextFragmentWithGrouping_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.NextFragmentWithGroupingAsync("<tenant>", "<nextLink>", "<apiVersion>", null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetPagingModelWithItemNameWithXMSClientName_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.GetPagingModelWithItemNameWithXMSClientNameAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetPagingModelWithItemNameWithXMSClientName_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            await foreach (BinaryData item in client.GetPagingModelWithItemNameWithXMSClientNameAsync(null))
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetMultiplePagesLRO_ShortVersion()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            Operation<AsyncPageable<BinaryData>> operation = await client.GetMultiplePagesLROAsync(WaitUntil.Completed, null, null, null);
            AsyncPageable<BinaryData> responseData = operation.Value;
            await foreach (BinaryData item in operation.Value)
            {
            }
        }

        [Test]
        [Ignore("Please remove the Ignore attribute to let the test method run")]
        public async Task GetMultiplePagesLRO_AllParameters()
        {
            Uri endpoint = null;
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = CreatePagingClient(endpoint, credential);

            Operation<AsyncPageable<BinaryData>> operation = await client.GetMultiplePagesLROAsync(WaitUntil.Completed, 1234, 1234, null);
            AsyncPageable<BinaryData> responseData = operation.Value;
            await foreach (BinaryData item in operation.Value)
            {
            }
        }
    }
}
