// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using paging_LowLevel;

namespace paging_LowLevel.Samples
{
    public partial class Samples_PagingClient
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetNoItemNamePages_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.GetNoItemNamePages(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetNoItemNamePages_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.GetNoItemNamePagesAsync(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetNoItemNamePages_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.GetNoItemNamePages(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetNoItemNamePages_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.GetNoItemNamePagesAsync(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetEmptyNextLinkNamePages_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.GetEmptyNextLinkNamePages(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetEmptyNextLinkNamePages_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.GetEmptyNextLinkNamePagesAsync(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetEmptyNextLinkNamePages_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.GetEmptyNextLinkNamePages(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetEmptyNextLinkNamePages_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.GetEmptyNextLinkNamePagesAsync(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetNullNextLinkNamePages_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.GetNullNextLinkNamePages(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetNullNextLinkNamePages_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.GetNullNextLinkNamePagesAsync(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetNullNextLinkNamePages_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.GetNullNextLinkNamePages(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetNullNextLinkNamePages_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.GetNullNextLinkNamePagesAsync(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSinglePages_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.GetSinglePages(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSinglePages_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.GetSinglePagesAsync(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSinglePages_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.GetSinglePages(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSinglePages_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.GetSinglePagesAsync(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSinglePagesWithBodyParams_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            using RequestContent content = RequestContent.Create(new object());
            foreach (BinaryData item in client.GetSinglePagesWithBodyParams(content))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSinglePagesWithBodyParams_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            using RequestContent content = RequestContent.Create(new object());
            await foreach (BinaryData item in client.GetSinglePagesWithBodyParamsAsync(content))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSinglePagesWithBodyParams_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            foreach (BinaryData item in client.GetSinglePagesWithBodyParams(content))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSinglePagesWithBodyParams_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            using RequestContent content = RequestContent.Create(new
            {
                name = "<name>",
            });
            await foreach (BinaryData item in client.GetSinglePagesWithBodyParamsAsync(content))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FirstResponseEmpty_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.FirstResponseEmpty(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FirstResponseEmpty_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.FirstResponseEmptyAsync(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_FirstResponseEmpty_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.FirstResponseEmpty(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_FirstResponseEmpty_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.FirstResponseEmptyAsync(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetMultiplePages_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.GetMultiplePages(null, null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetMultiplePages_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.GetMultiplePagesAsync(null, null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetMultiplePages_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.GetMultiplePages(1234, 1234, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetMultiplePages_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.GetMultiplePagesAsync(1234, 1234, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetWithQueryParams_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.GetWithQueryParams(1234, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetWithQueryParams_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.GetWithQueryParamsAsync(1234, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetWithQueryParams_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.GetWithQueryParams(1234, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetWithQueryParams_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.GetWithQueryParamsAsync(1234, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DuplicateParams_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.DuplicateParams(null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DuplicateParams_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.DuplicateParamsAsync(null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_DuplicateParams_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.DuplicateParams("<filter>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_DuplicateParams_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.DuplicateParamsAsync("<filter>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PageWithMaxPageSize_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.PageWithMaxPageSize(null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PageWithMaxPageSize_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.PageWithMaxPageSizeAsync(null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_PageWithMaxPageSize_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.PageWithMaxPageSize("5", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_PageWithMaxPageSize_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.PageWithMaxPageSizeAsync("5", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_NextOperationWithQueryParams_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.NextOperationWithQueryParams(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_NextOperationWithQueryParams_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.NextOperationWithQueryParamsAsync(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_NextOperationWithQueryParams_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.NextOperationWithQueryParams(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_NextOperationWithQueryParams_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.NextOperationWithQueryParamsAsync(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetOdataMultiplePages_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.GetOdataMultiplePages(null, null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetOdataMultiplePages_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.GetOdataMultiplePagesAsync(null, null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetOdataMultiplePages_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.GetOdataMultiplePages(1234, 1234, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetOdataMultiplePages_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.GetOdataMultiplePagesAsync(1234, 1234, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetMultiplePagesWithOffset_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.GetMultiplePagesWithOffset(1234, null, null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetMultiplePagesWithOffset_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.GetMultiplePagesWithOffsetAsync(1234, null, null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetMultiplePagesWithOffset_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.GetMultiplePagesWithOffset(1234, 1234, 1234, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetMultiplePagesWithOffset_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.GetMultiplePagesWithOffsetAsync(1234, 1234, 1234, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetMultiplePagesRetryFirst_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.GetMultiplePagesRetryFirst(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetMultiplePagesRetryFirst_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.GetMultiplePagesRetryFirstAsync(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetMultiplePagesRetryFirst_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.GetMultiplePagesRetryFirst(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetMultiplePagesRetryFirst_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.GetMultiplePagesRetryFirstAsync(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetMultiplePagesRetrySecond_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.GetMultiplePagesRetrySecond(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetMultiplePagesRetrySecond_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.GetMultiplePagesRetrySecondAsync(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetMultiplePagesRetrySecond_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.GetMultiplePagesRetrySecond(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetMultiplePagesRetrySecond_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.GetMultiplePagesRetrySecondAsync(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSinglePagesFailure_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.GetSinglePagesFailure(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSinglePagesFailure_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.GetSinglePagesFailureAsync(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetSinglePagesFailure_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.GetSinglePagesFailure(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetSinglePagesFailure_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.GetSinglePagesFailureAsync(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetMultiplePagesFailure_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.GetMultiplePagesFailure(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetMultiplePagesFailure_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.GetMultiplePagesFailureAsync(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetMultiplePagesFailure_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.GetMultiplePagesFailure(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetMultiplePagesFailure_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.GetMultiplePagesFailureAsync(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetMultiplePagesFailureUri_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.GetMultiplePagesFailureUri(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetMultiplePagesFailureUri_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.GetMultiplePagesFailureUriAsync(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetMultiplePagesFailureUri_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.GetMultiplePagesFailureUri(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetMultiplePagesFailureUri_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.GetMultiplePagesFailureUriAsync(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetMultiplePagesFragmentNextLink_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.GetMultiplePagesFragmentNextLink("<tenant>", "<apiVersion>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetMultiplePagesFragmentNextLink_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.GetMultiplePagesFragmentNextLinkAsync("<tenant>", "<apiVersion>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetMultiplePagesFragmentNextLink_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.GetMultiplePagesFragmentNextLink("<tenant>", "<apiVersion>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetMultiplePagesFragmentNextLink_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.GetMultiplePagesFragmentNextLinkAsync("<tenant>", "<apiVersion>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetMultiplePagesFragmentWithGroupingNextLink_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.GetMultiplePagesFragmentWithGroupingNextLink("<tenant>", "<apiVersion>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetMultiplePagesFragmentWithGroupingNextLink_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.GetMultiplePagesFragmentWithGroupingNextLinkAsync("<tenant>", "<apiVersion>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetMultiplePagesFragmentWithGroupingNextLink_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.GetMultiplePagesFragmentWithGroupingNextLink("<tenant>", "<apiVersion>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetMultiplePagesFragmentWithGroupingNextLink_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.GetMultiplePagesFragmentWithGroupingNextLinkAsync("<tenant>", "<apiVersion>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_AppendApiVersion_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.AppendApiVersion(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_AppendApiVersion_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.AppendApiVersionAsync(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_AppendApiVersion_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.AppendApiVersion(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_AppendApiVersion_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.AppendApiVersionAsync(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ReplaceApiVersion_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.ReplaceApiVersion(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ReplaceApiVersion_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.ReplaceApiVersionAsync(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_ReplaceApiVersion_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.ReplaceApiVersion(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_ReplaceApiVersion_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.ReplaceApiVersionAsync(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_NextFragment_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.NextFragment("<tenant>", "<nextLink>", "<apiVersion>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_NextFragment_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.NextFragmentAsync("<tenant>", "<nextLink>", "<apiVersion>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_NextFragment_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.NextFragment("<tenant>", "<nextLink>", "<apiVersion>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_NextFragment_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.NextFragmentAsync("<tenant>", "<nextLink>", "<apiVersion>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_NextFragmentWithGrouping_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.NextFragmentWithGrouping("<tenant>", "<nextLink>", "<apiVersion>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_NextFragmentWithGrouping_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.NextFragmentWithGroupingAsync("<tenant>", "<nextLink>", "<apiVersion>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_NextFragmentWithGrouping_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.NextFragmentWithGrouping("<tenant>", "<nextLink>", "<apiVersion>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_NextFragmentWithGrouping_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.NextFragmentWithGroupingAsync("<tenant>", "<nextLink>", "<apiVersion>", null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetPagingModelWithItemNameWithXMSClientName_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.GetPagingModelWithItemNameWithXMSClientName(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetPagingModelWithItemNameWithXMSClientName_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.GetPagingModelWithItemNameWithXMSClientNameAsync(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetPagingModelWithItemNameWithXMSClientName_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            foreach (BinaryData item in client.GetPagingModelWithItemNameWithXMSClientName(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetPagingModelWithItemNameWithXMSClientName_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            await foreach (BinaryData item in client.GetPagingModelWithItemNameWithXMSClientNameAsync(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetMultiplePagesLRO_ShortVersion()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            Operation<Pageable<BinaryData>> operation = client.GetMultiplePagesLRO(WaitUntil.Completed, null, null, null);
            Pageable<BinaryData> responseData = operation.Value;
            foreach (BinaryData item in operation.Value)
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetMultiplePagesLRO_ShortVersion_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            Operation<AsyncPageable<BinaryData>> operation = await client.GetMultiplePagesLROAsync(WaitUntil.Completed, null, null, null);
            AsyncPageable<BinaryData> responseData = operation.Value;
            await foreach (BinaryData item in operation.Value)
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_GetMultiplePagesLRO_AllParameters()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            Operation<Pageable<BinaryData>> operation = client.GetMultiplePagesLRO(WaitUntil.Completed, 1234, 1234, null);
            Pageable<BinaryData> responseData = operation.Value;
            foreach (BinaryData item in operation.Value)
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_GetMultiplePagesLRO_AllParameters_Async()
        {
            AzureKeyCredential credential = new AzureKeyCredential("<key>");
            PagingClient client = new PagingClient(credential);

            Operation<AsyncPageable<BinaryData>> operation = await client.GetMultiplePagesLROAsync(WaitUntil.Completed, 1234, 1234, null);
            AsyncPageable<BinaryData> responseData = operation.Value;
            await foreach (BinaryData item in operation.Value)
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("properties").GetProperty("id").ToString());
                Console.WriteLine(result.GetProperty("properties").GetProperty("name").ToString());
            }
        }
    }
}
