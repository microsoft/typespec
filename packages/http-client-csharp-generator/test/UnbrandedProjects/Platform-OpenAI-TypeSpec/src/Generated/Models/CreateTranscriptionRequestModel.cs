// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace OpenAI.Models
{
    /// <summary> Enum for model in CreateTranscriptionRequest. </summary>
    public readonly partial struct CreateTranscriptionRequestModel : IEquatable<CreateTranscriptionRequestModel>
    {
        private readonly string _value;

        /// <summary> Initializes a new instance of <see cref="CreateTranscriptionRequestModel"/>. </summary>
        /// <exception cref="ArgumentNullException"> <paramref name="value"/> is null. </exception>
        public CreateTranscriptionRequestModel(string value)
        {
            _value = value ?? throw new ArgumentNullException(nameof(value));
        }

        private const string Whisper1Value = "whisper-1";

        /// <summary> whisper-1. </summary>
        public static CreateTranscriptionRequestModel Whisper1 { get; } = new CreateTranscriptionRequestModel(Whisper1Value);
        /// <summary> Determines if two <see cref="CreateTranscriptionRequestModel"/> values are the same. </summary>
        public static bool operator ==(CreateTranscriptionRequestModel left, CreateTranscriptionRequestModel right) => left.Equals(right);
        /// <summary> Determines if two <see cref="CreateTranscriptionRequestModel"/> values are not the same. </summary>
        public static bool operator !=(CreateTranscriptionRequestModel left, CreateTranscriptionRequestModel right) => !left.Equals(right);
        /// <summary> Converts a string to a <see cref="CreateTranscriptionRequestModel"/>. </summary>
        public static implicit operator CreateTranscriptionRequestModel(string value) => new CreateTranscriptionRequestModel(value);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => obj is CreateTranscriptionRequestModel other && Equals(other);
        /// <inheritdoc />
        public bool Equals(CreateTranscriptionRequestModel other) => string.Equals(_value, other._value, StringComparison.InvariantCultureIgnoreCase);

        /// <inheritdoc />
        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => _value?.GetHashCode() ?? 0;
        /// <inheritdoc />
        public override string ToString() => _value;
    }
}
