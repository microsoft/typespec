!CodeModel 
info: !Info 
  description: Resource Flattening for AutoRest
  title: AutoRest Resource Flattening Test Service
schemas: !Schemas 
  numbers:
    - !NumberSchema &ref_30
      type: integer
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      precision: 32
      language: !Languages 
        default:
          name: ErrorStatus
          description: ''
      protocol: !Protocols {}
  strings:
    - !StringSchema &ref_0
      type: string
      language: !Languages 
        default:
          name: String
          description: simple string
      protocol: !Protocols {}
    - !StringSchema &ref_3
      type: string
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      language: !Languages 
        default:
          name: ResourceId
          description: Resource Id
      protocol: !Protocols {}
    - !StringSchema &ref_4
      type: string
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      language: !Languages 
        default:
          name: ResourceType
          description: Resource Type
      protocol: !Protocols {}
    - !StringSchema &ref_1
      type: string
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      language: !Languages 
        default:
          name: String
          description: ''
      protocol: !Protocols {}
    - !StringSchema &ref_6
      type: string
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      language: !Languages 
        default:
          name: ResourceLocation
          description: Resource Location
      protocol: !Protocols {}
    - !StringSchema &ref_7
      type: string
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      language: !Languages 
        default:
          name: ResourceName
          description: Resource Name
      protocol: !Protocols {}
    - !StringSchema &ref_31
      type: string
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      language: !Languages 
        default:
          name: ErrorMessage
          description: ''
      protocol: !Protocols {}
    - !StringSchema &ref_9
      type: string
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      language: !Languages 
        default:
          name: FlattenedProductPropertiesPName
          description: ''
      protocol: !Protocols {}
    - !StringSchema &ref_10
      type: string
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      language: !Languages 
        default:
          name: FlattenedProductPropertiesType
          description: ''
      protocol: !Protocols {}
    - !StringSchema &ref_12
      type: string
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      language: !Languages 
        default:
          name: FlattenedProductPropertiesProvisioningState
          description: ''
      protocol: !Protocols {}
    - !StringSchema &ref_33
      type: string
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      language: !Languages 
        default:
          name: WrappedProductValue
          description: the product value
      protocol: !Protocols {}
    - !StringSchema &ref_18
      type: string
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      language: !Languages 
        default:
          name: SimpleProductPropertiesMaxProductDisplayName
          description: Display name of product.
      protocol: !Protocols {}
    - !StringSchema &ref_21
      type: string
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      language: !Languages 
        default:
          name: ProductUrlOdataValue
          description: URL value.
      protocol: !Protocols {}
    - !StringSchema &ref_20
      type: string
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      language: !Languages 
        default:
          name: GenericUrlGenericValue
          description: Generic URL value.
      protocol: !Protocols {}
    - !StringSchema &ref_15
      type: string
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      language: !Languages 
        default:
          name: BaseProductId
          description: Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles.
      protocol: !Protocols {}
    - !StringSchema &ref_16
      type: string
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      language: !Languages 
        default:
          name: BaseProductDescription
          description: Description of product.
      protocol: !Protocols {}
  choices:
    - !ChoiceSchema &ref_11
      choices:
        - !ChoiceValue 
          value: Succeeded
          language:
            default:
              name: Succeeded
              description: ''
        - !ChoiceValue 
          value: Failed
          language:
            default:
              name: Failed
              description: ''
        - !ChoiceValue 
          value: canceled
          language:
            default:
              name: Canceled
              description: ''
        - !ChoiceValue 
          value: Accepted
          language:
            default:
              name: Accepted
              description: ''
        - !ChoiceValue 
          value: Creating
          language:
            default:
              name: Creating
              description: ''
        - !ChoiceValue 
          value: Created
          language:
            default:
              name: Created
              description: ''
        - !ChoiceValue 
          value: Updating
          language:
            default:
              name: Updating
              description: ''
        - !ChoiceValue 
          value: Updated
          language:
            default:
              name: Updated
              description: ''
        - !ChoiceValue 
          value: Deleting
          language:
            default:
              name: Deleting
              description: ''
        - !ChoiceValue 
          value: Deleted
          language:
            default:
              name: Deleted
              description: ''
        - !ChoiceValue 
          value: OK
          language:
            default:
              name: OK
              description: ''
      type: choice
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      choiceType: *ref_0
      language: !Languages 
        default:
          name: FlattenedProductPropertiesProvisioningStateValues
          description: ''
      protocol: !Protocols {}
  constants:
    - !ConstantSchema &ref_41
      type: constant
      value: !ConstantValue 
        value: application/json
      valueType: *ref_0
      language: !Languages 
        default:
          name: ApplicationJson
          description: Content Type 'application/json'
      protocol: !Protocols {}
    - !ConstantSchema &ref_43
      type: constant
      value: !ConstantValue 
        value: application/json
      valueType: *ref_0
      language: !Languages 
        default:
          name: Accept
          description: 'Accept: application/json'
      protocol: !Protocols {}
    - !ConstantSchema &ref_19
      type: constant
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      value: !ConstantValue 
        value: Large
      valueType: *ref_0
      language: !Languages 
        default:
          name: SimpleProductPropertiesMaxProductCapacity
          description: Capacity of product. For example, 4 people.
      protocol: !Protocols {}
  dictionaries:
    - !DictionarySchema &ref_5
      type: dictionary
      elementType: *ref_1
      language: !Languages 
        default:
          name: ResourceTags
          description: Dictionary of <string>
      protocol: !Protocols {}
    - !DictionarySchema &ref_51
      type: dictionary
      elementType: !ObjectSchema &ref_2
        type: object
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        externalDocs: !ExternalDocumentation 
          url: http://tempuri.org
        parents: !Relations 
          all:
            - !ObjectSchema &ref_8
              type: object
              apiVersions:
                - !ApiVersion 
                  version: 1.0.0
              children: !Relations 
                all:
                  - *ref_2
                immediate:
                  - *ref_2
              properties:
                - !Property 
                  schema: *ref_3
                  readOnly: true
                  serializedName: id
                  language: !Languages 
                    default:
                      name: id
                      description: Resource Id
                  protocol: !Protocols {}
                - !Property 
                  schema: *ref_4
                  readOnly: true
                  serializedName: type
                  language: !Languages 
                    default:
                      name: type
                      description: Resource Type
                  protocol: !Protocols {}
                - !Property 
                  schema: *ref_5
                  serializedName: tags
                  language: !Languages 
                    default:
                      name: tags
                      description: Dictionary of <string>
                  protocol: !Protocols {}
                - !Property 
                  schema: *ref_6
                  serializedName: location
                  language: !Languages 
                    default:
                      name: location
                      description: Resource Location
                  protocol: !Protocols {}
                - !Property 
                  schema: *ref_7
                  readOnly: true
                  serializedName: name
                  language: !Languages 
                    default:
                      name: name
                      description: Resource Name
                  protocol: !Protocols {}
              serializationFormats:
                - json
              usage:
                - input
                - output
              language: !Languages 
                default:
                  name: Resource
                  description: ''
                  namespace: ''
              protocol: !Protocols {}
          immediate:
            - *ref_8
        properties:
          - !Property 
            schema: *ref_9
            flattenedNames:
              - properties
              - p.name
            serializedName: p.name
            language: !Languages 
              default:
                name: pName
                description: ''
            protocol: !Protocols {}
          - !Property 
            schema: *ref_10
            flattenedNames:
              - properties
              - type
            serializedName: type
            language: !Languages 
              default:
                name: typePropertiesType
                description: ''
            protocol: !Protocols {}
          - !Property 
            schema: *ref_11
            flattenedNames:
              - properties
              - provisioningStateValues
            readOnly: true
            serializedName: provisioningStateValues
            language: !Languages 
              default:
                name: provisioningStateValues
                description: ''
            protocol: !Protocols {}
          - !Property 
            schema: *ref_12
            flattenedNames:
              - properties
              - provisioningState
            serializedName: provisioningState
            language: !Languages 
              default:
                name: provisioningState
                description: ''
            protocol: !Protocols {}
        serializationFormats:
          - json
        usage:
          - output
          - input
        language: !Languages 
          default:
            name: FlattenedProduct
            description: Flattened product.
            namespace: ''
        protocol: !Protocols {}
      language: !Languages 
        default:
          name: DictionaryOfFlattenedProduct
          description: Dictionary of <FlattenedProduct>
      protocol: !Protocols {}
    - !DictionarySchema &ref_54
      type: dictionary
      elementType: *ref_2
      language: !Languages 
        default:
          name: DictionaryOfFlattenedProduct
          description: Dictionary of <FlattenedProduct>
      protocol: !Protocols {}
    - !DictionarySchema &ref_34
      type: dictionary
      elementType: *ref_2
      language: !Languages 
        default:
          name: ResourceCollectionDictionaryofresources
          description: Dictionary of <FlattenedProduct>
      protocol: !Protocols {}
  groups:
    - !GroupSchema &ref_13
      type: group
      properties:
        - !GroupProperty 
          schema: *ref_1
          originalParameter:
            - !Parameter &ref_67
              schema: *ref_1
              groupedBy: !Parameter &ref_22
                schema: *ref_13
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: flattenParameterGroup
                    description: Parameter group
                protocol: !Protocols {}
              implementation: Method
              required: true
              extensions: {}
              language: !Languages 
                default:
                  name: name
                  description: Product name with value 'groupproduct'
                  serializedName: name
              protocol: !Protocols 
                http: !HttpParameter 
                  in: path
          required: true
          serializedName: name
          language: !Languages 
            default:
              name: name
              description: Product name with value 'groupproduct'
          protocol: !Protocols {}
        - !GroupProperty 
          schema: !ObjectSchema &ref_14
            type: object
            apiVersions:
              - !ApiVersion 
                version: 1.0.0
            parents: !Relations 
              all:
                - !ObjectSchema &ref_17
                  type: object
                  apiVersions:
                    - !ApiVersion 
                      version: 1.0.0
                  children: !Relations 
                    all:
                      - *ref_14
                    immediate:
                      - *ref_14
                  properties:
                    - !Property &ref_24
                      schema: *ref_15
                      required: true
                      serializedName: base_product_id
                      language: !Languages 
                        default:
                          name: productId
                          description: Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles.
                      protocol: !Protocols {}
                    - !Property &ref_25
                      schema: *ref_16
                      required: false
                      serializedName: base_product_description
                      language: !Languages 
                        default:
                          name: description
                          description: Description of product.
                      protocol: !Protocols {}
                  serializationFormats:
                    - json
                  usage:
                    - input
                    - output
                  language: !Languages 
                    default:
                      name: BaseProduct
                      description: The product documentation.
                      namespace: ''
                  protocol: !Protocols {}
              immediate:
                - *ref_17
            properties:
              - !Property &ref_26
                schema: *ref_18
                flattenedNames:
                  - details
                  - max_product_display_name
                serializedName: max_product_display_name
                language: !Languages 
                  default:
                    name: maxProductDisplayName
                    description: Display name of product.
                protocol: !Protocols {}
              - !Property &ref_27
                schema: *ref_19
                flattenedNames:
                  - details
                  - max_product_capacity
                serializedName: max_product_capacity
                language: !Languages 
                  default:
                    name: capacity
                    description: Capacity of product. For example, 4 people.
                protocol: !Protocols {}
              - !Property &ref_28
                schema: *ref_20
                flattenedNames:
                  - details
                  - max_product_image
                  - generic_value
                serializedName: generic_value
                language: !Languages 
                  default:
                    name: genericValue
                    description: Generic URL value.
                protocol: !Protocols {}
              - !Property &ref_29
                schema: *ref_21
                flattenedNames:
                  - details
                  - max_product_image
                  - '@odata.value'
                serializedName: '@odata.value'
                language: !Languages 
                  default:
                    name: odataValue
                    description: URL value.
                protocol: !Protocols {}
            serializationFormats:
              - json
            usage:
              - input
              - output
            language: !Languages 
              default:
                name: SimpleProduct
                description: The product documentation.
                namespace: ''
            protocol: !Protocols {}
          originalParameter:
            - !Parameter &ref_23
              schema: *ref_14
              flattened: true
              groupedBy: *ref_22
              implementation: Method
              required: false
              extensions:
                x-ms-client-flatten: true
              language: !Languages 
                default:
                  name: simpleBodyProduct
                  description: Simple body product to put
              protocol: !Protocols 
                http: !HttpParameter 
                  in: body
                  style: json
          required: false
          serializedName: SimpleBodyProduct
          language: !Languages 
            default:
              name: simpleBodyProduct
              description: Simple body product to put
          protocol: !Protocols {}
        - !GroupProperty 
          schema: *ref_15
          originalParameter:
            - !VirtualParameter &ref_68
              schema: *ref_15
              groupedBy: *ref_22
              implementation: Method
              originalParameter: *ref_23
              pathToProperty: []
              required: true
              targetProperty: *ref_24
              extensions: {}
              language: !Languages 
                default:
                  name: productId
                  description: Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles.
              protocol: !Protocols {}
          required: true
          serializedName: productId
          language: !Languages 
            default:
              name: productId
              description: Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles.
          protocol: !Protocols {}
        - !GroupProperty 
          schema: *ref_16
          originalParameter:
            - !VirtualParameter &ref_69
              schema: *ref_16
              groupedBy: *ref_22
              implementation: Method
              originalParameter: *ref_23
              pathToProperty: []
              required: false
              targetProperty: *ref_25
              extensions: {}
              language: !Languages 
                default:
                  name: description
                  description: Description of product.
              protocol: !Protocols {}
          required: false
          serializedName: description
          language: !Languages 
            default:
              name: description
              description: Description of product.
          protocol: !Protocols {}
        - !GroupProperty 
          schema: *ref_18
          originalParameter:
            - !VirtualParameter &ref_70
              schema: *ref_18
              groupedBy: *ref_22
              implementation: Method
              originalParameter: *ref_23
              pathToProperty: []
              targetProperty: *ref_26
              extensions: {}
              language: !Languages 
                default:
                  name: maxProductDisplayName
                  description: Display name of product.
              protocol: !Protocols {}
          serializedName: max_product_display_name
          language: !Languages 
            default:
              name: maxProductDisplayName
              description: Display name of product.
          protocol: !Protocols {}
        - !GroupProperty 
          schema: *ref_19
          originalParameter:
            - !VirtualParameter &ref_71
              schema: *ref_19
              groupedBy: *ref_22
              implementation: Method
              originalParameter: *ref_23
              pathToProperty: []
              targetProperty: *ref_27
              extensions: {}
              language: !Languages 
                default:
                  name: capacity
                  description: Capacity of product. For example, 4 people.
              protocol: !Protocols {}
          serializedName: capacity
          language: !Languages 
            default:
              name: capacity
              description: Capacity of product. For example, 4 people.
          protocol: !Protocols {}
        - !GroupProperty 
          schema: *ref_20
          originalParameter:
            - !VirtualParameter &ref_72
              schema: *ref_20
              groupedBy: *ref_22
              implementation: Method
              originalParameter: *ref_23
              pathToProperty: []
              targetProperty: *ref_28
              extensions: {}
              language: !Languages 
                default:
                  name: genericValue
                  description: Generic URL value.
              protocol: !Protocols {}
          serializedName: generic_value
          language: !Languages 
            default:
              name: genericValue
              description: Generic URL value.
          protocol: !Protocols {}
        - !GroupProperty 
          schema: *ref_21
          originalParameter:
            - !VirtualParameter &ref_73
              schema: *ref_21
              groupedBy: *ref_22
              implementation: Method
              originalParameter: *ref_23
              pathToProperty: []
              targetProperty: *ref_29
              extensions: {}
              language: !Languages 
                default:
                  name: odataValue
                  description: URL value.
              protocol: !Protocols {}
          serializedName: '@odata.value'
          language: !Languages 
            default:
              name: odataValue
              description: URL value.
          protocol: !Protocols {}
      usage:
        - input
      language: !Languages 
        default:
          name: FlattenParameterGroup
          description: Parameter group
      protocol: !Protocols {}
  objects:
    - *ref_8
    - !ObjectSchema &ref_32
      type: object
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      properties:
        - !Property 
          schema: *ref_30
          serializedName: status
          language: !Languages 
            default:
              name: status
              description: ''
          protocol: !Protocols {}
        - !Property 
          schema: *ref_31
          serializedName: message
          language: !Languages 
            default:
              name: message
              description: ''
          protocol: !Protocols {}
        - !Property 
          schema: *ref_32
          serializedName: parentError
          language: !Languages 
            default:
              name: parentError
              description: ''
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - exception
      language: !Languages 
        default:
          name: Error
          description: ''
          namespace: ''
      protocol: !Protocols {}
    - *ref_2
    - !ObjectSchema &ref_37
      type: object
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      properties:
        - !Property 
          schema: *ref_33
          serializedName: value
          language: !Languages 
            default:
              name: value
              description: the product value
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - input
        - output
      extensions:
        x-ms-flattened: true
      language: !Languages 
        default:
          name: WrappedProduct
          description: The wrapped produc.
          namespace: ''
      protocol: !Protocols {}
    - !ObjectSchema &ref_38
      type: object
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      properties:
        - !Property 
          schema: *ref_33
          flattenedNames:
            - property
            - value
          serializedName: value
          language: !Languages 
            default:
              name: value
              description: the product value
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - output
      language: !Languages 
        default:
          name: ProductWrapper
          description: The wrapped produc.
          namespace: ''
      protocol: !Protocols {}
    - !ObjectSchema &ref_55
      type: object
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      properties:
        - !Property 
          schema: *ref_2
          serializedName: productresource
          language: !Languages 
            default:
              name: productresource
              description: Flattened product.
          protocol: !Protocols {}
        - !Property 
          schema: !ArraySchema &ref_39
            type: array
            apiVersions:
              - !ApiVersion 
                version: 1.0.0
            elementType: *ref_2
            language: !Languages 
              default:
                name: ResourceCollectionArrayofresources
                description: Array of FlattenedProduct
            protocol: !Protocols {}
          serializedName: arrayofresources
          language: !Languages 
            default:
              name: arrayofresources
              description: ''
          protocol: !Protocols {}
        - !Property 
          schema: *ref_34
          serializedName: dictionaryofresources
          language: !Languages 
            default:
              name: dictionaryofresources
              description: Dictionary of <FlattenedProduct>
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - input
        - output
      language: !Languages 
        default:
          name: ResourceCollection
          description: ''
          namespace: ''
      protocol: !Protocols {}
    - *ref_14
    - !ObjectSchema &ref_35
      type: object
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      parents: !Relations 
        all:
          - !ObjectSchema &ref_36
            type: object
            apiVersions:
              - !ApiVersion 
                version: 1.0.0
            children: !Relations 
              all:
                - *ref_35
              immediate:
                - *ref_35
            properties:
              - !Property 
                schema: *ref_20
                serializedName: generic_value
                language: !Languages 
                  default:
                    name: genericValue
                    description: Generic URL value.
                protocol: !Protocols {}
            serializationFormats:
              - json
            usage:
              - input
              - output
            language: !Languages 
              default:
                name: GenericUrl
                description: The Generic URL.
                namespace: ''
            protocol: !Protocols {}
        immediate:
          - *ref_36
      properties:
        - !Property 
          schema: *ref_21
          serializedName: '@odata.value'
          language: !Languages 
            default:
              name: odataValue
              description: URL value.
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - input
        - output
      extensions:
        x-ms-flattened: true
      language: !Languages 
        default:
          name: ProductUrl
          description: The product URL.
          namespace: ''
      protocol: !Protocols {}
    - *ref_36
    - *ref_17
  arrays:
    - !ArraySchema &ref_42
      type: array
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      elementType: *ref_8
      language: !Languages 
        default:
          name: ArrayOfResource
          description: Array of Resource
      protocol: !Protocols {}
    - !ArraySchema &ref_46
      type: array
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      elementType: *ref_2
      language: !Languages 
        default:
          name: ArrayOfFlattenedProduct
          description: Array of FlattenedProduct
      protocol: !Protocols {}
    - !ArraySchema &ref_47
      type: array
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      elementType: *ref_37
      language: !Languages 
        default:
          name: ArrayOfWrappedProduct
          description: Array of WrappedProduct
      protocol: !Protocols {}
    - !ArraySchema &ref_50
      type: array
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      elementType: *ref_38
      language: !Languages 
        default:
          name: ArrayOfProductWrapper
          description: Array of ProductWrapper
      protocol: !Protocols {}
    - *ref_39
globalParameters:
  - !Parameter &ref_40
    schema: *ref_0
    clientDefaultValue: http://localhost:3000
    implementation: Client
    origin: modelerfour:synthesized/host
    required: true
    extensions:
      x-ms-skip-url-encoding: true
    language: !Languages 
      default:
        name: $host
        description: server parameter
        serializedName: $host
    protocol: !Protocols 
      http: !HttpParameter 
        in: uri
operationGroups:
  - !OperationGroup 
    $key: ''
    operations:
      - !Operation 
        operationId: putArray
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        externalDocs: !ExternalDocumentation 
          url: http://tempuri.org
        parameters:
          - *ref_40
        requestMediaTypes:
          application/json: !Request &ref_45
            parameters:
              - !Parameter 
                schema: *ref_41
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_44
                schema: *ref_42
                implementation: Method
                required: false
                language: !Languages 
                  default:
                    name: resourceArray
                    description: External Resource as an Array to put
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_43
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_44
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /model-flatten/array
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        requests:
          - *ref_45
        signatureParameters: []
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Successful Response
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_32
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: PutArray
            description: Put External Resource as an Array
        protocol: !Protocols {}
      - !Operation 
        operationId: getArray
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        externalDocs: !ExternalDocumentation 
          url: http://tempuri.org
        parameters:
          - *ref_40
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_43
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /model-flatten/array
                method: get
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !SchemaResponse 
            schema: *ref_46
            language: !Languages 
              default:
                name: ''
                description: External Resource as an Array from get
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_32
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: GetArray
            description: Get External Resource as an Array
        protocol: !Protocols {}
      - !Operation 
        operationId: putWrappedArray
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        externalDocs: !ExternalDocumentation 
          url: http://tempuri.org
        parameters:
          - *ref_40
        requestMediaTypes:
          application/json: !Request &ref_49
            parameters:
              - !Parameter 
                schema: *ref_41
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_48
                schema: *ref_47
                implementation: Method
                required: false
                language: !Languages 
                  default:
                    name: resourceArray
                    description: External Resource as an Array to put
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_43
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_48
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /model-flatten/wrappedarray
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        requests:
          - *ref_49
        signatureParameters: []
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Successful Response
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_32
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: PutWrappedArray
            description: No need to have a route in Express server for this operation. Used to verify the type flattened is not removed if it's referenced in an array
        protocol: !Protocols {}
      - !Operation 
        operationId: getWrappedArray
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        externalDocs: !ExternalDocumentation 
          url: http://tempuri.org
        parameters:
          - *ref_40
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_43
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /model-flatten/wrappedarray
                method: get
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !SchemaResponse 
            schema: *ref_50
            language: !Languages 
              default:
                name: ''
                description: External Resource as an Array from get
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_32
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: GetWrappedArray
            description: No need to have a route in Express server for this operation. Used to verify the type flattened is not removed if it's referenced in an array
        protocol: !Protocols {}
      - !Operation 
        operationId: putDictionary
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        externalDocs: !ExternalDocumentation 
          url: http://tempuri.org
        parameters:
          - *ref_40
        requestMediaTypes:
          application/json: !Request &ref_53
            parameters:
              - !Parameter 
                schema: *ref_41
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_52
                schema: *ref_51
                implementation: Method
                required: false
                language: !Languages 
                  default:
                    name: resourceDictionary
                    description: External Resource as a Dictionary to put
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_43
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_52
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /model-flatten/dictionary
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        requests:
          - *ref_53
        signatureParameters: []
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Successful Response
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_32
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: PutDictionary
            description: Put External Resource as a Dictionary
        protocol: !Protocols {}
      - !Operation 
        operationId: getDictionary
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        externalDocs: !ExternalDocumentation 
          url: http://tempuri.org
        parameters:
          - *ref_40
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_43
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /model-flatten/dictionary
                method: get
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !SchemaResponse 
            schema: *ref_54
            language: !Languages 
              default:
                name: ''
                description: External Resource as a Dictionary from get
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_32
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: GetDictionary
            description: Get External Resource as a Dictionary
        protocol: !Protocols {}
      - !Operation 
        operationId: putResourceCollection
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        externalDocs: !ExternalDocumentation 
          url: http://tempuri.org
        parameters:
          - *ref_40
        requestMediaTypes:
          application/json: !Request &ref_57
            parameters:
              - !Parameter 
                schema: *ref_41
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_56
                schema: *ref_55
                implementation: Method
                required: false
                language: !Languages 
                  default:
                    name: resourceComplexObject
                    description: External Resource as a ResourceCollection to put
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_43
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_56
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /model-flatten/resourcecollection
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        requests:
          - *ref_57
        signatureParameters: []
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Successful Response
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_32
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: PutResourceCollection
            description: Put External Resource as a ResourceCollection
        protocol: !Protocols {}
      - !Operation 
        operationId: getResourceCollection
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        externalDocs: !ExternalDocumentation 
          url: http://tempuri.org
        parameters:
          - *ref_40
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_43
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /model-flatten/resourcecollection
                method: get
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !SchemaResponse 
            schema: *ref_55
            language: !Languages 
              default:
                name: ''
                description: External Resource as a ResourceCollection from get
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_32
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: GetResourceCollection
            description: Get External Resource as a ResourceCollection
        protocol: !Protocols {}
      - !Operation 
        operationId: putSimpleProduct
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        externalDocs: !ExternalDocumentation 
          url: http://tempuri.org
        parameters:
          - *ref_40
        requestMediaTypes:
          application/json: !Request &ref_59
            parameters:
              - !Parameter 
                schema: *ref_41
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_58
                schema: *ref_14
                implementation: Method
                required: false
                language: !Languages 
                  default:
                    name: simpleBodyProduct
                    description: Simple body product to put
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_43
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_58
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /model-flatten/customFlattening
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        requests:
          - *ref_59
        signatureParameters: []
        responses:
          - !SchemaResponse 
            schema: *ref_14
            language: !Languages 
              default:
                name: ''
                description: Successful Response
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_32
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: PutSimpleProduct
            description: Put Simple Product with client flattening true on the model
        protocol: !Protocols {}
      - !Operation 
        operationId: postFlattenedSimpleProduct
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        externalDocs: !ExternalDocumentation 
          url: http://tempuri.org
        parameters:
          - *ref_40
        requestMediaTypes:
          application/json: !Request &ref_66
            parameters:
              - !Parameter 
                schema: *ref_41
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_60
                schema: *ref_14
                flattened: true
                implementation: Method
                required: false
                extensions:
                  x-ms-client-flatten: true
                language: !Languages 
                  default:
                    name: simpleBodyProduct
                    description: Simple body product to post
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_43
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !VirtualParameter &ref_61
                schema: *ref_15
                implementation: Method
                originalParameter: *ref_60
                pathToProperty: []
                required: true
                targetProperty: *ref_24
                language: !Languages 
                  default:
                    name: productId
                    description: Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles.
                protocol: !Protocols {}
              - !VirtualParameter &ref_62
                schema: *ref_16
                implementation: Method
                originalParameter: *ref_60
                pathToProperty: []
                required: false
                targetProperty: *ref_25
                language: !Languages 
                  default:
                    name: description
                    description: Description of product.
                protocol: !Protocols {}
              - !VirtualParameter &ref_63
                schema: *ref_18
                implementation: Method
                originalParameter: *ref_60
                pathToProperty: []
                targetProperty: *ref_26
                language: !Languages 
                  default:
                    name: maxProductDisplayName
                    description: Display name of product.
                protocol: !Protocols {}
              - !VirtualParameter 
                schema: *ref_19
                implementation: Method
                originalParameter: *ref_60
                pathToProperty: []
                targetProperty: *ref_27
                language: !Languages 
                  default:
                    name: capacity
                    description: Capacity of product. For example, 4 people.
                protocol: !Protocols {}
              - !VirtualParameter &ref_64
                schema: *ref_20
                implementation: Method
                originalParameter: *ref_60
                pathToProperty: []
                targetProperty: *ref_28
                language: !Languages 
                  default:
                    name: genericValue
                    description: Generic URL value.
                protocol: !Protocols {}
              - !VirtualParameter &ref_65
                schema: *ref_21
                implementation: Method
                originalParameter: *ref_60
                pathToProperty: []
                targetProperty: *ref_29
                language: !Languages 
                  default:
                    name: odataValue
                    description: URL value.
                protocol: !Protocols {}
            signatureParameters:
              - *ref_61
              - *ref_62
              - *ref_63
              - *ref_64
              - *ref_65
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /model-flatten/customFlattening
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        requests:
          - *ref_66
        signatureParameters: []
        responses:
          - !SchemaResponse 
            schema: *ref_14
            language: !Languages 
              default:
                name: ''
                description: Successful Response
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_32
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: PostFlattenedSimpleProduct
            description: Put Flattened Simple Product with client flattening true on the parameter
        protocol: !Protocols {}
      - !Operation 
        operationId: putSimpleProductWithGrouping
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        externalDocs: !ExternalDocumentation 
          url: http://tempuri.org
        parameters:
          - *ref_40
          - *ref_67
        requestMediaTypes:
          application/json: !Request &ref_74
            parameters:
              - !Parameter 
                schema: *ref_41
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - *ref_23
              - !Parameter 
                schema: *ref_43
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - *ref_68
              - *ref_69
              - *ref_70
              - *ref_71
              - *ref_72
              - *ref_73
              - *ref_22
            signatureParameters:
              - *ref_22
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /model-flatten/customFlattening/parametergrouping/{name}/
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        requests:
          - *ref_74
        signatureParameters: []
        responses:
          - !SchemaResponse 
            schema: *ref_14
            language: !Languages 
              default:
                name: ''
                description: Successful Response
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_32
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: PutSimpleProductWithGrouping
            description: Put Simple Product with client flattening true on the model
        protocol: !Protocols {}
    language: !Languages 
      default:
        name: ''
        description: ''
    protocol: !Protocols {}
security: !Security 
  authenticationRequired: false
  schemes: []
language: !Languages 
  default:
    name: AutoRestResourceFlatteningTestService
    description: ''
protocol: !Protocols 
  http: !HttpModel {}
