!CodeModel 
info: !Info 
  description: Test Infrastructure for AutoRest
  title: AutoRest Required Optional Test Service
schemas: !Schemas 
  numbers:
    - !NumberSchema &ref_1
      type: integer
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      precision: 32
      language: !Languages 
        default:
          name: ErrorStatus
          description: ''
      protocol: !Protocols {}
    - !NumberSchema &ref_17
      type: integer
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      precision: 32
      language: !Languages 
        default:
          name: Integer
          description: ''
      protocol: !Protocols {}
    - !NumberSchema &ref_3
      type: integer
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      precision: 32
      language: !Languages 
        default:
          name: IntWrapperValue
          description: ''
      protocol: !Protocols {}
    - !NumberSchema &ref_4
      type: integer
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      precision: 32
      language: !Languages 
        default:
          name: IntOptionalWrapperValue
          description: ''
      protocol: !Protocols {}
    - !NumberSchema &ref_7
      type: integer
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      precision: 32
      language: !Languages 
        default:
          name: ProductId
          description: ''
      protocol: !Protocols {}
  strings:
    - !StringSchema &ref_0
      type: string
      language: !Languages 
        default:
          name: String
          description: simple string
      protocol: !Protocols {}
    - !StringSchema &ref_13
      type: string
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      language: !Languages 
        default:
          name: String
          description: ''
      protocol: !Protocols {}
    - !StringSchema &ref_2
      type: string
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      language: !Languages 
        default:
          name: ErrorMessage
          description: ''
      protocol: !Protocols {}
    - !StringSchema &ref_5
      type: string
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      language: !Languages 
        default:
          name: StringWrapperValue
          description: ''
      protocol: !Protocols {}
    - !StringSchema &ref_6
      type: string
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      language: !Languages 
        default:
          name: StringOptionalWrapperValue
          description: ''
      protocol: !Protocols {}
    - !StringSchema &ref_8
      type: string
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      language: !Languages 
        default:
          name: ProductName
          description: ''
      protocol: !Protocols {}
    - !StringSchema &ref_12
      type: string
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      language: !Languages 
        default:
          name: PostContentSchemaItem
          description: ''
      protocol: !Protocols {}
    - !StringSchema &ref_10
      type: string
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      language: !Languages 
        default:
          name: ArrayWrapperValueItem
          description: ''
      protocol: !Protocols {}
    - !StringSchema &ref_11
      type: string
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      language: !Languages 
        default:
          name: ArrayOptionalWrapperValueItem
          description: ''
      protocol: !Protocols {}
    - !StringSchema &ref_16
      type: string
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      language: !Languages 
        default:
          name: Post0ItemsItem
          description: ''
      protocol: !Protocols {}
  constants:
    - !ConstantSchema &ref_19
      type: constant
      value: !ConstantValue 
        value: application/json
      valueType: *ref_0
      language: !Languages 
        default:
          name: Accept
          description: 'Accept: application/json'
      protocol: !Protocols {}
    - !ConstantSchema &ref_24
      type: constant
      value: !ConstantValue 
        value: application/json
      valueType: *ref_0
      language: !Languages 
        default:
          name: ApplicationJson
          description: Content Type 'application/json'
      protocol: !Protocols {}
    - !ConstantSchema &ref_27
      type: constant
      value: !ConstantValue 
        value: application/octet-stream
      valueType: *ref_0
      language: !Languages 
        default:
          name: ApplicationOctetStream
          description: Content Type 'application/octet-stream'
      protocol: !Protocols {}
  binaries:
    - !BinarySchema &ref_28
      type: binary
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      language: !Languages 
        default:
          name: binary
          description: ''
      protocol: !Protocols {}
    - !BinarySchema &ref_34
      type: binary
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      language: !Languages 
        default:
          name: binary
          description: ''
      protocol: !Protocols {}
    - !BinarySchema &ref_37
      type: binary
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      language: !Languages 
        default:
          name: binary
          description: ''
      protocol: !Protocols {}
  objects:
    - !ObjectSchema &ref_21
      type: object
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      properties:
        - !Property 
          schema: *ref_1
          serializedName: status
          language: !Languages 
            default:
              name: status
              description: ''
          protocol: !Protocols {}
        - !Property 
          schema: *ref_2
          serializedName: message
          language: !Languages 
            default:
              name: message
              description: ''
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - exception
      language: !Languages 
        default:
          name: Error
          description: ''
          namespace: ''
      protocol: !Protocols {}
    - !ObjectSchema &ref_44
      type: object
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      properties:
        - !Property 
          schema: *ref_3
          required: true
          serializedName: value
          language: !Languages 
            default:
              name: value
              description: ''
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - input
      language: !Languages 
        default:
          name: IntWrapper
          description: ''
          namespace: ''
      protocol: !Protocols {}
    - !ObjectSchema &ref_47
      type: object
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      properties:
        - !Property 
          schema: *ref_4
          serializedName: value
          language: !Languages 
            default:
              name: value
              description: ''
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - input
      language: !Languages 
        default:
          name: IntOptionalWrapper
          description: ''
          namespace: ''
      protocol: !Protocols {}
    - !ObjectSchema &ref_56
      type: object
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      properties:
        - !Property 
          schema: *ref_5
          required: true
          serializedName: value
          language: !Languages 
            default:
              name: value
              description: ''
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - input
      language: !Languages 
        default:
          name: StringWrapper
          description: ''
          namespace: ''
      protocol: !Protocols {}
    - !ObjectSchema &ref_59
      type: object
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      properties:
        - !Property 
          schema: *ref_6
          serializedName: value
          language: !Languages 
            default:
              name: value
              description: ''
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - input
      language: !Languages 
        default:
          name: StringOptionalWrapper
          description: ''
          namespace: ''
      protocol: !Protocols {}
    - !ObjectSchema &ref_9
      type: object
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      properties:
        - !Property 
          schema: *ref_7
          required: true
          serializedName: id
          language: !Languages 
            default:
              name: id
              description: ''
          protocol: !Protocols {}
        - !Property 
          schema: *ref_8
          required: false
          serializedName: name
          language: !Languages 
            default:
              name: name
              description: ''
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - input
      language: !Languages 
        default:
          name: Product
          description: ''
          namespace: ''
      protocol: !Protocols {}
    - !ObjectSchema &ref_68
      type: object
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      properties:
        - !Property 
          schema: *ref_9
          required: true
          serializedName: value
          language: !Languages 
            default:
              name: value
              description: ''
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - input
      language: !Languages 
        default:
          name: ClassWrapper
          description: ''
          namespace: ''
      protocol: !Protocols {}
    - !ObjectSchema &ref_71
      type: object
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      properties:
        - !Property 
          schema: *ref_9
          serializedName: value
          language: !Languages 
            default:
              name: value
              description: ''
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - input
      language: !Languages 
        default:
          name: ClassOptionalWrapper
          description: ''
          namespace: ''
      protocol: !Protocols {}
    - !ObjectSchema &ref_80
      type: object
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      properties:
        - !Property 
          schema: !ArraySchema &ref_14
            type: array
            apiVersions:
              - !ApiVersion 
                version: 1.0.0
            elementType: *ref_10
            language: !Languages 
              default:
                name: ArrayWrapperValue
                description: Array of ArrayWrapperValueItem
            protocol: !Protocols {}
          required: true
          serializedName: value
          language: !Languages 
            default:
              name: value
              description: ''
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - input
      language: !Languages 
        default:
          name: ArrayWrapper
          description: ''
          namespace: ''
      protocol: !Protocols {}
    - !ObjectSchema &ref_83
      type: object
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      properties:
        - !Property 
          schema: !ArraySchema &ref_15
            type: array
            apiVersions:
              - !ApiVersion 
                version: 1.0.0
            elementType: *ref_11
            language: !Languages 
              default:
                name: ArrayOptionalWrapperValue
                description: Array of ArrayOptionalWrapperValueItem
            protocol: !Protocols {}
          serializedName: value
          language: !Languages 
            default:
              name: value
              description: ''
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - input
      language: !Languages 
        default:
          name: ArrayOptionalWrapper
          description: ''
          namespace: ''
      protocol: !Protocols {}
  arrays:
    - !ArraySchema &ref_74
      type: array
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      elementType: *ref_12
      language: !Languages 
        default:
          name: ArrayOfPostContentSchemaItem
          description: Array of PostContentSchemaItem
      protocol: !Protocols {}
    - !ArraySchema &ref_77
      type: array
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      elementType: *ref_13
      language: !Languages 
        default:
          name: ArrayOfString
          description: Array of String
      protocol: !Protocols {}
    - *ref_14
    - *ref_15
    - !ArraySchema &ref_86
      type: array
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      elementType: *ref_16
      language: !Languages 
        default:
          name: ArrayOfPost0ItemsItem
          description: Array of Post0ItemsItem
      protocol: !Protocols {}
    - !ArraySchema &ref_88
      type: array
      apiVersions:
        - !ApiVersion 
          version: 1.0.0
      elementType: *ref_13
      language: !Languages 
        default:
          name: ArrayOfString
          description: Array of String
      protocol: !Protocols {}
globalParameters:
  - !Parameter &ref_31
    schema: *ref_13
    implementation: Client
    required: true
    extensions:
      x-ms-priority: 0
    language: !Languages 
      default:
        name: RequiredGlobalPath
        description: number of items to skip
        serializedName: required-global-path
    protocol: !Protocols 
      http: !HttpParameter 
        in: path
  - !Parameter &ref_32
    schema: *ref_13
    implementation: Client
    required: true
    extensions:
      x-ms-priority: 1
    language: !Languages 
      default:
        name: RequiredGlobalQuery
        description: number of items to skip
        serializedName: required-global-query
    protocol: !Protocols 
      http: !HttpParameter 
        in: query
  - !Parameter &ref_33
    schema: *ref_17
    implementation: Client
    extensions:
      x-ms-priority: 2
    language: !Languages 
      default:
        name: OptionalGlobalQuery
        description: number of items to skip
        serializedName: optional-global-query
    protocol: !Protocols 
      http: !HttpParameter 
        in: query
  - !Parameter &ref_18
    schema: *ref_0
    clientDefaultValue: http://localhost:3000
    implementation: Client
    origin: modelerfour:synthesized/host
    required: true
    extensions:
      x-ms-skip-url-encoding: true
    language: !Languages 
      default:
        name: $host
        description: server parameter
        serializedName: $host
    protocol: !Protocols 
      http: !HttpParameter 
        in: uri
operationGroups:
  - !OperationGroup 
    $key: implicit
    operations:
      - !Operation 
        operationId: implicit_getRequiredPath
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        parameters:
          - *ref_18
          - !Parameter &ref_20
            schema: *ref_13
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: pathParameter
                description: ''
                serializedName: pathParameter
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_19
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /reqopt/implicit/required/path/{pathParameter}
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_20
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Will not happen, request not supposed to be done.
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_21
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: GetRequiredPath
            description: Test implicitly required path parameter
        protocol: !Protocols {}
      - !Operation 
        operationId: implicit_putOptionalQuery
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        parameters:
          - *ref_18
          - !Parameter &ref_22
            schema: *ref_13
            implementation: Method
            language: !Languages 
              default:
                name: queryParameter
                description: ''
                serializedName: queryParameter
            protocol: !Protocols 
              http: !HttpParameter 
                in: query
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_19
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /reqopt/implicit/optional/query
                method: put
                uri: '{$host}'
        signatureParameters:
          - *ref_22
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Empty Response
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_21
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: PutOptionalQuery
            description: Test implicitly optional query parameter
        protocol: !Protocols {}
      - !Operation 
        operationId: implicit_putOptionalHeader
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        parameters:
          - *ref_18
          - !Parameter &ref_23
            schema: *ref_13
            implementation: Method
            language: !Languages 
              default:
                name: queryParameter
                description: ''
                serializedName: queryParameter
            protocol: !Protocols 
              http: !HttpParameter 
                in: header
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_19
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /reqopt/implicit/optional/header
                method: put
                uri: '{$host}'
        signatureParameters:
          - *ref_23
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Empty Response
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_21
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: PutOptionalHeader
            description: Test implicitly optional header parameter
        protocol: !Protocols {}
      - !Operation 
        operationId: implicit_putOptionalBody
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        parameters:
          - *ref_18
        requestMediaTypes:
          application/json: !Request &ref_26
            parameters:
              - !Parameter 
                schema: *ref_24
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_25
                schema: *ref_13
                implementation: Method
                required: false
                language: !Languages 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_19
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_25
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /reqopt/implicit/optional/body
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        requests:
          - *ref_26
        signatureParameters: []
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Empty Response
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_21
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: PutOptionalBody
            description: Test implicitly optional body parameter
        protocol: !Protocols {}
      - !Operation 
        operationId: implicit_putOptionalBinaryBody
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        parameters:
          - *ref_18
        requestMediaTypes:
          application/octet-stream: !Request &ref_30
            parameters:
              - !Parameter 
                schema: *ref_27
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Upload file type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_29
                schema: *ref_28
                implementation: Method
                language: !Languages 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: binary
              - !Parameter 
                schema: *ref_19
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_29
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpBinaryRequest 
                path: /reqopt/implicit/optional/binary-body
                method: put
                binary: true
                knownMediaType: binary
                mediaTypes:
                  - application/octet-stream
                uri: '{$host}'
        requests:
          - *ref_30
        signatureParameters: []
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Empty Response
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_21
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: PutOptionalBinaryBody
            description: Test implicitly optional body parameter
        protocol: !Protocols {}
      - !Operation 
        operationId: implicit_getRequiredGlobalPath
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        parameters:
          - *ref_18
          - *ref_31
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_19
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /reqopt/global/required/path/{required-global-path}
                method: get
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Will not happen, request not supposed to be done.
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_21
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: GetRequiredGlobalPath
            description: Test implicitly required path parameter
        protocol: !Protocols {}
      - !Operation 
        operationId: implicit_getRequiredGlobalQuery
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        parameters:
          - *ref_18
          - *ref_32
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_19
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /reqopt/global/required/query
                method: get
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Will not happen, request not supposed to be done.
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_21
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: GetRequiredGlobalQuery
            description: Test implicitly required query parameter
        protocol: !Protocols {}
      - !Operation 
        operationId: implicit_getOptionalGlobalQuery
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        parameters:
          - *ref_18
          - *ref_33
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_19
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /reqopt/global/optional/query
                method: get
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Will not happen, request not supposed to be done.
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_21
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: GetOptionalGlobalQuery
            description: Test implicitly optional query parameter
        protocol: !Protocols {}
    language: !Languages 
      default:
        name: Implicit
        description: ''
    protocol: !Protocols {}
  - !OperationGroup 
    $key: explicit
    operations:
      - !Operation 
        operationId: explicit_putOptionalBinaryBody
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        parameters:
          - *ref_18
        requestMediaTypes:
          application/octet-stream: !Request &ref_36
            parameters:
              - !Parameter 
                schema: *ref_27
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Upload file type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_35
                schema: *ref_34
                implementation: Method
                required: false
                language: !Languages 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: binary
              - !Parameter 
                schema: *ref_19
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_35
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpBinaryRequest 
                path: /reqopt/explicit/optional/binary-body
                method: put
                binary: true
                knownMediaType: binary
                mediaTypes:
                  - application/octet-stream
                uri: '{$host}'
        requests:
          - *ref_36
        signatureParameters: []
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Empty Response
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_21
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: PutOptionalBinaryBody
            description: Test explicitly optional body parameter
        protocol: !Protocols {}
      - !Operation 
        operationId: explicit_putRequiredBinaryBody
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        parameters:
          - *ref_18
        requestMediaTypes:
          application/octet-stream: !Request &ref_39
            parameters:
              - !Parameter 
                schema: *ref_27
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Upload file type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_38
                schema: *ref_37
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: binary
              - !Parameter 
                schema: *ref_19
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_38
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpBinaryRequest 
                path: /reqopt/explicit/required/binary-body
                method: put
                binary: true
                knownMediaType: binary
                mediaTypes:
                  - application/octet-stream
                uri: '{$host}'
        requests:
          - *ref_39
        signatureParameters: []
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Empty Response
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_21
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: PutRequiredBinaryBody
            description: Test explicitly required body parameter
        protocol: !Protocols {}
      - !Operation 
        operationId: explicit_postRequiredIntegerParameter
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        parameters:
          - *ref_18
        requestMediaTypes:
          application/json: !Request &ref_41
            parameters:
              - !Parameter 
                schema: *ref_24
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_40
                schema: *ref_17
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_19
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_40
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /reqopt/requied/integer/parameter
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        requests:
          - *ref_41
        signatureParameters: []
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Will not happen, request not supposed to be done.
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_21
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: PostRequiredIntegerParameter
            description: Test explicitly required integer. Please put null and the client library should throw before the request is sent.
        protocol: !Protocols {}
      - !Operation 
        operationId: explicit_postOptionalIntegerParameter
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        parameters:
          - *ref_18
        requestMediaTypes:
          application/json: !Request &ref_43
            parameters:
              - !Parameter 
                schema: *ref_24
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_42
                schema: *ref_17
                implementation: Method
                required: false
                language: !Languages 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_19
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_42
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /reqopt/optional/integer/parameter
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        requests:
          - *ref_43
        signatureParameters: []
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Empty response
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_21
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: PostOptionalIntegerParameter
            description: Test explicitly optional integer. Please put null.
        protocol: !Protocols {}
      - !Operation 
        operationId: explicit_postRequiredIntegerProperty
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        parameters:
          - *ref_18
        requestMediaTypes:
          application/json: !Request &ref_46
            parameters:
              - !Parameter 
                schema: *ref_24
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_45
                schema: *ref_44
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_19
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_45
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /reqopt/requied/integer/property
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        requests:
          - *ref_46
        signatureParameters: []
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Will not happen, request not supposed to be done.
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_21
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: PostRequiredIntegerProperty
            description: Test explicitly required integer. Please put a valid int-wrapper with 'value' = null and the client library should throw before the request is sent.
        protocol: !Protocols {}
      - !Operation 
        operationId: explicit_postOptionalIntegerProperty
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        parameters:
          - *ref_18
        requestMediaTypes:
          application/json: !Request &ref_49
            parameters:
              - !Parameter 
                schema: *ref_24
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_48
                schema: *ref_47
                implementation: Method
                required: false
                language: !Languages 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_19
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_48
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /reqopt/optional/integer/property
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        requests:
          - *ref_49
        signatureParameters: []
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Empty response
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_21
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: PostOptionalIntegerProperty
            description: Test explicitly optional integer. Please put a valid int-wrapper with 'value' = null.
        protocol: !Protocols {}
      - !Operation 
        operationId: explicit_postRequiredIntegerHeader
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        parameters:
          - *ref_18
          - !Parameter &ref_50
            schema: *ref_17
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: headerParameter
                description: ''
                serializedName: headerParameter
            protocol: !Protocols 
              http: !HttpParameter 
                in: header
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_19
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /reqopt/requied/integer/header
                method: post
                uri: '{$host}'
        signatureParameters:
          - *ref_50
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Will not happen, request not supposed to be done.
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_21
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: PostRequiredIntegerHeader
            description: Test explicitly required integer. Please put a header 'headerParameter' => null and the client library should throw before the request is sent.
        protocol: !Protocols {}
      - !Operation 
        operationId: explicit_postOptionalIntegerHeader
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        parameters:
          - *ref_18
          - !Parameter &ref_51
            schema: *ref_17
            implementation: Method
            language: !Languages 
              default:
                name: headerParameter
                description: ''
                serializedName: headerParameter
            protocol: !Protocols 
              http: !HttpParameter 
                in: header
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_19
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /reqopt/optional/integer/header
                method: post
                uri: '{$host}'
        signatureParameters:
          - *ref_51
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Empty response
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_21
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: PostOptionalIntegerHeader
            description: Test explicitly optional integer. Please put a header 'headerParameter' => null.
        protocol: !Protocols {}
      - !Operation 
        operationId: explicit_postRequiredStringParameter
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        parameters:
          - *ref_18
        requestMediaTypes:
          application/json: !Request &ref_53
            parameters:
              - !Parameter 
                schema: *ref_24
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_52
                schema: *ref_13
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_19
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_52
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /reqopt/requied/string/parameter
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        requests:
          - *ref_53
        signatureParameters: []
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Will not happen, request not supposed to be done.
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_21
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: PostRequiredStringParameter
            description: Test explicitly required string. Please put null and the client library should throw before the request is sent.
        protocol: !Protocols {}
      - !Operation 
        operationId: explicit_postOptionalStringParameter
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        parameters:
          - *ref_18
        requestMediaTypes:
          application/json: !Request &ref_55
            parameters:
              - !Parameter 
                schema: *ref_24
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_54
                schema: *ref_13
                implementation: Method
                required: false
                language: !Languages 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_19
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_54
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /reqopt/optional/string/parameter
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        requests:
          - *ref_55
        signatureParameters: []
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Empty response
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_21
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: PostOptionalStringParameter
            description: Test explicitly optional string. Please put null.
        protocol: !Protocols {}
      - !Operation 
        operationId: explicit_postRequiredStringProperty
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        parameters:
          - *ref_18
        requestMediaTypes:
          application/json: !Request &ref_58
            parameters:
              - !Parameter 
                schema: *ref_24
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_57
                schema: *ref_56
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_19
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_57
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /reqopt/requied/string/property
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        requests:
          - *ref_58
        signatureParameters: []
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Will not happen, request not supposed to be done.
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_21
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: PostRequiredStringProperty
            description: Test explicitly required string. Please put a valid string-wrapper with 'value' = null and the client library should throw before the request is sent.
        protocol: !Protocols {}
      - !Operation 
        operationId: explicit_postOptionalStringProperty
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        parameters:
          - *ref_18
        requestMediaTypes:
          application/json: !Request &ref_61
            parameters:
              - !Parameter 
                schema: *ref_24
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_60
                schema: *ref_59
                implementation: Method
                required: false
                language: !Languages 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_19
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_60
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /reqopt/optional/string/property
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        requests:
          - *ref_61
        signatureParameters: []
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Empty response
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_21
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: PostOptionalStringProperty
            description: Test explicitly optional integer. Please put a valid string-wrapper with 'value' = null.
        protocol: !Protocols {}
      - !Operation 
        operationId: explicit_postRequiredStringHeader
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        parameters:
          - *ref_18
          - !Parameter &ref_62
            schema: *ref_13
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: headerParameter
                description: ''
                serializedName: headerParameter
            protocol: !Protocols 
              http: !HttpParameter 
                in: header
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_19
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /reqopt/requied/string/header
                method: post
                uri: '{$host}'
        signatureParameters:
          - *ref_62
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Will not happen, request not supposed to be done.
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_21
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: PostRequiredStringHeader
            description: Test explicitly required string. Please put a header 'headerParameter' => null and the client library should throw before the request is sent.
        protocol: !Protocols {}
      - !Operation 
        operationId: explicit_postOptionalStringHeader
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        parameters:
          - *ref_18
          - !Parameter &ref_63
            schema: *ref_13
            implementation: Method
            language: !Languages 
              default:
                name: bodyParameter
                description: ''
                serializedName: bodyParameter
            protocol: !Protocols 
              http: !HttpParameter 
                in: header
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_19
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /reqopt/optional/string/header
                method: post
                uri: '{$host}'
        signatureParameters:
          - *ref_63
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Empty response
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_21
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: PostOptionalStringHeader
            description: Test explicitly optional string. Please put a header 'headerParameter' => null.
        protocol: !Protocols {}
      - !Operation 
        operationId: explicit_postRequiredClassParameter
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        parameters:
          - *ref_18
        requestMediaTypes:
          application/json: !Request &ref_65
            parameters:
              - !Parameter 
                schema: *ref_24
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_64
                schema: *ref_9
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_19
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_64
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /reqopt/requied/class/parameter
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        requests:
          - *ref_65
        signatureParameters: []
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Will not happen, request not supposed to be done.
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_21
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: PostRequiredClassParameter
            description: Test explicitly required complex object. Please put null and the client library should throw before the request is sent.
        protocol: !Protocols {}
      - !Operation 
        operationId: explicit_postOptionalClassParameter
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        parameters:
          - *ref_18
        requestMediaTypes:
          application/json: !Request &ref_67
            parameters:
              - !Parameter 
                schema: *ref_24
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_66
                schema: *ref_9
                implementation: Method
                required: false
                language: !Languages 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_19
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_66
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /reqopt/optional/class/parameter
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        requests:
          - *ref_67
        signatureParameters: []
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Empty response
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_21
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: PostOptionalClassParameter
            description: Test explicitly optional complex object. Please put null.
        protocol: !Protocols {}
      - !Operation 
        operationId: explicit_postRequiredClassProperty
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        parameters:
          - *ref_18
        requestMediaTypes:
          application/json: !Request &ref_70
            parameters:
              - !Parameter 
                schema: *ref_24
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_69
                schema: *ref_68
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_19
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_69
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /reqopt/requied/class/property
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        requests:
          - *ref_70
        signatureParameters: []
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Will not happen, request not supposed to be done.
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_21
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: PostRequiredClassProperty
            description: Test explicitly required complex object. Please put a valid class-wrapper with 'value' = null and the client library should throw before the request is sent.
        protocol: !Protocols {}
      - !Operation 
        operationId: explicit_postOptionalClassProperty
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        parameters:
          - *ref_18
        requestMediaTypes:
          application/json: !Request &ref_73
            parameters:
              - !Parameter 
                schema: *ref_24
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_72
                schema: *ref_71
                implementation: Method
                required: false
                language: !Languages 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_19
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_72
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /reqopt/optional/class/property
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        requests:
          - *ref_73
        signatureParameters: []
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Empty response
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_21
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: PostOptionalClassProperty
            description: Test explicitly optional complex object. Please put a valid class-wrapper with 'value' = null.
        protocol: !Protocols {}
      - !Operation 
        operationId: explicit_postRequiredArrayParameter
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        parameters:
          - *ref_18
        requestMediaTypes:
          application/json: !Request &ref_76
            parameters:
              - !Parameter 
                schema: *ref_24
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_75
                schema: *ref_74
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_19
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_75
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /reqopt/requied/array/parameter
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        requests:
          - *ref_76
        signatureParameters: []
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Will not happen, request not supposed to be done.
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_21
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: PostRequiredArrayParameter
            description: Test explicitly required array. Please put null and the client library should throw before the request is sent.
        protocol: !Protocols {}
      - !Operation 
        operationId: explicit_postOptionalArrayParameter
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        parameters:
          - *ref_18
        requestMediaTypes:
          application/json: !Request &ref_79
            parameters:
              - !Parameter 
                schema: *ref_24
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_78
                schema: *ref_77
                implementation: Method
                required: false
                language: !Languages 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_19
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_78
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /reqopt/optional/array/parameter
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        requests:
          - *ref_79
        signatureParameters: []
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Empty response
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_21
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: PostOptionalArrayParameter
            description: Test explicitly optional array. Please put null.
        protocol: !Protocols {}
      - !Operation 
        operationId: explicit_postRequiredArrayProperty
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        parameters:
          - *ref_18
        requestMediaTypes:
          application/json: !Request &ref_82
            parameters:
              - !Parameter 
                schema: *ref_24
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_81
                schema: *ref_80
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_19
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_81
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /reqopt/requied/array/property
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        requests:
          - *ref_82
        signatureParameters: []
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Will not happen, request not supposed to be done.
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_21
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: PostRequiredArrayProperty
            description: Test explicitly required array. Please put a valid array-wrapper with 'value' = null and the client library should throw before the request is sent.
        protocol: !Protocols {}
      - !Operation 
        operationId: explicit_postOptionalArrayProperty
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        parameters:
          - *ref_18
        requestMediaTypes:
          application/json: !Request &ref_85
            parameters:
              - !Parameter 
                schema: *ref_24
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_84
                schema: *ref_83
                implementation: Method
                required: false
                language: !Languages 
                  default:
                    name: bodyParameter
                    description: ''
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_19
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_84
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /reqopt/optional/array/property
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        requests:
          - *ref_85
        signatureParameters: []
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Empty response
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_21
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: PostOptionalArrayProperty
            description: Test explicitly optional array. Please put a valid array-wrapper with 'value' = null.
        protocol: !Protocols {}
      - !Operation 
        operationId: explicit_postRequiredArrayHeader
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        parameters:
          - *ref_18
          - !Parameter &ref_87
            schema: *ref_86
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: headerParameter
                description: ''
                serializedName: headerParameter
            protocol: !Protocols 
              http: !HttpParameter 
                in: header
                style: simple
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_19
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /reqopt/requied/array/header
                method: post
                uri: '{$host}'
        signatureParameters:
          - *ref_87
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Will not happen, request not supposed to be done.
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_21
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: PostRequiredArrayHeader
            description: Test explicitly required array. Please put a header 'headerParameter' => null and the client library should throw before the request is sent.
        protocol: !Protocols {}
      - !Operation 
        operationId: explicit_postOptionalArrayHeader
        apiVersions:
          - !ApiVersion 
            version: 1.0.0
        parameters:
          - *ref_18
          - !Parameter &ref_89
            schema: *ref_88
            implementation: Method
            language: !Languages 
              default:
                name: headerParameter
                description: ''
                serializedName: headerParameter
            protocol: !Protocols 
              http: !HttpParameter 
                in: header
                style: simple
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_19
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /reqopt/optional/array/header
                method: post
                uri: '{$host}'
        signatureParameters:
          - *ref_89
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: Empty response
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_21
            language: !Languages 
              default:
                name: ''
                description: Unexpected error
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: PostOptionalArrayHeader
            description: Test explicitly optional integer. Please put a header 'headerParameter' => null.
        protocol: !Protocols {}
    language: !Languages 
      default:
        name: Explicit
        description: ''
    protocol: !Protocols {}
security: !Security 
  authenticationRequired: false
  schemes: []
language: !Languages 
  default:
    name: AutoRestRequiredOptionalTestService
    description: ''
protocol: !Protocols 
  http: !HttpModel {}
