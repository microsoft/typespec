{
    "swagger": "2.0",
    "info": {
        "title": "ComputeManagementClient",
        "description": "The Compute Management Client.",
        "version": "2020-06-01"
    },
    "host": "management.azure.com",
    "schemes": ["https"],
    "consumes": ["application/json"],
    "produces": ["application/json"],
    "security": [
        {
            "azure_auth": ["user_impersonation"]
        }
    ],
    "securityDefinitions": {
        "azure_auth": {
            "type": "oauth2",
            "authorizationUrl": "https://login.microsoftonline.com/common/oauth2/authorize",
            "flow": "implicit",
            "description": "Azure Active Directory OAuth2 Flow",
            "scopes": {
                "user_impersonation": "impersonate your user account"
            }
        }
    },
    "paths": {
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/deliveryRules": {
            "get": {
                "tags": ["DeliveryRules"],
                "description": "Gets an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile.",
                "operationId": "DeliveryRules_List",
                "parameters": [
                    {
                        "$ref": "#/parameters/resourceGroupNameParameter"
                    },
                    {
                        "$ref": "#/parameters/subscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. The request has succeeded.",
                        "schema": {
                            "$ref": "#/definitions/DeliveryRuleListResult"
                        }
                    },
                    "default": {
                        "description": "CDN error response describing why the operation failed.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/deliveryRules/{name}": {
            "get": {
                "tags": ["DeliveryRules"],
                "description": "Gets an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile.",
                "operationId": "DeliveryRules_Get",
                "parameters": [
                    {
                        "$ref": "#/parameters/resourceGroupNameParameter"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the endpoint under the profile which is unique globally.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/subscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. The request has succeeded.",
                        "schema": {
                            "$ref": "#/definitions/DeliveryRule"
                        }
                    },
                    "default": {
                        "description": "CDN error response describing why the operation failed.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "tags": ["DeliveryRules"],
                "description": "Creates a new CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile.",
                "operationId": "DeliveryRules_Create",
                "parameters": [
                    {
                        "$ref": "#/parameters/resourceGroupNameParameter"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the endpoint under the profile which is unique globally.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Endpoint properties",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeliveryRule"
                        }
                    },
                    {
                        "$ref": "#/parameters/subscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. The request has succeeded.",
                        "schema": {
                            "$ref": "#/definitions/DeliveryRule"
                        }
                    },
                    "201": {
                        "description": "Created. The request has been fulfilled and a new endpoint has been created.",
                        "schema": {
                            "$ref": "#/definitions/DeliveryRule"
                        }
                    },
                    "202": {
                        "description": "Accepted and the operation will complete asynchronously.",
                        "schema": {
                            "$ref": "#/definitions/DeliveryRule"
                        }
                    },
                    "default": {
                        "description": "CDN error response describing why the operation failed.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-long-running-operation": true
            },
            "delete": {
                "tags": ["DeliveryRules"],
                "description": "Deletes an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile.",
                "operationId": "DeliveryRules_Delete",
                "parameters": [
                    {
                        "$ref": "#/parameters/resourceGroupNameParameter"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the endpoint under the profile which is unique globally.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/subscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. The request has succeeded."
                    },
                    "202": {
                        "description": "Accepted and the operation will complete asynchronously."
                    },
                    "204": {
                        "description": "No Content. The request has been accepted but the endpoint was not found."
                    },
                    "default": {
                        "description": "CDN error response describing why the operation failed.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-long-running-operation": true
            }
        },
        "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/deliveryRules/{name}/post": {
            "get": {
                "tags": ["DeliveryRules"],
                "description": "Gets an existing CDN endpoint with the specified endpoint name under the specified subscription, resource group and profile.",
                "operationId": "DeliveryRules_Post",
                "parameters": [
                    {
                        "$ref": "#/parameters/resourceGroupNameParameter"
                    },
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of the endpoint under the profile which is unique globally.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/subscriptionIdParameter"
                    },
                    {
                        "$ref": "#/parameters/apiVersionParameter"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DerivedModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK. The request has succeeded.",
                        "schema": {
                            "$ref": "#/definitions/DerivedModel"
                        }
                    },
                    "default": {
                        "description": "CDN error response describing why the operation failed.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/{resourceScope}/providers/Microsoft.Blueprint/artifacts/{artifactName}": {
            "put": {
                "tags": ["Artifact"],
                "operationId": "Artifacts_CreateOrUpdate",
                "description": "Create or update blueprint artifact.",
                "parameters": [
                    {
                        "$ref": "#/parameters/apiVersionParameter"
                    },
                    {
                        "$ref": "#/parameters/ScopeParameter"
                    },
                    {
                        "$ref": "#/parameters/ArtifactNameParameter"
                    },
                    {
                        "name": "artifact",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Artifact"
                        },
                        "description": "Blueprint artifact to create or update."
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created -- blueprint artifact created/updated.",
                        "schema": {
                            "$ref": "#/definitions/Artifact"
                        }
                    },
                    "default": {
                        "description": "Blueprints error response.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "get": {
                "tags": ["Artifact"],
                "operationId": "Artifacts_Get",
                "description": "Get a blueprint artifact.",
                "parameters": [
                    {
                        "$ref": "#/parameters/apiVersionParameter"
                    },
                    {
                        "$ref": "#/parameters/ScopeParameter"
                    },
                    {
                        "$ref": "#/parameters/ArtifactNameParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK -- blueprint artifact retrieved.",
                        "schema": {
                            "$ref": "#/definitions/Artifact"
                        }
                    },
                    "default": {
                        "description": "Blueprints error response.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "tags": ["Artifact"],
                "operationId": "Artifacts_Delete",
                "description": "Delete a blueprint artifact.",
                "parameters": [
                    {
                        "$ref": "#/parameters/apiVersionParameter"
                    },
                    {
                        "$ref": "#/parameters/ScopeParameter"
                    },
                    {
                        "$ref": "#/parameters/ArtifactNameParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK -- blueprint artifact deleted.",
                        "schema": {
                            "$ref": "#/definitions/Artifact"
                        }
                    },
                    "204": {
                        "description": "No Content"
                    },
                    "default": {
                        "description": "Blueprints error response.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/{resourceScope}/providers/Microsoft.Blueprint/artifacts": {
            "get": {
                "tags": ["Artifact"],
                "operationId": "Artifacts_List",
                "description": "List artifacts for a given blueprint definition.",
                "parameters": [
                    {
                        "$ref": "#/parameters/apiVersionParameter"
                    },
                    {
                        "$ref": "#/parameters/ScopeParameter"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK -- blueprint artifacts retrieved.",
                        "schema": {
                            "$ref": "#/definitions/ArtifactList"
                        }
                    },
                    "default": {
                        "description": "Blueprints error response.",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                },
                "x-ms-pageable": {
                    "nextLinkName": "nextLink"
                }
            }
        }
    },
    "definitions": {
        "DeliveryRule": {
            "description": "A rule that specifies a set of actions and conditions",
            "type": "object",
            "required": ["order", "actions"],
            "properties": {
                "id": {
                    "description": "The resource id of this rule",
                    "type": "string",
                    "readOnly": true
                },
                "name": {
                    "description": "Name of the rule",
                    "type": "string",
                    "readOnly": true
                },
                "type": {
                    "description": "The resource type of this rule",
                    "type": "string",
                    "readOnly": true
                },
                "boolProperty": {
                    "description": "A bool property to verify bicep generation.",
                    "type": "boolean"
                },
                "location": {
                    "description": "A location property to verify bicep generation.",
                    "type": "string",
                    "x-ms-format": "azure-location"
                },
                "locationWithCustomSerialization": {
                    "description": "A location property to verify bicep generation.",
                    "type": "string",
                    "x-ms-format": "azure-location"
                },
                "dateTimeProperty": {
                    "description": "A datetime property to verify bicep generation.",
                    "type": "string",
                    "format": "date-time"
                },
                "duration": {
                    "description": "A duration property to verify bicep generation.",
                    "type": "string",
                    "format": "duration"
                },
                "number": {
                    "description": "A number property to verify bicep generation.",
                    "type": "number",
                    "format": "int32"
                },
                "uri": {
                    "description": "A number property to verify bicep generation.",
                    "type": "string",
                    "format": "url"
                },
                "properties": {
                    "description": "The properties",
                    "type": "object",
                    "properties": {
                        "order": {
                            "description": "The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,………}. A rule with a lesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not require any condition and actions listed in it will always be applied.",
                            "type": "integer",
                            "format": "int32"
                        },
                        "conditions": {
                            "description": "The condition that must be matched for the actions to be executed",
                            "type": "object",
                            "$ref": "#/definitions/DeliveryRuleCondition"
                        },
                        "actions": {
                            "description": "A list of actions that are executed when all the conditions of a rule are satisfied.",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DeliveryRuleAction"
                            },
                            "x-ms-identifiers": ["name"]
                        },
                        "extraMappingInfo": {
                            "description": "A dictionary of mapping details about the actions that are executed when all the conditions of a rule are satisfied.",
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/DeliveryRuleAction"
                            }
                        },
                        "pet": {
                            "$ref": "#/definitions/Pet"
                        },
                        "foo": {
                            "type": "string",
                            "readOnly": true,
                            "description": "put a readonly property here so that this model will show up in the model factory"
                        }
                    }
                }
            }
        },
        "DeliveryRuleListResult": {
            "description": "The list result of the rules",
            "type": "object",
            "properties": {
                "value": {
                    "description": "The values",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DeliveryRule"
                    }
                }
            }
        },
        "Pet": {
            "description": "A pet",
            "discriminator": "kind",
            "required": ["kind"],
            "properties": {
                "kind": {
                    "description": "The kind of the pet",
                    "type": "string",
                    "enum": ["Cat", "Dog"],
                    "x-ms-enum": {
                        "name": "PetKind",
                        "modelAsString": false
                    }
                },
                "id": {
                    "description": "The Id of the pet",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "Cat": {
            "description": "A cat",
            "x-ms-discriminator-value": "Cat",
            "allOf": [
                {
                    "$ref": "#/definitions/Pet"
                }
            ],
            "properties": {
                "meow": {
                    "description": "A cat can meow",
                    "type": "string"
                }
            }
        },
        "Dog": {
            "description": "A dog",
            "x-ms-discriminator-value": "Dog",
            "allOf": [
                {
                    "$ref": "#/definitions/Pet"
                }
            ],
            "properties": {
                "bark": {
                    "description": "A dog can bark",
                    "type": "string"
                },
                "dogKind": {
                    "description": "The kind of the dog",
                    "type": "string",
                    "enum": ["german Shepherd", "golden Retriever"],
                    "x-ms-enum": {
                        "name": "DogKind",
                        "modelAsString": false
                    }
                }
            }
        },
        "DeliveryRuleCondition": {
            "description": "A condition for the delivery rule.",
            "discriminator": "name",
            "required": ["name"],
            "properties": {
                "name": {
                    "description": "The name of the condition for the delivery rule.",
                    "type": "string",
                    "enum": ["RemoteAddress", "RequestMethod", "QueryString"],
                    "x-ms-enum": {
                        "name": "MatchVariable",
                        "modelAsString": true
                    }
                },
                "foo": {
                    "description": "For test",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "DeliveryRuleRemoteAddressCondition": {
            "description": "Defines the RemoteAddress condition for the delivery rule.",
            "x-ms-discriminator-value": "RemoteAddress",
            "allOf": [
                {
                    "$ref": "#/definitions/DeliveryRuleCondition"
                }
            ],
            "required": ["parameters"],
            "properties": {
                "parameters": {
                    "description": "Defines the parameters for the condition.",
                    "$ref": "#/definitions/RemoteAddressMatchConditionParameters"
                }
            }
        },
        "DeliveryRuleRequestMethodCondition": {
            "description": "Defines the RequestMethod condition for the delivery rule.",
            "x-ms-discriminator-value": "RequestMethod",
            "allOf": [
                {
                    "$ref": "#/definitions/DeliveryRuleCondition"
                }
            ],
            "required": ["parameters"],
            "properties": {
                "parameters": {
                    "description": "Defines the parameters for the condition.",
                    "$ref": "#/definitions/RequestMethodMatchConditionParameters"
                }
            }
        },
        "DeliveryRuleQueryStringCondition": {
            "description": "Defines the QueryString condition for the delivery rule.",
            "x-ms-discriminator-value": "QueryString",
            "allOf": [
                {
                    "$ref": "#/definitions/DeliveryRuleCondition"
                }
            ],
            "required": ["parameters"],
            "properties": {
                "parameters": {
                    "description": "Defines the parameters for the condition.",
                    "$ref": "#/definitions/QueryStringMatchConditionParameters"
                }
            }
        },
        "RemoteAddressMatchConditionParameters": {
            "description": "Defines the parameters for RemoteAddress match conditions",
            "required": ["operator", "typeName"],
            "properties": {
                "typeName": {
                    "type": "string",
                    "enum": ["DeliveryRuleRemoteAddressConditionParameters"]
                },
                "operator": {
                    "description": "Describes operator to be matched",
                    "type": "string",
                    "enum": ["Any", "IPMatch", "GeoMatch"],
                    "x-ms-enum": {
                        "name": "RemoteAddressOperator",
                        "modelAsString": true
                    }
                },
                "negateCondition": {
                    "description": "Describes if this is negate condition or not",
                    "type": "boolean"
                },
                "matchValues": {
                    "description": "Match values to match against. The operator will apply to each value in here with OR semantics. If any of them match the variable with the given operator this match condition is considered a match.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "transforms": {
                    "description": "List of transforms",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/transform"
                    }
                }
            }
        },
        "RequestMethodMatchConditionParameters": {
            "description": "Defines the parameters for RequestMethod match conditions",
            "required": ["operator", "typeName"],
            "properties": {
                "typeName": {
                    "type": "string",
                    "enum": ["DeliveryRuleRequestMethodConditionParameters"]
                },
                "operator": {
                    "description": "Describes operator to be matched",
                    "type": "string",
                    "enum": ["Equal"],
                    "x-ms-enum": {
                        "name": "RequestMethodOperator",
                        "modelAsString": true
                    }
                },
                "negateCondition": {
                    "description": "Describes if this is negate condition or not",
                    "type": "boolean"
                },
                "transforms": {
                    "description": "List of transforms",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/transform"
                    }
                },
                "matchValues": {
                    "description": "The match value for the condition of the delivery rule",
                    "type": "array",
                    "items": {
                        "type": "string",
                        "enum": [
                            "GET",
                            "HEAD",
                            "POST",
                            "PUT",
                            "DELETE",
                            "OPTIONS",
                            "TRACE"
                        ]
                    }
                }
            }
        },
        "QueryStringMatchConditionParameters": {
            "description": "Defines the parameters for QueryString match conditions",
            "required": ["operator", "typeName"],
            "properties": {
                "typeName": {
                    "type": "string",
                    "enum": ["DeliveryRuleQueryStringConditionParameters"]
                },
                "operator": {
                    "description": "Describes operator to be matched",
                    "type": "string",
                    "enum": [
                        "Any",
                        "Equal",
                        "Contains",
                        "BeginsWith",
                        "EndsWith",
                        "LessThan",
                        "LessThanOrEqual",
                        "GreaterThan",
                        "GreaterThanOrEqual",
                        "RegEx"
                    ],
                    "x-ms-enum": {
                        "name": "QueryStringOperator",
                        "modelAsString": true
                    }
                },
                "negateCondition": {
                    "description": "Describes if this is negate condition or not",
                    "type": "boolean"
                },
                "matchValues": {
                    "description": "The match value for the condition of the delivery rule",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "transforms": {
                    "description": "List of transforms",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/transform"
                    }
                }
            }
        },
        "transform": {
            "description": "Describes what transforms are applied before matching",
            "type": "string",
            "enum": [
                "Lowercase",
                "Uppercase",
                "Trim",
                "UrlDecode",
                "UrlEncode",
                "RemoveNulls"
            ],
            "x-ms-enum": {
                "name": "transform",
                "modelAsString": true
            }
        },
        "DeliveryRuleAction": {
            "description": "An action for the delivery rule.",
            "discriminator": "name",
            "required": ["name"],
            "properties": {
                "name": {
                    "description": "The name of the action for the delivery rule.",
                    "type": "string",
                    "enum": [
                        "CacheExpiration",
                        "CacheKeyQueryString",
                        "ModifyRequestHeader",
                        "ModifyResponseHeader",
                        "UrlRedirect",
                        "UrlRewrite",
                        "UrlSigning",
                        "OriginGroupOverride",
                        "RouteConfigurationOverride"
                    ],
                    "x-ms-enum": {
                        "name": "DeliveryRuleActionType",
                        "modelAsString": true
                    }
                },
                "foo": {
                    "description": "for test",
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "UrlRedirectAction": {
            "description": "Defines the url redirect action for the delivery rule.",
            "x-ms-discriminator-value": "UrlRedirect",
            "allOf": [
                {
                    "$ref": "#/definitions/DeliveryRuleAction"
                }
            ],
            "required": ["parameters"],
            "properties": {
                "parameters": {
                    "description": "Defines the parameters for the action.",
                    "$ref": "#/definitions/UrlRedirectActionParameters"
                }
            }
        },
        "UrlRedirectActionParameters": {
            "description": "Defines the parameters for the url redirect action.",
            "required": ["redirectType", "typeName"],
            "properties": {
                "typeName": {
                    "type": "string",
                    "enum": ["DeliveryRuleUrlRedirectActionParameters"]
                },
                "redirectType": {
                    "description": "The redirect type the rule will use when redirecting traffic.",
                    "type": "string",
                    "enum": [
                        "Moved",
                        "Found",
                        "TemporaryRedirect",
                        "PermanentRedirect"
                    ],
                    "x-ms-enum": {
                        "name": "RedirectType",
                        "modelAsString": true
                    }
                },
                "destinationProtocol": {
                    "description": "Protocol to use for the redirect. The default value is MatchRequest",
                    "type": "string",
                    "enum": ["MatchRequest", "Http", "Https"],
                    "x-ms-enum": {
                        "name": "DestinationProtocol",
                        "modelAsString": true
                    }
                },
                "customPath": {
                    "description": "The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path as destination path.",
                    "type": "string"
                },
                "customHostname": {
                    "description": "Host to redirect. Leave empty to use the incoming host as the destination host.",
                    "type": "string"
                },
                "customQueryString": {
                    "description": "The set of query strings to be placed in the redirect URL. Setting this value would replace any existing query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format. ? and & will be added automatically so do not include them.",
                    "type": "string"
                },
                "customFragment": {
                    "type": "string",
                    "description": "Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include the #."
                }
            }
        },
        "UrlSigningAction": {
            "description": "Defines the url signing action for the delivery rule.",
            "x-ms-discriminator-value": "UrlSigning",
            "allOf": [
                {
                    "$ref": "#/definitions/DeliveryRuleAction"
                }
            ],
            "required": ["parameters"],
            "properties": {
                "parameters": {
                    "description": "Defines the parameters for the action.",
                    "$ref": "#/definitions/UrlSigningActionParameters"
                }
            }
        },
        "UrlSigningActionParameters": {
            "description": "Defines the parameters for the Url Signing action.",
            "required": ["typeName"],
            "properties": {
                "typeName": {
                    "type": "string",
                    "enum": ["DeliveryRuleUrlSigningActionParameters"]
                },
                "algorithm": {
                    "description": "Algorithm to use for URL signing",
                    "type": "string",
                    "enum": ["SHA256"],
                    "x-ms-enum": {
                        "name": "algorithm",
                        "modelAsString": true
                    }
                },
                "parameterNameOverride": {
                    "description": "Defines which query string parameters in the url to be considered for expires, key id etc. ",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UrlSigningParamIdentifier"
                    },
                    "x-ms-identifiers": ["paramName"]
                }
            }
        },
        "UrlSigningParamIdentifier": {
            "description": "Defines how to identify a parameter for a specific purpose e.g. expires",
            "required": ["paramIndicator", "paramName"],
            "properties": {
                "paramIndicator": {
                    "description": "Indicates the purpose of the parameter",
                    "type": "string",
                    "enum": ["Expires", "KeyId", "Signature"],
                    "x-ms-enum": {
                        "name": "paramIndicator",
                        "modelAsString": true
                    }
                },
                "paramName": {
                    "description": "Parameter name",
                    "type": "string"
                }
            }
        },
        "OriginGroupOverrideAction": {
            "description": "Defines the origin group override action for the delivery rule.",
            "x-ms-discriminator-value": "OriginGroupOverride",
            "allOf": [
                {
                    "$ref": "#/definitions/DeliveryRuleAction"
                }
            ],
            "required": ["parameters"],
            "properties": {
                "parameters": {
                    "description": "Defines the parameters for the action.",
                    "$ref": "#/definitions/OriginGroupOverrideActionParameters"
                }
            }
        },
        "BaseModel": {
            "properties": {
                "optionalString": {
                    "type": "string"
                }
            }
        },
        "DerivedModel": {
            "allOf": [
                {
                    "$ref": "#/definitions/BaseModel"
                }
            ],
            "properties": {
                "requiredCollection": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": ["requiredCollection"]
        },
        "OriginGroupOverrideActionParameters": {
            "description": "Defines the parameters for the origin group override action.",
            "required": ["originGroup", "typeName"],
            "properties": {
                "typeName": {
                    "type": "string",
                    "enum": ["DeliveryRuleOriginGroupOverrideActionParameters"]
                },
                "originGroup": {
                    "description": "defines the OriginGroup that would override the DefaultOriginGroup.",
                    "type": "object",
                    "$ref": "#/definitions/ResourceReference"
                }
            }
        },
        "UrlRewriteAction": {
            "description": "Defines the url rewrite action for the delivery rule.",
            "x-ms-discriminator-value": "UrlRewrite",
            "allOf": [
                {
                    "$ref": "#/definitions/DeliveryRuleAction"
                }
            ],
            "required": ["parameters"],
            "properties": {
                "parameters": {
                    "description": "Defines the parameters for the action.",
                    "$ref": "#/definitions/UrlRewriteActionParameters"
                }
            }
        },
        "UrlRewriteActionParameters": {
            "description": "Defines the parameters for the url rewrite action.",
            "required": ["sourcePattern", "destination", "typeName"],
            "properties": {
                "typeName": {
                    "type": "string",
                    "enum": ["DeliveryRuleUrlRewriteActionParameters"]
                },
                "sourcePattern": {
                    "description": "define a request URI pattern that identifies the type of requests that may be rewritten. If value is blank, all strings are matched.",
                    "type": "string"
                },
                "destination": {
                    "description": "Define the relative URL to which the above requests will be rewritten by.",
                    "type": "string"
                },
                "preserveUnmatchedPath": {
                    "description": "Whether to preserve unmatched path. Default value is true.",
                    "type": "boolean"
                }
            }
        },
        "DeliveryRuleRequestHeaderAction": {
            "description": "Defines the request header action for the delivery rule.",
            "x-ms-discriminator-value": "ModifyRequestHeader",
            "allOf": [
                {
                    "$ref": "#/definitions/DeliveryRuleAction"
                }
            ],
            "required": ["parameters"],
            "properties": {
                "parameters": {
                    "description": "Defines the parameters for the action.",
                    "$ref": "#/definitions/HeaderActionParameters"
                }
            }
        },
        "DeliveryRuleResponseHeaderAction": {
            "description": "Defines the response header action for the delivery rule.",
            "x-ms-discriminator-value": "ModifyResponseHeader",
            "allOf": [
                {
                    "$ref": "#/definitions/DeliveryRuleAction"
                }
            ],
            "required": ["parameters"],
            "properties": {
                "parameters": {
                    "description": "Defines the parameters for the action.",
                    "$ref": "#/definitions/HeaderActionParameters"
                }
            }
        },
        "HeaderActionParameters": {
            "description": "Defines the parameters for the request header action.",
            "required": ["headerAction", "headerName", "typeName"],
            "properties": {
                "typeName": {
                    "type": "string",
                    "enum": ["DeliveryRuleHeaderActionParameters"]
                },
                "headerAction": {
                    "description": "Action to perform",
                    "type": "string",
                    "enum": ["Append", "Overwrite", "Delete"],
                    "x-ms-enum": {
                        "name": "HeaderAction",
                        "modelAsString": true
                    }
                },
                "headerName": {
                    "description": "Name of the header to modify",
                    "type": "string"
                },
                "value": {
                    "description": "Value for the specified action",
                    "type": "string"
                }
            }
        },
        "DeliveryRuleCacheExpirationAction": {
            "description": "Defines the cache expiration action for the delivery rule.",
            "x-ms-discriminator-value": "CacheExpiration",
            "allOf": [
                {
                    "$ref": "#/definitions/DeliveryRuleAction"
                }
            ],
            "required": ["parameters"],
            "properties": {
                "parameters": {
                    "description": "Defines the parameters for the action.",
                    "$ref": "#/definitions/CacheExpirationActionParameters"
                }
            }
        },
        "CacheExpirationActionParameters": {
            "description": "Defines the parameters for the cache expiration action.",
            "required": ["cacheBehavior", "cacheType", "typeName"],
            "properties": {
                "typeName": {
                    "type": "string",
                    "enum": ["DeliveryRuleCacheExpirationActionParameters"]
                },
                "cacheBehavior": {
                    "description": "Caching behavior for the requests",
                    "type": "string",
                    "enum": ["BypassCache", "Override", "SetIfMissing"],
                    "x-ms-enum": {
                        "name": "cacheBehavior",
                        "modelAsString": true
                    }
                },
                "cacheType": {
                    "description": "The level at which the content needs to be cached.",
                    "type": "string",
                    "enum": ["All"],
                    "x-ms-enum": {
                        "name": "CacheType",
                        "modelAsString": true
                    }
                },
                "cacheDuration": {
                    "description": "The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss",
                    "type": "string",
                    "format": "duration",
                    "x-ms-format": "duration-constant",
                    "x-nullable": true
                }
            }
        },
        "DeliveryRuleCacheKeyQueryStringAction": {
            "description": "Defines the cache-key query string action for the delivery rule.",
            "x-ms-discriminator-value": "CacheKeyQueryString",
            "allOf": [
                {
                    "$ref": "#/definitions/DeliveryRuleAction"
                }
            ],
            "required": ["parameters"],
            "properties": {
                "parameters": {
                    "description": "Defines the parameters for the action.",
                    "$ref": "#/definitions/CacheKeyQueryStringActionParameters"
                }
            }
        },
        "CacheKeyQueryStringActionParameters": {
            "description": "Defines the parameters for the cache-key query string action.",
            "required": ["queryStringBehavior", "typeName"],
            "properties": {
                "typeName": {
                    "type": "string",
                    "enum": [
                        "DeliveryRuleCacheKeyQueryStringBehaviorActionParameters"
                    ]
                },
                "queryStringBehavior": {
                    "description": "Caching behavior for the requests",
                    "type": "string",
                    "enum": ["Include", "IncludeAll", "Exclude", "ExcludeAll"],
                    "x-ms-enum": {
                        "name": "queryStringBehavior",
                        "modelAsString": true
                    }
                },
                "queryParameters": {
                    "description": "query parameters to include or exclude (comma separated).",
                    "type": "string",
                    "x-nullable": true
                }
            }
        },
        "DeliveryRuleRouteConfigurationOverrideAction": {
            "description": "Defines the route configuration override action for the delivery rule. Only applicable to Frontdoor Standard/Premium Profiles.",
            "type": "object",
            "x-ms-discriminator-value": "RouteConfigurationOverride",
            "allOf": [
                {
                    "$ref": "#/definitions/DeliveryRuleAction"
                }
            ],
            "required": ["parameters"],
            "properties": {
                "parameters": {
                    "description": "Defines the parameters for the action.",
                    "$ref": "#/definitions/RouteConfigurationOverrideActionParameters"
                }
            }
        },
        "RouteConfigurationOverrideActionParameters": {
            "description": "Defines the parameters for the route configuration override action.",
            "type": "object",
            "required": ["typeName"],
            "properties": {
                "typeName": {
                    "type": "string",
                    "enum": [
                        "DeliveryRuleRouteConfigurationOverrideActionParameters"
                    ]
                },
                "originGroupOverride": {
                    "description": "A reference to the origin group override configuration. Leave empty to use the default origin group on route.",
                    "type": "object",
                    "$ref": "#/definitions/OriginGroupOverride"
                }
            }
        },
        "OriginGroupOverride": {
            "description": "Defines the parameters for the origin group override configuration.",
            "type": "object",
            "properties": {
                "originGroup": {
                    "description": "defines the OriginGroup that would override the DefaultOriginGroup on route.",
                    "type": "object",
                    "$ref": "#/definitions/ResourceReference"
                },
                "forwardingProtocol": {
                    "description": "Protocol this rule will use when forwarding traffic to backends.",
                    "type": "string",
                    "enum": ["HttpOnly", "HttpsOnly", "MatchRequest"],
                    "x-ms-enum": {
                        "name": "ForwardingProtocol",
                        "modelAsString": true
                    }
                }
            }
        },
        "ResourceReference": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Resource ID."
                }
            },
            "description": "Reference to another resource.",
            "x-ms-azure-resource": true
        },
        "ErrorResponse": {
            "title": "Error response",
            "description": "Error response indicates Azure Front Door Standard or Azure Front Door Premium or CDN service is not able to process the incoming request. The reason is provided in the error message.",
            "type": "object",
            "properties": {
                "error": {
                    "description": "The error object.",
                    "$ref": "#/definitions/ErrorDetail"
                }
            }
        },
        "ErrorDetail": {
            "description": "The error detail.",
            "type": "object",
            "properties": {
                "code": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The error code."
                },
                "message": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The error message."
                },
                "target": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The error target."
                },
                "details": {
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ErrorDetail"
                    },
                    "x-ms-identifiers": ["message", "target"],
                    "description": "The error details."
                },
                "additionalInfo": {
                    "readOnly": true,
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ErrorAdditionalInfo"
                    },
                    "x-ms-identifiers": [],
                    "description": "The error additional info."
                }
            }
        },
        "ErrorAdditionalInfo": {
            "type": "object",
            "properties": {
                "type": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The additional info type."
                },
                "info": {
                    "readOnly": true,
                    "type": "object",
                    "description": "The additional info."
                }
            },
            "description": "The resource management error additional info."
        },
        "Artifact": {
            "type": "object",
            "discriminator": "kind",
            "description": "Represents a blueprint artifact.",
            "allOf": [
                {
                    "$ref": "#/definitions/AzureResourceBase"
                }
            ],
            "properties": {
                "kind": {
                    "type": "string",
                    "description": "Specifies the kind of blueprint artifact.",
                    "enum": ["template", "roleAssignment", "policyAssignment"],
                    "x-ms-enum": {
                        "name": "ArtifactKind",
                        "modelAsString": true
                    }
                }
            },
            "required": ["kind"]
        },
        "AzureResourceBase": {
            "description": "Common properties for all Azure resources.",
            "type": "object",
            "x-ms-azure-resource": true,
            "properties": {
                "id": {
                    "readOnly": true,
                    "type": "string",
                    "description": "String Id used to locate any resource on Azure."
                },
                "type": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Type of this resource."
                },
                "name": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Name of this resource."
                }
            }
        },
        "ArtifactList": {
            "type": "object",
            "description": "List of blueprint artifacts.",
            "properties": {
                "value": {
                    "type": "array",
                    "description": "List of blueprint artifacts.",
                    "items": {
                        "$ref": "#/definitions/Artifact"
                    }
                },
                "nextLink": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Link to the next page of results."
                }
            }
        },
        "TemplateArtifact": {
            "description": "Blueprint artifact that deploys a Resource Manager template.",
            "type": "object",
            "x-ms-discriminator-value": "template",
            "properties": {
                "properties": {
                    "description": "Properties for a Resource Manager template blueprint artifact.",
                    "$ref": "#/definitions/TemplateArtifactProperties",
                    "x-ms-client-flatten": true
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/Artifact"
                }
            ],
            "required": ["properties"]
        },
        "TemplateArtifactProperties": {
            "type": "object",
            "description": "Properties of a Resource Manager template blueprint artifact.",
            "properties": {
                "template": {
                    "type": "object",
                    "description": "The Resource Manager template blueprint artifact body."
                },
                "resourceGroup": {
                    "type": "string",
                    "description": "If applicable, the name of the resource group placeholder to which the Resource Manager template blueprint artifact will be deployed."
                },
                "parameters": {
                    "type": "object",
                    "description": "Resource Manager template blueprint artifact parameter values.",
                    "additionalProperties": {}
                }
            },
            "required": ["template", "parameters"]
        },
        "RoleAssignmentArtifact": {
            "description": "Blueprint artifact that applies a Role assignment.",
            "type": "object",
            "x-ms-discriminator-value": "roleAssignment",
            "properties": {
                "properties": {
                    "description": "Properties for a Role assignment blueprint artifact.",
                    "x-ms-client-flatten": true,
                    "$ref": "#/definitions/RoleAssignmentArtifactProperties"
                }
            },
            "allOf": [
                {
                    "$ref": "#/definitions/Artifact"
                }
            ],
            "required": ["properties"]
        },
        "RoleAssignmentArtifactProperties": {
            "type": "object",
            "description": "Properties of a Role assignment blueprint artifact.",
            "properties": {
                "roleDefinitionId": {
                    "type": "string",
                    "description": "Azure resource ID of the RoleDefinition."
                },
                "principalIds": {
                    "description": "Array of user or group identities in Azure Active Directory. The roleDefinition will apply to each identity."
                },
                "resourceGroup": {
                    "type": "string",
                    "description": "RoleAssignment will be scope to this resourceGroup. If empty, it scopes to the subscription."
                }
            },
            "required": ["roleDefinitionId", "principalIds"]
        }
    },
    "parameters": {
        "subscriptionIdParameter": {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call."
        },
        "apiVersionParameter": {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Client Api Version."
        },
        "resourceGroupNameParameter": {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "^[-\\w\\._\\(\\)]+$",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method",
            "description": "Name of the Resource group within the Azure subscription."
        },
        "ScopeParameter": {
            "name": "resourceScope",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The scope of the resource. Valid scopes are: management group (format: '/providers/Microsoft.Management/managementGroups/{managementGroup}'), subscription (format: '/subscriptions/{subscriptionId}').",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
        },
        "ArtifactNameParameter": {
            "name": "artifactName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Name of the blueprint artifact."
        }
    }
}
