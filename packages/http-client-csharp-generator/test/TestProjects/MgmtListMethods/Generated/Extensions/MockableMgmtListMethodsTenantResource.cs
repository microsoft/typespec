// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Threading;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.ResourceManager;
using MgmtListMethods;

namespace MgmtListMethods.Mocking
{
    /// <summary> A class to add extension methods to TenantResource. </summary>
    public partial class MockableMgmtListMethodsTenantResource : ArmResource
    {
        /// <summary> Initializes a new instance of the <see cref="MockableMgmtListMethodsTenantResource"/> class for mocking. </summary>
        protected MockableMgmtListMethodsTenantResource()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="MockableMgmtListMethodsTenantResource"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal MockableMgmtListMethodsTenantResource(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary> Gets a collection of TenantTestResources in the TenantResource. </summary>
        /// <returns> An object representing collection of TenantTestResources and their operations over a TenantTestResource. </returns>
        public virtual TenantTestCollection GetTenantTests()
        {
            return GetCachedClient(client => new TenantTestCollection(client, Id));
        }

        /// <summary>
        /// Gets a billing account by its ID.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/providers/Microsoft.Tenant/tenantTests/{tenantTestName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>TenantTests_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2020-06-01</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="TenantTestResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="tenantTestName"> The ID that uniquely identifies a billing account. </param>
        /// <param name="expand"> May be used to expand the soldTo, invoice sections and billing profiles. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="tenantTestName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="tenantTestName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual async Task<Response<TenantTestResource>> GetTenantTestAsync(string tenantTestName, string expand = null, CancellationToken cancellationToken = default)
        {
            return await GetTenantTests().GetAsync(tenantTestName, expand, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Gets a billing account by its ID.
        /// <list type="bullet">
        /// <item>
        /// <term>Request Path</term>
        /// <description>/providers/Microsoft.Tenant/tenantTests/{tenantTestName}</description>
        /// </item>
        /// <item>
        /// <term>Operation Id</term>
        /// <description>TenantTests_Get</description>
        /// </item>
        /// <item>
        /// <term>Default Api Version</term>
        /// <description>2020-06-01</description>
        /// </item>
        /// <item>
        /// <term>Resource</term>
        /// <description><see cref="TenantTestResource"/></description>
        /// </item>
        /// </list>
        /// </summary>
        /// <param name="tenantTestName"> The ID that uniquely identifies a billing account. </param>
        /// <param name="expand"> May be used to expand the soldTo, invoice sections and billing profiles. </param>
        /// <param name="cancellationToken"> The cancellation token to use. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="tenantTestName"/> is null. </exception>
        /// <exception cref="ArgumentException"> <paramref name="tenantTestName"/> is an empty string, and was expected to be non-empty. </exception>
        [ForwardsClientCalls]
        public virtual Response<TenantTestResource> GetTenantTest(string tenantTestName, string expand = null, CancellationToken cancellationToken = default)
        {
            return GetTenantTests().Get(tenantTestName, expand, cancellationToken);
        }
    }
}
