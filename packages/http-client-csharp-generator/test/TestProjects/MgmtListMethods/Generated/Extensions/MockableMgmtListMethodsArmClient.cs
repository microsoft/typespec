// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager;
using MgmtListMethods;

namespace MgmtListMethods.Mocking
{
    /// <summary> A class to add extension methods to ArmClient. </summary>
    public partial class MockableMgmtListMethodsArmClient : ArmResource
    {
        /// <summary> Initializes a new instance of the <see cref="MockableMgmtListMethodsArmClient"/> class for mocking. </summary>
        protected MockableMgmtListMethodsArmClient()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="MockableMgmtListMethodsArmClient"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal MockableMgmtListMethodsArmClient(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        internal MockableMgmtListMethodsArmClient(ArmClient client) : this(client, ResourceIdentifier.Root)
        {
        }

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary>
        /// Gets an object representing a <see cref="FakeResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="FakeResource.CreateResourceIdentifier" /> to create a <see cref="FakeResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="FakeResource"/> object. </returns>
        public virtual FakeResource GetFakeResource(ResourceIdentifier id)
        {
            FakeResource.ValidateResourceId(id);
            return new FakeResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="FakeParentWithAncestorWithNonResChWithLocResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="FakeParentWithAncestorWithNonResChWithLocResource.CreateResourceIdentifier" /> to create a <see cref="FakeParentWithAncestorWithNonResChWithLocResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="FakeParentWithAncestorWithNonResChWithLocResource"/> object. </returns>
        public virtual FakeParentWithAncestorWithNonResChWithLocResource GetFakeParentWithAncestorWithNonResChWithLocResource(ResourceIdentifier id)
        {
            FakeParentWithAncestorWithNonResChWithLocResource.ValidateResourceId(id);
            return new FakeParentWithAncestorWithNonResChWithLocResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="FakeParentWithAncestorWithNonResChResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="FakeParentWithAncestorWithNonResChResource.CreateResourceIdentifier" /> to create a <see cref="FakeParentWithAncestorWithNonResChResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="FakeParentWithAncestorWithNonResChResource"/> object. </returns>
        public virtual FakeParentWithAncestorWithNonResChResource GetFakeParentWithAncestorWithNonResChResource(ResourceIdentifier id)
        {
            FakeParentWithAncestorWithNonResChResource.ValidateResourceId(id);
            return new FakeParentWithAncestorWithNonResChResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="FakeParentWithAncestorWithLocResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="FakeParentWithAncestorWithLocResource.CreateResourceIdentifier" /> to create a <see cref="FakeParentWithAncestorWithLocResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="FakeParentWithAncestorWithLocResource"/> object. </returns>
        public virtual FakeParentWithAncestorWithLocResource GetFakeParentWithAncestorWithLocResource(ResourceIdentifier id)
        {
            FakeParentWithAncestorWithLocResource.ValidateResourceId(id);
            return new FakeParentWithAncestorWithLocResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="FakeParentWithAncestorResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="FakeParentWithAncestorResource.CreateResourceIdentifier" /> to create a <see cref="FakeParentWithAncestorResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="FakeParentWithAncestorResource"/> object. </returns>
        public virtual FakeParentWithAncestorResource GetFakeParentWithAncestorResource(ResourceIdentifier id)
        {
            FakeParentWithAncestorResource.ValidateResourceId(id);
            return new FakeParentWithAncestorResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="FakeParentWithNonResChResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="FakeParentWithNonResChResource.CreateResourceIdentifier" /> to create a <see cref="FakeParentWithNonResChResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="FakeParentWithNonResChResource"/> object. </returns>
        public virtual FakeParentWithNonResChResource GetFakeParentWithNonResChResource(ResourceIdentifier id)
        {
            FakeParentWithNonResChResource.ValidateResourceId(id);
            return new FakeParentWithNonResChResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="FakeParentResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="FakeParentResource.CreateResourceIdentifier" /> to create a <see cref="FakeParentResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="FakeParentResource"/> object. </returns>
        public virtual FakeParentResource GetFakeParentResource(ResourceIdentifier id)
        {
            FakeParentResource.ValidateResourceId(id);
            return new FakeParentResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="ResGrpParentWithAncestorWithNonResChWithLocResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ResGrpParentWithAncestorWithNonResChWithLocResource.CreateResourceIdentifier" /> to create a <see cref="ResGrpParentWithAncestorWithNonResChWithLocResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ResGrpParentWithAncestorWithNonResChWithLocResource"/> object. </returns>
        public virtual ResGrpParentWithAncestorWithNonResChWithLocResource GetResGrpParentWithAncestorWithNonResChWithLocResource(ResourceIdentifier id)
        {
            ResGrpParentWithAncestorWithNonResChWithLocResource.ValidateResourceId(id);
            return new ResGrpParentWithAncestorWithNonResChWithLocResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="ResGrpParentWithAncestorWithNonResChResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ResGrpParentWithAncestorWithNonResChResource.CreateResourceIdentifier" /> to create a <see cref="ResGrpParentWithAncestorWithNonResChResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ResGrpParentWithAncestorWithNonResChResource"/> object. </returns>
        public virtual ResGrpParentWithAncestorWithNonResChResource GetResGrpParentWithAncestorWithNonResChResource(ResourceIdentifier id)
        {
            ResGrpParentWithAncestorWithNonResChResource.ValidateResourceId(id);
            return new ResGrpParentWithAncestorWithNonResChResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="ResGrpParentWithAncestorWithLocResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ResGrpParentWithAncestorWithLocResource.CreateResourceIdentifier" /> to create a <see cref="ResGrpParentWithAncestorWithLocResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ResGrpParentWithAncestorWithLocResource"/> object. </returns>
        public virtual ResGrpParentWithAncestorWithLocResource GetResGrpParentWithAncestorWithLocResource(ResourceIdentifier id)
        {
            ResGrpParentWithAncestorWithLocResource.ValidateResourceId(id);
            return new ResGrpParentWithAncestorWithLocResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="ResGrpParentWithAncestorResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ResGrpParentWithAncestorResource.CreateResourceIdentifier" /> to create a <see cref="ResGrpParentWithAncestorResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ResGrpParentWithAncestorResource"/> object. </returns>
        public virtual ResGrpParentWithAncestorResource GetResGrpParentWithAncestorResource(ResourceIdentifier id)
        {
            ResGrpParentWithAncestorResource.ValidateResourceId(id);
            return new ResGrpParentWithAncestorResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="ResGrpParentWithNonResChResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ResGrpParentWithNonResChResource.CreateResourceIdentifier" /> to create a <see cref="ResGrpParentWithNonResChResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ResGrpParentWithNonResChResource"/> object. </returns>
        public virtual ResGrpParentWithNonResChResource GetResGrpParentWithNonResChResource(ResourceIdentifier id)
        {
            ResGrpParentWithNonResChResource.ValidateResourceId(id);
            return new ResGrpParentWithNonResChResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="ResGrpParentResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ResGrpParentResource.CreateResourceIdentifier" /> to create a <see cref="ResGrpParentResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ResGrpParentResource"/> object. </returns>
        public virtual ResGrpParentResource GetResGrpParentResource(ResourceIdentifier id)
        {
            ResGrpParentResource.ValidateResourceId(id);
            return new ResGrpParentResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="SubParentWithNonResChWithLocResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="SubParentWithNonResChWithLocResource.CreateResourceIdentifier" /> to create a <see cref="SubParentWithNonResChWithLocResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SubParentWithNonResChWithLocResource"/> object. </returns>
        public virtual SubParentWithNonResChWithLocResource GetSubParentWithNonResChWithLocResource(ResourceIdentifier id)
        {
            SubParentWithNonResChWithLocResource.ValidateResourceId(id);
            return new SubParentWithNonResChWithLocResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="SubParentWithNonResChResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="SubParentWithNonResChResource.CreateResourceIdentifier" /> to create a <see cref="SubParentWithNonResChResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SubParentWithNonResChResource"/> object. </returns>
        public virtual SubParentWithNonResChResource GetSubParentWithNonResChResource(ResourceIdentifier id)
        {
            SubParentWithNonResChResource.ValidateResourceId(id);
            return new SubParentWithNonResChResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="SubParentWithLocResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="SubParentWithLocResource.CreateResourceIdentifier" /> to create a <see cref="SubParentWithLocResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SubParentWithLocResource"/> object. </returns>
        public virtual SubParentWithLocResource GetSubParentWithLocResource(ResourceIdentifier id)
        {
            SubParentWithLocResource.ValidateResourceId(id);
            return new SubParentWithLocResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="SubParentResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="SubParentResource.CreateResourceIdentifier" /> to create a <see cref="SubParentResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SubParentResource"/> object. </returns>
        public virtual SubParentResource GetSubParentResource(ResourceIdentifier id)
        {
            SubParentResource.ValidateResourceId(id);
            return new SubParentResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MgmtGrpParentWithNonResChWithLocResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MgmtGrpParentWithNonResChWithLocResource.CreateResourceIdentifier" /> to create a <see cref="MgmtGrpParentWithNonResChWithLocResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="MgmtGrpParentWithNonResChWithLocResource"/> object. </returns>
        public virtual MgmtGrpParentWithNonResChWithLocResource GetMgmtGrpParentWithNonResChWithLocResource(ResourceIdentifier id)
        {
            MgmtGrpParentWithNonResChWithLocResource.ValidateResourceId(id);
            return new MgmtGrpParentWithNonResChWithLocResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MgmtGrpParentWithNonResChResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MgmtGrpParentWithNonResChResource.CreateResourceIdentifier" /> to create a <see cref="MgmtGrpParentWithNonResChResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="MgmtGrpParentWithNonResChResource"/> object. </returns>
        public virtual MgmtGrpParentWithNonResChResource GetMgmtGrpParentWithNonResChResource(ResourceIdentifier id)
        {
            MgmtGrpParentWithNonResChResource.ValidateResourceId(id);
            return new MgmtGrpParentWithNonResChResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MgmtGrpParentWithLocResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MgmtGrpParentWithLocResource.CreateResourceIdentifier" /> to create a <see cref="MgmtGrpParentWithLocResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="MgmtGrpParentWithLocResource"/> object. </returns>
        public virtual MgmtGrpParentWithLocResource GetMgmtGrpParentWithLocResource(ResourceIdentifier id)
        {
            MgmtGrpParentWithLocResource.ValidateResourceId(id);
            return new MgmtGrpParentWithLocResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="MgmtGroupParentResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MgmtGroupParentResource.CreateResourceIdentifier" /> to create a <see cref="MgmtGroupParentResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="MgmtGroupParentResource"/> object. </returns>
        public virtual MgmtGroupParentResource GetMgmtGroupParentResource(ResourceIdentifier id)
        {
            MgmtGroupParentResource.ValidateResourceId(id);
            return new MgmtGroupParentResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="TenantTestResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="TenantTestResource.CreateResourceIdentifier" /> to create a <see cref="TenantTestResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="TenantTestResource"/> object. </returns>
        public virtual TenantTestResource GetTenantTestResource(ResourceIdentifier id)
        {
            TenantTestResource.ValidateResourceId(id);
            return new TenantTestResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="TenantParentWithNonResChWithLocResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="TenantParentWithNonResChWithLocResource.CreateResourceIdentifier" /> to create a <see cref="TenantParentWithNonResChWithLocResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="TenantParentWithNonResChWithLocResource"/> object. </returns>
        public virtual TenantParentWithNonResChWithLocResource GetTenantParentWithNonResChWithLocResource(ResourceIdentifier id)
        {
            TenantParentWithNonResChWithLocResource.ValidateResourceId(id);
            return new TenantParentWithNonResChWithLocResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="TenantParentWithNonResChResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="TenantParentWithNonResChResource.CreateResourceIdentifier" /> to create a <see cref="TenantParentWithNonResChResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="TenantParentWithNonResChResource"/> object. </returns>
        public virtual TenantParentWithNonResChResource GetTenantParentWithNonResChResource(ResourceIdentifier id)
        {
            TenantParentWithNonResChResource.ValidateResourceId(id);
            return new TenantParentWithNonResChResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="TenantParentWithLocResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="TenantParentWithLocResource.CreateResourceIdentifier" /> to create a <see cref="TenantParentWithLocResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="TenantParentWithLocResource"/> object. </returns>
        public virtual TenantParentWithLocResource GetTenantParentWithLocResource(ResourceIdentifier id)
        {
            TenantParentWithLocResource.ValidateResourceId(id);
            return new TenantParentWithLocResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="TenantParentResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="TenantParentResource.CreateResourceIdentifier" /> to create a <see cref="TenantParentResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="TenantParentResource"/> object. </returns>
        public virtual TenantParentResource GetTenantParentResource(ResourceIdentifier id)
        {
            TenantParentResource.ValidateResourceId(id);
            return new TenantParentResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="FakeConfigurationResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="FakeConfigurationResource.CreateResourceIdentifier" /> to create a <see cref="FakeConfigurationResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="FakeConfigurationResource"/> object. </returns>
        public virtual FakeConfigurationResource GetFakeConfigurationResource(ResourceIdentifier id)
        {
            FakeConfigurationResource.ValidateResourceId(id);
            return new FakeConfigurationResource(Client, id);
        }
    }
}
