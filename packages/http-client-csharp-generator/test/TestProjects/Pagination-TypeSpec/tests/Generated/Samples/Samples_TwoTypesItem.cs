// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using System.Threading.Tasks;
using Azure;
using Azure.Core;
using Azure.Identity;
using NUnit.Framework;
using Pagination;
using Pagination.Models;

namespace Pagination.Samples
{
    public partial class Samples_TwoTypesItem
    {
        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_TextBlocklist_GetTextBlocklists_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TwoTypesItem client = new PaginationClient(endpoint, credential).GetTwoTypesItemClient();

            foreach (BinaryData item in client.GetTextBlocklists(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("blocklistName").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_TextBlocklist_GetTextBlocklists_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TwoTypesItem client = new PaginationClient(endpoint, credential).GetTwoTypesItemClient();

            await foreach (BinaryData item in client.GetTextBlocklistsAsync(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("blocklistName").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_TextBlocklist_GetTextBlocklists_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TwoTypesItem client = new PaginationClient(endpoint, credential).GetTwoTypesItemClient();

            foreach (TextBlocklist item in client.GetTextBlocklists())
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_TextBlocklist_GetTextBlocklists_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TwoTypesItem client = new PaginationClient(endpoint, credential).GetTwoTypesItemClient();

            await foreach (TextBlocklist item in client.GetTextBlocklistsAsync())
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_TextBlocklist_GetTextBlocklists_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TwoTypesItem client = new PaginationClient(endpoint, credential).GetTwoTypesItemClient();

            foreach (BinaryData item in client.GetTextBlocklists(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("blocklistName").ToString());
                Console.WriteLine(result.GetProperty("description").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_TextBlocklist_GetTextBlocklists_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TwoTypesItem client = new PaginationClient(endpoint, credential).GetTwoTypesItemClient();

            await foreach (BinaryData item in client.GetTextBlocklistsAsync(null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("blocklistName").ToString());
                Console.WriteLine(result.GetProperty("description").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_TextBlocklist_GetTextBlocklists_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TwoTypesItem client = new PaginationClient(endpoint, credential).GetTwoTypesItemClient();

            foreach (TextBlocklist item in client.GetTextBlocklists())
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_TextBlocklist_GetTextBlocklists_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TwoTypesItem client = new PaginationClient(endpoint, credential).GetTwoTypesItemClient();

            await foreach (TextBlocklist item in client.GetTextBlocklistsAsync())
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_TextBlockItem_GetTextBlocklistItems_ShortVersion()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TwoTypesItem client = new PaginationClient(endpoint, credential).GetTwoTypesItemClient();

            foreach (BinaryData item in client.GetTextBlocklistItems("<blocklistName>", null, null, null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("blockItemId").ToString());
                Console.WriteLine(result.GetProperty("text").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_TextBlockItem_GetTextBlocklistItems_ShortVersion_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TwoTypesItem client = new PaginationClient(endpoint, credential).GetTwoTypesItemClient();

            await foreach (BinaryData item in client.GetTextBlocklistItemsAsync("<blocklistName>", null, null, null, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("blockItemId").ToString());
                Console.WriteLine(result.GetProperty("text").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_TextBlockItem_GetTextBlocklistItems_ShortVersion_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TwoTypesItem client = new PaginationClient(endpoint, credential).GetTwoTypesItemClient();

            foreach (TextBlockItem item in client.GetTextBlocklistItems("<blocklistName>"))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_TextBlockItem_GetTextBlocklistItems_ShortVersion_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TwoTypesItem client = new PaginationClient(endpoint, credential).GetTwoTypesItemClient();

            await foreach (TextBlockItem item in client.GetTextBlocklistItemsAsync("<blocklistName>"))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_TextBlockItem_GetTextBlocklistItems_AllParameters()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TwoTypesItem client = new PaginationClient(endpoint, credential).GetTwoTypesItemClient();

            foreach (BinaryData item in client.GetTextBlocklistItems("<blocklistName>", 1234, 1234, 1234, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("blockItemId").ToString());
                Console.WriteLine(result.GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("text").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_TextBlockItem_GetTextBlocklistItems_AllParameters_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TwoTypesItem client = new PaginationClient(endpoint, credential).GetTwoTypesItemClient();

            await foreach (BinaryData item in client.GetTextBlocklistItemsAsync("<blocklistName>", 1234, 1234, 1234, null))
            {
                JsonElement result = JsonDocument.Parse(item.ToStream()).RootElement;
                Console.WriteLine(result.GetProperty("blockItemId").ToString());
                Console.WriteLine(result.GetProperty("description").ToString());
                Console.WriteLine(result.GetProperty("text").ToString());
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public void Example_TextBlockItem_GetTextBlocklistItems_AllParameters_Convenience()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TwoTypesItem client = new PaginationClient(endpoint, credential).GetTwoTypesItemClient();

            foreach (TextBlockItem item in client.GetTextBlocklistItems("<blocklistName>", maxCount: 1234, skip: 1234, maxpagesize: 1234))
            {
            }
        }

        [Test]
        [Ignore("Only validating compilation of examples")]
        public async Task Example_TextBlockItem_GetTextBlocklistItems_AllParameters_Convenience_Async()
        {
            Uri endpoint = new Uri("<https://my-service.azure.com>");
            TokenCredential credential = new DefaultAzureCredential();
            TwoTypesItem client = new PaginationClient(endpoint, credential).GetTwoTypesItemClient();

            await foreach (TextBlockItem item in client.GetTextBlocklistItemsAsync("<blocklistName>", maxCount: 1234, skip: 1234, maxpagesize: 1234))
            {
            }
        }
    }
}
