// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure;

namespace AuthoringTypeSpec.Models
{
    /// <summary> Model factory for models. </summary>
    public static partial class AuthoringTypeSpecModelFactory
    {
        /// <summary> Initializes a new instance of <see cref="Models.DeploymentJob"/>. </summary>
        /// <param name="jobId"> The job ID. </param>
        /// <param name="createdDateTime"> The creation date time of the job. </param>
        /// <param name="lastUpdatedDateTime"> The the last date time the job was updated. </param>
        /// <param name="expirationDateTime"> The expiration date time of the job. </param>
        /// <param name="status"> The job status. </param>
        /// <param name="warnings"> The warnings that were encountered while executing the job. </param>
        /// <param name="errors"> The errors encountered while executing the job. </param>
        /// <param name="id"></param>
        /// <returns> A new <see cref="Models.DeploymentJob"/> instance for mocking. </returns>
        public static DeploymentJob DeploymentJob(string jobId = null, DateTimeOffset createdDateTime = default, DateTimeOffset lastUpdatedDateTime = default, DateTimeOffset expirationDateTime = default, JobStatus status = default, IEnumerable<JobWarning> warnings = null, ResponseError errors = null, string id = null)
        {
            warnings ??= new List<JobWarning>();

            return new DeploymentJob(
                jobId,
                createdDateTime,
                lastUpdatedDateTime,
                expirationDateTime,
                status,
                warnings?.ToList(),
                errors,
                id,
                serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.JobWarning"/>. </summary>
        /// <param name="code"> The warning code. </param>
        /// <param name="message"> The warning message. </param>
        /// <returns> A new <see cref="Models.JobWarning"/> instance for mocking. </returns>
        public static JobWarning JobWarning(string code = null, string message = null)
        {
            return new JobWarning(code, message, serializedAdditionalRawData: null);
        }

        /// <summary> Initializes a new instance of <see cref="Models.SwapDeploymentsJob"/>. </summary>
        /// <param name="jobId"> The job ID. </param>
        /// <param name="createdDateTime"> The creation date time of the job. </param>
        /// <param name="lastUpdatedDateTime"> The the last date time the job was updated. </param>
        /// <param name="expirationDateTime"> The expiration date time of the job. </param>
        /// <param name="status"> The job status. </param>
        /// <param name="warnings"> The warnings that were encountered while executing the job. </param>
        /// <param name="errors"> The errors encountered while executing the job. </param>
        /// <param name="id"></param>
        /// <returns> A new <see cref="Models.SwapDeploymentsJob"/> instance for mocking. </returns>
        public static SwapDeploymentsJob SwapDeploymentsJob(string jobId = null, DateTimeOffset createdDateTime = default, DateTimeOffset lastUpdatedDateTime = default, DateTimeOffset expirationDateTime = default, JobStatus status = default, IEnumerable<JobWarning> warnings = null, ResponseError errors = null, string id = null)
        {
            warnings ??= new List<JobWarning>();

            return new SwapDeploymentsJob(
                jobId,
                createdDateTime,
                lastUpdatedDateTime,
                expirationDateTime,
                status,
                warnings?.ToList(),
                errors,
                id,
                serializedAdditionalRawData: null);
        }
    }
}
