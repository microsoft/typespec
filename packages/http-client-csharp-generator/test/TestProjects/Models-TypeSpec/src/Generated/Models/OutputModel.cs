// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;
using Azure.Core;
using ModelsTypeSpec;

namespace ModelsTypeSpec.Models
{
    /// <summary> Model used only as output. </summary>
    public partial class OutputModel
    {
        /// <summary>
        /// Keeps track of any properties unknown to the library.
        /// <para>
        /// To assign an object to the value of this property use <see cref="BinaryData.FromObjectAsJson{T}(T, System.Text.Json.JsonSerializerOptions?)"/>.
        /// </para>
        /// <para>
        /// To assign an already formatted json string to this property use <see cref="BinaryData.FromString(string)"/>.
        /// </para>
        /// <para>
        /// Examples:
        /// <list type="bullet">
        /// <item>
        /// <term>BinaryData.FromObjectAsJson("foo")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("\"foo\"")</term>
        /// <description>Creates a payload of "foo".</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromObjectAsJson(new { key = "value" })</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// <item>
        /// <term>BinaryData.FromString("{\"key\": \"value\"}")</term>
        /// <description>Creates a payload of { "key": "value" }.</description>
        /// </item>
        /// </list>
        /// </para>
        /// </summary>
        private IDictionary<string, BinaryData> _serializedAdditionalRawData;

        /// <summary> Initializes a new instance of <see cref="OutputModel"/>. </summary>
        /// <param name="requiredString"> Required string. </param>
        /// <param name="requiredInt"> Required int. </param>
        /// <param name="requiredModel"> Required model. </param>
        /// <param name="requiredList"> Required collection. </param>
        /// <param name="requiredModelRecord"> Required model record. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="requiredString"/>, <paramref name="requiredModel"/>, <paramref name="requiredList"/> or <paramref name="requiredModelRecord"/> is null. </exception>
        internal OutputModel(string requiredString, int requiredInt, DerivedModel requiredModel, IEnumerable<CollectionItem> requiredList, IReadOnlyDictionary<string, RecordItem> requiredModelRecord)
        {
            if (requiredString == null)
            {
                throw new ArgumentNullException(nameof(requiredString));
            }
            if (requiredModel == null)
            {
                throw new ArgumentNullException(nameof(requiredModel));
            }
            if (requiredList == null)
            {
                throw new ArgumentNullException(nameof(requiredList));
            }
            if (requiredModelRecord == null)
            {
                throw new ArgumentNullException(nameof(requiredModelRecord));
            }

            RequiredString = requiredString;
            RequiredInt = requiredInt;
            RequiredModel = requiredModel;
            RequiredList = requiredList.ToList();
            RequiredModelRecord = requiredModelRecord;
            OptionalList = new ChangeTrackingList<CollectionItem>();
            OptionalNullableList = new ChangeTrackingList<CollectionItem>();
            OptionalRecord = new ChangeTrackingDictionary<string, RecordItem>();
            OptionalNullableRecord = new ChangeTrackingDictionary<string, RecordItem>();
        }

        /// <summary> Initializes a new instance of <see cref="OutputModel"/>. </summary>
        /// <param name="requiredString"> Required string. </param>
        /// <param name="requiredInt"> Required int. </param>
        /// <param name="requiredModel"> Required model. </param>
        /// <param name="requiredList"> Required collection. </param>
        /// <param name="requiredModelRecord"> Required model record. </param>
        /// <param name="optionalList"> Optional model collection. </param>
        /// <param name="optionalNullableList"> Optional model nullable collection. </param>
        /// <param name="optionalRecord"> Optional model record. </param>
        /// <param name="optionalNullableRecord"> Optional model nullable record. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        internal OutputModel(string requiredString, int requiredInt, DerivedModel requiredModel, IReadOnlyList<CollectionItem> requiredList, IReadOnlyDictionary<string, RecordItem> requiredModelRecord, IReadOnlyList<CollectionItem> optionalList, IReadOnlyList<CollectionItem> optionalNullableList, IReadOnlyDictionary<string, RecordItem> optionalRecord, IReadOnlyDictionary<string, RecordItem> optionalNullableRecord, IDictionary<string, BinaryData> serializedAdditionalRawData)
        {
            RequiredString = requiredString;
            RequiredInt = requiredInt;
            RequiredModel = requiredModel;
            RequiredList = requiredList;
            RequiredModelRecord = requiredModelRecord;
            OptionalList = optionalList;
            OptionalNullableList = optionalNullableList;
            OptionalRecord = optionalRecord;
            OptionalNullableRecord = optionalNullableRecord;
            _serializedAdditionalRawData = serializedAdditionalRawData;
        }

        /// <summary> Initializes a new instance of <see cref="OutputModel"/> for deserialization. </summary>
        internal OutputModel()
        {
        }

        /// <summary> Required string. </summary>
        public string RequiredString { get; }
        /// <summary> Required int. </summary>
        public int RequiredInt { get; }
        /// <summary> Required model. </summary>
        public DerivedModel RequiredModel { get; }
        /// <summary> Required collection. </summary>
        public IReadOnlyList<CollectionItem> RequiredList { get; }
        /// <summary> Required model record. </summary>
        public IReadOnlyDictionary<string, RecordItem> RequiredModelRecord { get; }
        /// <summary> Optional model collection. </summary>
        public IReadOnlyList<CollectionItem> OptionalList { get; }
        /// <summary> Optional model nullable collection. </summary>
        public IReadOnlyList<CollectionItem> OptionalNullableList { get; }
        /// <summary> Optional model record. </summary>
        public IReadOnlyDictionary<string, RecordItem> OptionalRecord { get; }
        /// <summary> Optional model nullable record. </summary>
        public IReadOnlyDictionary<string, RecordItem> OptionalNullableRecord { get; }
    }
}
