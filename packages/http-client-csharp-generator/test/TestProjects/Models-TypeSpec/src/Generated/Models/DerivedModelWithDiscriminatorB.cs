// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;

namespace ModelsTypeSpec.Models
{
    /// <summary> Deriver model with discriminator property. </summary>
    public partial class DerivedModelWithDiscriminatorB : BaseModelWithDiscriminator
    {
        /// <summary> Initializes a new instance of <see cref="DerivedModelWithDiscriminatorB"/>. </summary>
        /// <param name="requiredPropertyOnBase"> Required property on base. </param>
        /// <param name="requiredInt"> Required int. </param>
        public DerivedModelWithDiscriminatorB(int requiredPropertyOnBase, int requiredInt) : base(requiredPropertyOnBase)
        {
            DiscriminatorProperty = "B";
            RequiredInt = requiredInt;
        }

        /// <summary> Initializes a new instance of <see cref="DerivedModelWithDiscriminatorB"/>. </summary>
        /// <param name="discriminatorProperty"> Discriminator. </param>
        /// <param name="optionalPropertyOnBase"> Optional property on base. </param>
        /// <param name="requiredPropertyOnBase"> Required property on base. </param>
        /// <param name="serializedAdditionalRawData"> Keeps track of any properties unknown to the library. </param>
        /// <param name="requiredInt"> Required int. </param>
        internal DerivedModelWithDiscriminatorB(string discriminatorProperty, string optionalPropertyOnBase, int requiredPropertyOnBase, IDictionary<string, BinaryData> serializedAdditionalRawData, int requiredInt) : base(discriminatorProperty, optionalPropertyOnBase, requiredPropertyOnBase, serializedAdditionalRawData)
        {
            RequiredInt = requiredInt;
        }

        /// <summary> Initializes a new instance of <see cref="DerivedModelWithDiscriminatorB"/> for deserialization. </summary>
        internal DerivedModelWithDiscriminatorB()
        {
        }

        /// <summary> Required int. </summary>
        public int RequiredInt { get; set; }
    }
}
