// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager;
using MgmtSupersetInheritance;

namespace MgmtSupersetInheritance.Mocking
{
    /// <summary> A class to add extension methods to ArmClient. </summary>
    public partial class MockableMgmtSupersetInheritanceArmClient : ArmResource
    {
        /// <summary> Initializes a new instance of the <see cref="MockableMgmtSupersetInheritanceArmClient"/> class for mocking. </summary>
        protected MockableMgmtSupersetInheritanceArmClient()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="MockableMgmtSupersetInheritanceArmClient"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal MockableMgmtSupersetInheritanceArmClient(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        internal MockableMgmtSupersetInheritanceArmClient(ArmClient client) : this(client, ResourceIdentifier.Root)
        {
        }

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary>
        /// Gets an object representing a <see cref="SupersetModel1Resource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="SupersetModel1Resource.CreateResourceIdentifier" /> to create a <see cref="SupersetModel1Resource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SupersetModel1Resource"/> object. </returns>
        public virtual SupersetModel1Resource GetSupersetModel1Resource(ResourceIdentifier id)
        {
            SupersetModel1Resource.ValidateResourceId(id);
            return new SupersetModel1Resource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="SupersetModel4Resource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="SupersetModel4Resource.CreateResourceIdentifier" /> to create a <see cref="SupersetModel4Resource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SupersetModel4Resource"/> object. </returns>
        public virtual SupersetModel4Resource GetSupersetModel4Resource(ResourceIdentifier id)
        {
            SupersetModel4Resource.ValidateResourceId(id);
            return new SupersetModel4Resource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="SupersetModel6Resource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="SupersetModel6Resource.CreateResourceIdentifier" /> to create a <see cref="SupersetModel6Resource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SupersetModel6Resource"/> object. </returns>
        public virtual SupersetModel6Resource GetSupersetModel6Resource(ResourceIdentifier id)
        {
            SupersetModel6Resource.ValidateResourceId(id);
            return new SupersetModel6Resource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="SupersetModel7Resource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="SupersetModel7Resource.CreateResourceIdentifier" /> to create a <see cref="SupersetModel7Resource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="SupersetModel7Resource"/> object. </returns>
        public virtual SupersetModel7Resource GetSupersetModel7Resource(ResourceIdentifier id)
        {
            SupersetModel7Resource.ValidateResourceId(id);
            return new SupersetModel7Resource(Client, id);
        }
    }
}
