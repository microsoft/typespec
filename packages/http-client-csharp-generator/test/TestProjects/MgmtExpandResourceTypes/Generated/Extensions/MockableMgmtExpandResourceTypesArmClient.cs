// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager;
using MgmtExpandResourceTypes;

namespace MgmtExpandResourceTypes.Mocking
{
    /// <summary> A class to add extension methods to ArmClient. </summary>
    public partial class MockableMgmtExpandResourceTypesArmClient : ArmResource
    {
        /// <summary> Initializes a new instance of the <see cref="MockableMgmtExpandResourceTypesArmClient"/> class for mocking. </summary>
        protected MockableMgmtExpandResourceTypesArmClient()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="MockableMgmtExpandResourceTypesArmClient"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal MockableMgmtExpandResourceTypesArmClient(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        internal MockableMgmtExpandResourceTypesArmClient(ArmClient client) : this(client, ResourceIdentifier.Root)
        {
        }

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary>
        /// Gets an object representing a <see cref="RecordSetAResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="RecordSetAResource.CreateResourceIdentifier" /> to create a <see cref="RecordSetAResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="RecordSetAResource"/> object. </returns>
        public virtual RecordSetAResource GetRecordSetAResource(ResourceIdentifier id)
        {
            RecordSetAResource.ValidateResourceId(id);
            return new RecordSetAResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="RecordSetAaaaResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="RecordSetAaaaResource.CreateResourceIdentifier" /> to create a <see cref="RecordSetAaaaResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="RecordSetAaaaResource"/> object. </returns>
        public virtual RecordSetAaaaResource GetRecordSetAaaaResource(ResourceIdentifier id)
        {
            RecordSetAaaaResource.ValidateResourceId(id);
            return new RecordSetAaaaResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="RecordSetCaaResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="RecordSetCaaResource.CreateResourceIdentifier" /> to create a <see cref="RecordSetCaaResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="RecordSetCaaResource"/> object. </returns>
        public virtual RecordSetCaaResource GetRecordSetCaaResource(ResourceIdentifier id)
        {
            RecordSetCaaResource.ValidateResourceId(id);
            return new RecordSetCaaResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="RecordSetCNameResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="RecordSetCNameResource.CreateResourceIdentifier" /> to create a <see cref="RecordSetCNameResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="RecordSetCNameResource"/> object. </returns>
        public virtual RecordSetCNameResource GetRecordSetCNameResource(ResourceIdentifier id)
        {
            RecordSetCNameResource.ValidateResourceId(id);
            return new RecordSetCNameResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="RecordSetMxResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="RecordSetMxResource.CreateResourceIdentifier" /> to create a <see cref="RecordSetMxResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="RecordSetMxResource"/> object. </returns>
        public virtual RecordSetMxResource GetRecordSetMxResource(ResourceIdentifier id)
        {
            RecordSetMxResource.ValidateResourceId(id);
            return new RecordSetMxResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="RecordSetNsResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="RecordSetNsResource.CreateResourceIdentifier" /> to create a <see cref="RecordSetNsResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="RecordSetNsResource"/> object. </returns>
        public virtual RecordSetNsResource GetRecordSetNsResource(ResourceIdentifier id)
        {
            RecordSetNsResource.ValidateResourceId(id);
            return new RecordSetNsResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="RecordSetPtrResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="RecordSetPtrResource.CreateResourceIdentifier" /> to create a <see cref="RecordSetPtrResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="RecordSetPtrResource"/> object. </returns>
        public virtual RecordSetPtrResource GetRecordSetPtrResource(ResourceIdentifier id)
        {
            RecordSetPtrResource.ValidateResourceId(id);
            return new RecordSetPtrResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="RecordSetSoaResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="RecordSetSoaResource.CreateResourceIdentifier" /> to create a <see cref="RecordSetSoaResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="RecordSetSoaResource"/> object. </returns>
        public virtual RecordSetSoaResource GetRecordSetSoaResource(ResourceIdentifier id)
        {
            RecordSetSoaResource.ValidateResourceId(id);
            return new RecordSetSoaResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="RecordSetSrvResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="RecordSetSrvResource.CreateResourceIdentifier" /> to create a <see cref="RecordSetSrvResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="RecordSetSrvResource"/> object. </returns>
        public virtual RecordSetSrvResource GetRecordSetSrvResource(ResourceIdentifier id)
        {
            RecordSetSrvResource.ValidateResourceId(id);
            return new RecordSetSrvResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="RecordSetTxtResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="RecordSetTxtResource.CreateResourceIdentifier" /> to create a <see cref="RecordSetTxtResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="RecordSetTxtResource"/> object. </returns>
        public virtual RecordSetTxtResource GetRecordSetTxtResource(ResourceIdentifier id)
        {
            RecordSetTxtResource.ValidateResourceId(id);
            return new RecordSetTxtResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="ZoneResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ZoneResource.CreateResourceIdentifier" /> to create a <see cref="ZoneResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ZoneResource"/> object. </returns>
        public virtual ZoneResource GetZoneResource(ResourceIdentifier id)
        {
            ZoneResource.ValidateResourceId(id);
            return new ZoneResource(Client, id);
        }
    }
}
