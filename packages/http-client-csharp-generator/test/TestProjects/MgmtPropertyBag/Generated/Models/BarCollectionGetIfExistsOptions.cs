// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using MgmtPropertyBag;

namespace MgmtPropertyBag.Models
{
    /// <summary> The BarCollectionGetIfExistsOptions. </summary>
    public partial class BarCollectionGetIfExistsOptions
    {
        /// <summary> Initializes a new instance of <see cref="BarCollectionGetIfExistsOptions"/>. </summary>
        /// <param name="barName"> The bar name. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="barName"/> is null. </exception>
        public BarCollectionGetIfExistsOptions(string barName)
        {
            if (barName == null)
            {
                throw new ArgumentNullException(nameof(barName));
            }

            BarName = barName;
            Items = new ChangeTrackingList<string>();
        }

        /// <summary> The bar name. </summary>
        public string BarName { get; }
        /// <summary> The entity state (Etag) version. A value of "*" can be used for If-Match to unconditionally apply the operation. </summary>
        public string IfMatch { get; set; }
        /// <summary> The filter to apply on the operation. </summary>
        public string Filter { get; set; }
        /// <summary> The top. </summary>
        public int? Top { get; set; }
        /// <summary> Optional. Number of records to skip. </summary>
        public int? Skip { get; set; }
        /// <summary> The items to query on the bar resource. </summary>
        public IList<string> Items { get; }
    }
}
