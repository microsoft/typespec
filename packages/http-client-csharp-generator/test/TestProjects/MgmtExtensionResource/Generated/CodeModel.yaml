!CodeModel 
info: !Info 
  description: To manage and control access to your resources, you can define customized policies and assign them at a scope.
  title: PolicyClient
schemas: !Schemas 
  booleans:
    - !BooleanSchema &ref_8
      type: boolean
      language: !Languages 
        default:
          name: Boolean
          description: Domain availability (True/False).
      protocol: !Protocols {}
    - !BooleanSchema &ref_7
      type: boolean
      language: !Languages 
        default:
          name: Boolean
          description: >-
            Set to true to have Azure portal create role assignments on the resource ID or resource scope value of this parameter during policy assignment. This property is useful in case you wish to assign permissions outside the
            assignment scope.
      protocol: !Protocols {}
  numbers:
    - !NumberSchema &ref_59
      type: integer
      apiVersions:
        - !ApiVersion 
          version: '2020-09-01'
      maximum: 1000
      minimum: 1
      precision: 32
      language: !Languages 
        default:
          name: Integer
          description: ''
      protocol: !Protocols {}
  strings:
    - !StringSchema &ref_0
      type: string
      language: !Languages 
        default:
          name: String
          description: simple string
      protocol: !Protocols {}
    - !StringSchema &ref_30
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-09-01'
      language: !Languages 
        default:
          name: String
          description: ''
      protocol: !Protocols {}
    - !StringSchema &ref_9
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-09-01'
      language: !Languages 
        default:
          name: ErrorResponseError
          description: The details of the error.
      protocol: !Protocols {}
    - !StringSchema &ref_11
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-09-01'
      language: !Languages 
        default:
          name: SubSingletonSomething
          description: The something.
      protocol: !Protocols {}
    - !StringSchema &ref_12
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-09-01'
      language: !Languages 
        default:
          name: SubSingletonId
          description: The ID of the policy definition.
      protocol: !Protocols {}
    - !StringSchema &ref_13
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-09-01'
      language: !Languages 
        default:
          name: SubSingletonName
          description: The name of the policy definition.
      protocol: !Protocols {}
    - !StringSchema &ref_14
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-09-01'
      language: !Languages 
        default:
          name: SubSingletonType
          description: The type of the resource (Microsoft.Authorization/policyDefinitions).
      protocol: !Protocols {}
    - !StringSchema &ref_15
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-09-01'
      language: !Languages 
        default:
          name: ValidateSomethingOptionsSomething
          description: The something to validate.
      protocol: !Protocols {}
    - !StringSchema &ref_20
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-09-01'
      defaultValue: Indexed
      language: !Languages 
        default:
          name: PolicyDefinitionPropertiesMode
          description: The policy definition mode. Some examples are All, Indexed, Microsoft.KeyVault.Data.
      protocol: !Protocols {}
    - !StringSchema &ref_21
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-09-01'
      language: !Languages 
        default:
          name: PolicyDefinitionPropertiesDisplayName
          description: The display name of the policy definition.
      protocol: !Protocols {}
    - !StringSchema &ref_22
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-09-01'
      language: !Languages 
        default:
          name: PolicyDefinitionPropertiesDescription
          description: The policy definition description.
      protocol: !Protocols {}
    - !StringSchema &ref_4
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-09-01'
      language: !Languages 
        default:
          name: ParameterDefinitionsValueMetadataDisplayName
          description: The display name for the parameter.
      protocol: !Protocols {}
    - !StringSchema &ref_5
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-09-01'
      language: !Languages 
        default:
          name: ParameterDefinitionsValueMetadataDescription
          description: The description of the parameter.
      protocol: !Protocols {}
    - !StringSchema &ref_6
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-09-01'
      language: !Languages 
        default:
          name: ParameterDefinitionsValueMetadataStrongType
          description: Used when assigning the policy definition through the portal. Provides a context aware list of values for the user to choose from.
      protocol: !Protocols {}
    - !StringSchema &ref_16
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-09-01'
      language: !Languages 
        default:
          name: PolicyDefinitionId
          description: The ID of the policy definition.
      protocol: !Protocols {}
    - !StringSchema &ref_17
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-09-01'
      language: !Languages 
        default:
          name: PolicyDefinitionName
          description: The name of the policy definition.
      protocol: !Protocols {}
    - !StringSchema &ref_18
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-09-01'
      language: !Languages 
        default:
          name: PolicyDefinitionType
          description: The type of the resource (Microsoft.Authorization/policyDefinitions).
      protocol: !Protocols {}
    - !StringSchema &ref_27
      type: string
      apiVersions:
        - !ApiVersion 
          version: '2020-09-01'
      language: !Languages 
        default:
          name: PolicyDefinitionListResultNextLink
          description: The URL to use for getting the next set of results.
      protocol: !Protocols {}
  choices:
    - !ChoiceSchema &ref_19
      choices:
        - !ChoiceValue 
          value: NotSpecified
          language:
            default:
              name: NotSpecified
              description: ''
        - !ChoiceValue 
          value: BuiltIn
          language:
            default:
              name: BuiltIn
              description: ''
        - !ChoiceValue 
          value: Custom
          language:
            default:
              name: Custom
              description: ''
        - !ChoiceValue 
          value: Static
          language:
            default:
              name: Static
              description: ''
      type: choice
      apiVersions:
        - !ApiVersion 
          version: '2020-09-01'
      choiceType: *ref_0
      language: !Languages 
        default:
          name: PolicyType
          description: The type of policy definition. Possible values are NotSpecified, BuiltIn, Custom, and Static.
      protocol: !Protocols {}
    - !ChoiceSchema &ref_1
      choices:
        - !ChoiceValue 
          value: String
          language:
            default:
              name: String
              description: ''
        - !ChoiceValue 
          value: Array
          language:
            default:
              name: Array
              description: ''
        - !ChoiceValue 
          value: Object
          language:
            default:
              name: Object
              description: ''
        - !ChoiceValue 
          value: Boolean
          language:
            default:
              name: Boolean
              description: ''
        - !ChoiceValue 
          value: Integer
          language:
            default:
              name: Integer
              description: ''
        - !ChoiceValue 
          value: Float
          language:
            default:
              name: Float
              description: ''
        - !ChoiceValue 
          value: DateTime
          language:
            default:
              name: DateTime
              description: ''
      type: choice
      apiVersions:
        - !ApiVersion 
          version: '2020-09-01'
      choiceType: *ref_0
      language: !Languages 
        default:
          name: ParameterType
          description: The data type of the parameter.
      protocol: !Protocols {}
  constants:
    - !ConstantSchema &ref_31
      type: constant
      value: !ConstantValue 
        value: '2020-09-01'
      valueType: *ref_0
      language: !Languages 
        default:
          name: ApiVersion20200901
          description: Api Version (2020-09-01)
      protocol: !Protocols {}
    - !ConstantSchema &ref_35
      type: constant
      value: !ConstantValue 
        value: application/json
      valueType: *ref_0
      language: !Languages 
        default:
          name: Accept
          description: 'Accept: application/json'
      protocol: !Protocols {}
    - !ConstantSchema &ref_41
      type: constant
      value: !ConstantValue 
        value: application/json
      valueType: *ref_0
      language: !Languages 
        default:
          name: ApplicationJson
          description: Content Type 'application/json'
      protocol: !Protocols {}
  dictionaries:
    - !DictionarySchema &ref_3
      type: dictionary
      elementType: !AnyObjectSchema &ref_2
        type: any-object
        language: !Languages 
          default:
            name: AnyObject
            description: Any object
        protocol: !Protocols {}
      language: !Languages 
        default:
          name: ParameterDefinitionsValueMetadata
          description: General metadata for the parameter.
      protocol: !Protocols {}
    - !DictionarySchema &ref_23
      type: dictionary
      elementType: !ObjectSchema &ref_24
        type: object
        apiVersions:
          - !ApiVersion 
            version: '2020-09-01'
        properties:
          - !Property 
            schema: *ref_1
            serializedName: type
            language: !Languages 
              default:
                name: type
                description: The data type of the parameter.
            protocol: !Protocols {}
          - !Property 
            schema: !ArraySchema &ref_28
              type: array
              apiVersions:
                - !ApiVersion 
                  version: '2020-09-01'
              elementType: *ref_2
              language: !Languages 
                default:
                  name: ParameterDefinitionsValueAllowedValues
                  description: The allowed values for the parameter.
              protocol: !Protocols {}
            serializedName: allowedValues
            language: !Languages 
              default:
                name: allowedValues
                description: The allowed values for the parameter.
            protocol: !Protocols {}
          - !Property 
            schema: *ref_2
            serializedName: defaultValue
            language: !Languages 
              default:
                name: defaultValue
                description: The default value for the parameter if no value is provided.
            protocol: !Protocols {}
          - !Property 
            schema: !ObjectSchema &ref_25
              type: object
              apiVersions:
                - !ApiVersion 
                  version: '2020-09-01'
              parents: !Relations 
                all:
                  - *ref_3
                immediate:
                  - *ref_3
              properties:
                - !Property 
                  schema: *ref_4
                  serializedName: displayName
                  language: !Languages 
                    default:
                      name: displayName
                      description: The display name for the parameter.
                  protocol: !Protocols {}
                - !Property 
                  schema: *ref_5
                  serializedName: description
                  language: !Languages 
                    default:
                      name: description
                      description: The description of the parameter.
                  protocol: !Protocols {}
                - !Property 
                  schema: *ref_6
                  serializedName: strongType
                  language: !Languages 
                    default:
                      name: strongType
                      description: Used when assigning the policy definition through the portal. Provides a context aware list of values for the user to choose from.
                  protocol: !Protocols {}
                - !Property 
                  schema: *ref_7
                  serializedName: assignPermissions
                  language: !Languages 
                    default:
                      name: assignPermissions
                      description: >-
                        Set to true to have Azure portal create role assignments on the resource ID or resource scope value of this parameter during policy assignment. This property is useful in case you wish to assign permissions outside
                        the assignment scope.
                  protocol: !Protocols {}
              serializationFormats:
                - json
              usage:
                - input
                - output
              language: !Languages 
                default:
                  name: ParameterDefinitionsValueMetadata
                  description: General metadata for the parameter.
                  namespace: ''
              protocol: !Protocols {}
            serializedName: metadata
            language: !Languages 
              default:
                name: metadata
                description: General metadata for the parameter.
            protocol: !Protocols {}
        serializationFormats:
          - json
        usage:
          - input
          - output
        language: !Languages 
          default:
            name: ParameterDefinitionsValue
            description: The definition of a parameter that can be provided to the policy.
            namespace: ''
        protocol: !Protocols {}
      language: !Languages 
        default:
          name: ParameterDefinitions
          description: The parameter definitions for parameters used in the policy. The keys are the parameter names.
      protocol: !Protocols {}
  anyObjects:
    - *ref_2
  objects:
    - !ObjectSchema &ref_38
      type: object
      apiVersions:
        - !ApiVersion 
          version: '2020-09-01'
      properties:
        - !Property 
          schema: *ref_8
          serializedName: available
          language: !Languages 
            default:
              name: available
              description: Domain availability (True/False).
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - output
      language: !Languages 
        default:
          name: DnsNameAvailabilityResult
          description: Response for the CheckDnsNameAvailability API service call.
          namespace: ''
      protocol: !Protocols {}
    - !ObjectSchema &ref_39
      type: object
      apiVersions:
        - !ApiVersion 
          version: '2020-09-01'
      properties:
        - !Property 
          schema: !ObjectSchema &ref_10
            type: object
            apiVersions:
              - !ApiVersion 
                version: '2020-09-01'
            properties:
              - !Property 
                schema: *ref_9
                serializedName: error
                language: !Languages 
                  default:
                    name: error
                    description: The details of the error.
                protocol: !Protocols {}
            serializationFormats:
              - json
            usage:
              - exception
            language: !Languages 
              default:
                name: ErrorResponse
                description: Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message.
                namespace: ''
            protocol: !Protocols {}
          serializedName: error
          language: !Languages 
            default:
              name: error
              description: Error response indicates that the service is not able to process the incoming request. The reason is provided in the error message.
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - exception
      extensions:
        x-ms-external: true
      language: !Languages 
        default:
          name: CloudError
          description: An error response from a policy operation.
          namespace: ''
      protocol: !Protocols {}
    - *ref_10
    - !ObjectSchema &ref_40
      type: object
      apiVersions:
        - !ApiVersion 
          version: '2020-09-01'
      properties:
        - !Property 
          schema: *ref_11
          serializedName: something
          language: !Languages 
            default:
              name: something
              description: The something.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_12
          readOnly: true
          serializedName: id
          language: !Languages 
            default:
              name: id
              description: The ID of the policy definition.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_13
          readOnly: true
          serializedName: name
          language: !Languages 
            default:
              name: name
              description: The name of the policy definition.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_14
          readOnly: true
          serializedName: type
          language: !Languages 
            default:
              name: type
              description: The type of the resource (Microsoft.Authorization/policyDefinitions).
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - output
      language: !Languages 
        default:
          name: SubSingleton
          description: SubSingleton object.
          namespace: ''
      protocol: !Protocols {}
    - !ObjectSchema &ref_42
      type: object
      apiVersions:
        - !ApiVersion 
          version: '2020-09-01'
      properties:
        - !Property 
          schema: *ref_15
          serializedName: something
          language: !Languages 
            default:
              name: something
              description: The something to validate.
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - input
      language: !Languages 
        default:
          name: ValidateSomethingOptions
          description: Validate something options.
          namespace: ''
      protocol: !Protocols {}
    - !ObjectSchema &ref_26
      type: object
      apiVersions:
        - !ApiVersion 
          version: '2020-09-01'
      properties:
        - !Property 
          schema: *ref_16
          readOnly: true
          serializedName: id
          language: !Languages 
            default:
              name: id
              description: The ID of the policy definition.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_17
          readOnly: true
          serializedName: name
          language: !Languages 
            default:
              name: name
              description: The name of the policy definition.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_18
          readOnly: true
          serializedName: type
          language: !Languages 
            default:
              name: type
              description: The type of the resource (Microsoft.Authorization/policyDefinitions).
          protocol: !Protocols {}
        - !Property 
          schema: *ref_19
          flattenedNames:
            - properties
            - policyType
          serializedName: policyType
          language: !Languages 
            default:
              name: policyType
              description: The type of policy definition. Possible values are NotSpecified, BuiltIn, Custom, and Static.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_20
          flattenedNames:
            - properties
            - mode
          serializedName: mode
          language: !Languages 
            default:
              name: mode
              description: The policy definition mode. Some examples are All, Indexed, Microsoft.KeyVault.Data.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_21
          flattenedNames:
            - properties
            - displayName
          serializedName: displayName
          language: !Languages 
            default:
              name: displayName
              description: The display name of the policy definition.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_22
          flattenedNames:
            - properties
            - description
          serializedName: description
          language: !Languages 
            default:
              name: description
              description: The policy definition description.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_2
          flattenedNames:
            - properties
            - policyRule
          serializedName: policyRule
          language: !Languages 
            default:
              name: policyRule
              description: The policy rule.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_2
          flattenedNames:
            - properties
            - metadata
          serializedName: metadata
          language: !Languages 
            default:
              name: metadata
              description: The policy definition metadata.  Metadata is an open ended object and is typically a collection of key value pairs.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_23
          flattenedNames:
            - properties
            - parameters
          serializedName: parameters
          language: !Languages 
            default:
              name: parameters
              description: The parameter definitions for parameters used in the policy rule. The keys are the parameter names.
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - input
        - output
      extensions:
        x-ms-azure-resource: true
      language: !Languages 
        default:
          name: PolicyDefinition
          description: The policy definition.
          namespace: ''
      protocol: !Protocols {}
    - *ref_24
    - *ref_25
    - !ObjectSchema &ref_62
      type: object
      apiVersions:
        - !ApiVersion 
          version: '2020-09-01'
      properties:
        - !Property 
          schema: !ArraySchema &ref_29
            type: array
            apiVersions:
              - !ApiVersion 
                version: '2020-09-01'
            elementType: *ref_26
            language: !Languages 
              default:
                name: PolicyDefinitionListResultValue
                description: An array of policy definitions.
            protocol: !Protocols {}
          serializedName: value
          language: !Languages 
            default:
              name: value
              description: An array of policy definitions.
          protocol: !Protocols {}
        - !Property 
          schema: *ref_27
          serializedName: nextLink
          language: !Languages 
            default:
              name: nextLink
              description: The URL to use for getting the next set of results.
          protocol: !Protocols {}
      serializationFormats:
        - json
      usage:
        - output
      language: !Languages 
        default:
          name: PolicyDefinitionListResult
          description: List of policy definitions.
          namespace: ''
      protocol: !Protocols {}
  arrays:
    - *ref_28
    - *ref_29
globalParameters:
  - !Parameter &ref_34
    schema: *ref_30
    implementation: Client
    required: true
    extensions:
      x-ms-priority: 0
    language: !Languages 
      default:
        name: SubscriptionId
        description: The ID of the target subscription.
        serializedName: subscriptionId
    protocol: !Protocols 
      http: !HttpParameter 
        in: path
  - !Parameter &ref_32
    schema: *ref_0
    clientDefaultValue: https://management.azure.com
    implementation: Client
    origin: modelerfour:synthesized/host
    required: true
    extensions:
      x-ms-skip-url-encoding: true
    language: !Languages 
      default:
        name: $host
        description: server parameter
        serializedName: $host
    protocol: !Protocols 
      http: !HttpParameter 
        in: uri
  - !Parameter &ref_33
    schema: *ref_31
    implementation: Client
    origin: modelerfour:synthesized/api-version
    required: true
    language: !Languages 
      default:
        name: apiVersion
        description: Api Version
        serializedName: api-version
    protocol: !Protocols 
      http: !HttpParameter 
        in: query
operationGroups:
  - !OperationGroup 
    $key: ''
    operations:
      - !Operation 
        operationId: CheckDnsNameAvailability
        apiVersions:
          - !ApiVersion 
            version: '2020-09-01'
        parameters:
          - *ref_32
          - !Parameter &ref_36
            schema: *ref_30
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: location
                description: The location of the domain name.
                serializedName: location
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_37
            schema: *ref_30
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: domainNameLabel
                description: 'The domain name to be verified. It must conform to the following regular expression: ^[a-z][a-z0-9-]{1,61}[a-z0-9]$.'
                serializedName: domainNameLabel
            protocol: !Protocols 
              http: !HttpParameter 
                in: query
          - *ref_33
          - *ref_34
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_35
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/providers/Microsoft.Network/locations/{location}/CheckDnsNameAvailability
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_36
          - *ref_37
        responses:
          - !SchemaResponse 
            schema: *ref_38
            language: !Languages 
              default:
                name: ''
                description: Request successful. Returns whether the DNS name is available.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_39
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: CheckDnsNameAvailability
            description: Checks whether a domain name in the cloudapp.azure.com zone is available for use.
        protocol: !Protocols {}
    language: !Languages 
      default:
        name: ''
        description: ''
    protocol: !Protocols {}
  - !OperationGroup 
    $key: SubSingletons
    operations:
      - !Operation 
        operationId: SubSingletons_Get
        apiVersions:
          - !ApiVersion 
            version: '2020-09-01'
        parameters:
          - *ref_32
          - *ref_34
          - *ref_33
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_35
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/providers/Microsoft.Singleton/subSingletons/default
                method: get
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !SchemaResponse 
            schema: *ref_40
            language: !Languages 
              default:
                name: ''
                description: The singleton object
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_39
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: Get
            description: Singleton that belongs to a subscription.
            summary: Singleton that belongs to a subscription.
        protocol: !Protocols {}
      - !Operation 
        operationId: SubSingletons_Execute
        apiVersions:
          - !ApiVersion 
            version: '2020-09-01'
        parameters:
          - *ref_32
          - *ref_34
          - *ref_33
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_35
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/providers/Microsoft.Singleton/subSingletons/default/execute
                method: post
                uri: '{$host}'
        signatureParameters: []
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: No Content
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '204'
        exceptions:
          - !SchemaResponse 
            schema: *ref_39
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: Execute
            description: Singleton that belongs to a subscription.
            summary: Singleton that belongs to a subscription.
        protocol: !Protocols {}
    language: !Languages 
      default:
        name: SubSingletons
        description: ''
    protocol: !Protocols {}
  - !OperationGroup 
    $key: OrphanedPost
    operations:
      - !Operation 
        operationId: OrphanedPost_ValidateSomething
        apiVersions:
          - !ApiVersion 
            version: '2020-09-01'
        parameters:
          - *ref_32
          - *ref_34
          - *ref_33
        requestMediaTypes:
          application/json: !Request &ref_44
            parameters:
              - !Parameter 
                schema: *ref_41
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_43
                schema: *ref_42
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: validateSomethingOptions
                    description: Information to validate.
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_35
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_43
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /subscriptions/{subscriptionId}/providers/Microsoft.OrphanedPost/validateSomething
                method: post
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        requests:
          - *ref_44
        signatureParameters: []
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: No Content
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '204'
        exceptions:
          - !SchemaResponse 
            schema: *ref_39
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        language: !Languages 
          default:
            name: ValidateSomething
            description: Description for Validate information for a certificate order.
            summary: Validate information for a certificate order.
        protocol: !Protocols {}
    language: !Languages 
      default:
        name: OrphanedPost
        description: ''
    protocol: !Protocols {}
  - !OperationGroup 
    $key: PolicyDefinitions
    operations:
      - !Operation 
        operationId: PolicyDefinitions_CreateOrUpdate
        apiVersions:
          - !ApiVersion 
            version: '2020-09-01'
        parameters:
          - *ref_32
          - !Parameter &ref_47
            schema: *ref_30
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: policyDefinitionName
                description: The name of the policy definition to create.
                serializedName: policyDefinitionName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_33
          - *ref_34
        requestMediaTypes:
          application/json: !Request &ref_46
            parameters:
              - !Parameter 
                schema: *ref_41
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_45
                schema: *ref_26
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: parameters
                    description: The policy definition properties.
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_35
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_45
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionName}
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        requests:
          - *ref_46
        signatureParameters:
          - *ref_47
        responses:
          - !SchemaResponse 
            schema: *ref_26
            language: !Languages 
              default:
                name: ''
                description: Created - Returns information about the policy definition.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '201'
        exceptions:
          - !SchemaResponse 
            schema: *ref_39
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            Create or update a policy definition:
              $ref: ./examples/createOrUpdatePolicyDefinition.json
            Create or update a policy definition with advanced parameters:
              $ref: ./examples/createOrUpdatePolicyDefinitionAdvancedParams.json
        language: !Languages 
          default:
            name: CreateOrUpdate
            description: This operation creates or updates a policy definition in the given subscription with the given name.
            summary: Creates or updates a policy definition in a subscription.
        protocol: !Protocols {}
      - !Operation 
        operationId: PolicyDefinitions_Delete
        apiVersions:
          - !ApiVersion 
            version: '2020-09-01'
        parameters:
          - *ref_32
          - !Parameter &ref_48
            schema: *ref_30
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: policyDefinitionName
                description: The name of the policy definition to delete.
                serializedName: policyDefinitionName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_33
          - *ref_34
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_35
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionName}
                method: delete
                uri: '{$host}'
        signatureParameters:
          - *ref_48
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: No Content
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '204'
        exceptions:
          - !SchemaResponse 
            schema: *ref_39
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            Delete a policy definition:
              $ref: ./examples/deletePolicyDefinition.json
        language: !Languages 
          default:
            name: Delete
            description: This operation deletes the policy definition in the given subscription with the given name.
            summary: Deletes a policy definition in a subscription.
        protocol: !Protocols {}
      - !Operation 
        operationId: PolicyDefinitions_Get
        apiVersions:
          - !ApiVersion 
            version: '2020-09-01'
        parameters:
          - *ref_32
          - !Parameter &ref_49
            schema: *ref_30
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: policyDefinitionName
                description: The name of the policy definition to get.
                serializedName: policyDefinitionName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_33
          - *ref_34
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_35
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionName}
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_49
        responses:
          - !SchemaResponse 
            schema: *ref_26
            language: !Languages 
              default:
                name: ''
                description: OK - Returns information about the policy definition.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_39
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            Retrieve a policy definition:
              $ref: ./examples/getPolicyDefinition.json
        language: !Languages 
          default:
            name: Get
            description: This operation retrieves the policy definition in the given subscription with the given name.
            summary: Retrieves a policy definition in a subscription.
        protocol: !Protocols {}
      - !Operation 
        operationId: PolicyDefinitions_GetBuiltIn
        apiVersions:
          - !ApiVersion 
            version: '2020-09-01'
        parameters:
          - *ref_32
          - !Parameter &ref_50
            schema: *ref_30
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: policyDefinitionName
                description: The name of the built-in policy definition to get.
                serializedName: policyDefinitionName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_33
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_35
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionName}
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_50
        responses:
          - !SchemaResponse 
            schema: *ref_26
            language: !Languages 
              default:
                name: ''
                description: OK - Returns information about the built-in policy definition.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_39
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            Retrieve a built-in policy definition:
              $ref: ./examples/getBuiltinPolicyDefinition.json
        language: !Languages 
          default:
            name: GetBuiltIn
            description: This operation retrieves the built-in policy definition with the given name.
            summary: Retrieves a built-in policy definition.
        protocol: !Protocols {}
      - !Operation 
        operationId: PolicyDefinitions_CreateOrUpdateAtManagementGroup
        apiVersions:
          - !ApiVersion 
            version: '2020-09-01'
        parameters:
          - *ref_32
          - !Parameter &ref_53
            schema: *ref_30
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: policyDefinitionName
                description: The name of the policy definition to create.
                serializedName: policyDefinitionName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_33
          - !Parameter &ref_54
            schema: *ref_30
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: managementGroupId
                description: The ID of the management group.
                serializedName: managementGroupId
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
        requestMediaTypes:
          application/json: !Request &ref_52
            parameters:
              - !Parameter 
                schema: *ref_41
                implementation: Method
                origin: modelerfour:synthesized/content-type
                required: true
                language: !Languages 
                  default:
                    name: contentType
                    description: Body Parameter content-type
                    serializedName: Content-Type
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
              - !Parameter &ref_51
                schema: *ref_26
                implementation: Method
                required: true
                language: !Languages 
                  default:
                    name: parameters
                    description: The policy definition properties.
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: body
                    style: json
              - !Parameter 
                schema: *ref_35
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters:
              - *ref_51
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpWithBodyRequest 
                path: /providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionName}
                method: put
                knownMediaType: json
                mediaTypes:
                  - application/json
                uri: '{$host}'
        requests:
          - *ref_52
        signatureParameters:
          - *ref_53
          - *ref_54
        responses:
          - !SchemaResponse 
            schema: *ref_26
            language: !Languages 
              default:
                name: ''
                description: Created - Returns information about the policy definition.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '201'
        exceptions:
          - !SchemaResponse 
            schema: *ref_39
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            Create or update a policy definition at management group level:
              $ref: ./examples/createOrUpdatePolicyDefinitionAtManagementGroup.json
        language: !Languages 
          default:
            name: CreateOrUpdateAtManagementGroup
            description: This operation creates or updates a policy definition in the given management group with the given name.
            summary: Creates or updates a policy definition in a management group.
        protocol: !Protocols {}
      - !Operation 
        operationId: PolicyDefinitions_DeleteAtManagementGroup
        apiVersions:
          - !ApiVersion 
            version: '2020-09-01'
        parameters:
          - *ref_32
          - !Parameter &ref_55
            schema: *ref_30
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: policyDefinitionName
                description: The name of the policy definition to delete.
                serializedName: policyDefinitionName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_33
          - !Parameter &ref_56
            schema: *ref_30
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: managementGroupId
                description: The ID of the management group.
                serializedName: managementGroupId
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_35
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionName}
                method: delete
                uri: '{$host}'
        signatureParameters:
          - *ref_55
          - *ref_56
        responses:
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: OK
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '200'
          - !Response 
            language: !Languages 
              default:
                name: ''
                description: No Content
            protocol: !Protocols 
              http: !HttpResponse 
                statusCodes:
                  - '204'
        exceptions:
          - !SchemaResponse 
            schema: *ref_39
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            Delete a policy definition at management group level:
              $ref: ./examples/deletePolicyDefinitionAtManagementGroup.json
        language: !Languages 
          default:
            name: DeleteAtManagementGroup
            description: This operation deletes the policy definition in the given management group with the given name.
            summary: Deletes a policy definition in a management group.
        protocol: !Protocols {}
      - !Operation 
        operationId: PolicyDefinitions_GetAtManagementGroup
        apiVersions:
          - !ApiVersion 
            version: '2020-09-01'
        parameters:
          - *ref_32
          - !Parameter &ref_57
            schema: *ref_30
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: policyDefinitionName
                description: The name of the policy definition to get.
                serializedName: policyDefinitionName
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - *ref_33
          - !Parameter &ref_58
            schema: *ref_30
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: managementGroupId
                description: The ID of the management group.
                serializedName: managementGroupId
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_35
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Authorization/policyDefinitions/{policyDefinitionName}
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_57
          - *ref_58
        responses:
          - !SchemaResponse 
            schema: *ref_26
            language: !Languages 
              default:
                name: ''
                description: OK - Returns information about the policy definition.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_39
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            Retrieve a policy definition at management group level:
              $ref: ./examples/getPolicyDefinitionAtManagementGroup.json
        language: !Languages 
          default:
            name: GetAtManagementGroup
            description: This operation retrieves the policy definition in the given management group with the given name.
            summary: Retrieve a policy definition in a management group.
        protocol: !Protocols {}
      - !Operation 
        operationId: PolicyDefinitions_List
        apiVersions:
          - !ApiVersion 
            version: '2020-09-01'
        parameters:
          - *ref_32
          - *ref_33
          - *ref_34
          - !Parameter &ref_60
            schema: *ref_30
            implementation: Method
            extensions:
              x-ms-skip-url-encoding: true
            language: !Languages 
              default:
                name: filter
                description: >-
                  The filter to apply on the operation. Valid values for $filter are: 'atExactScope()', 'policyType -eq {value}' or 'category eq '{value}''. If $filter is not provided, no filtering is performed. If $filter=atExactScope() is
                  provided, the returned list only includes all policy definitions that at the given scope. If $filter='policyType -eq {value}' is provided, the returned list only includes all policy definitions whose type match the
                  {value}. Possible policyType values are NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq {value}' is provided, the returned list only includes all policy definitions whose category match the {value}.
                serializedName: $filter
            protocol: !Protocols 
              http: !HttpParameter 
                in: query
          - !Parameter &ref_61
            schema: *ref_59
            implementation: Method
            language: !Languages 
              default:
                name: top
                description: Maximum number of records to return. When the $top filter is not provided, it will return 500 records.
                serializedName: $top
            protocol: !Protocols 
              http: !HttpParameter 
                in: query
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_35
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /subscriptions/{subscriptionId}/providers/Microsoft.Authorization/policyDefinitions
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_60
          - *ref_61
        responses:
          - !SchemaResponse 
            schema: *ref_62
            language: !Languages 
              default:
                name: ''
                description: OK - Returns an array of policy definitions.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_39
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            List policy definitions by subscription:
              $ref: ./examples/listPolicyDefinitions.json
          x-ms-pageable:
            nextLinkName: nextLink
        language: !Languages 
          default:
            name: List
            description: >-
              This operation retrieves a list of all the policy definitions in a given subscription that match the optional given $filter. Valid values for $filter are: 'atExactScope()', 'policyType -eq {value}' or 'category eq '{value}''.
              If $filter is not provided, the unfiltered list includes all policy definitions associated with the subscription, including those that apply directly or from management groups that contain the given subscription. If
              $filter=atExactScope() is provided, the returned list only includes all policy definitions that at the given subscription. If $filter='policyType -eq {value}' is provided, the returned list only includes all policy definitions
              whose type match the {value}. Possible policyType values are NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq {value}' is provided, the returned list only includes all policy definitions whose category match
              the {value}.
            paging:
              nextLinkName: nextLink
            summary: Retrieves policy definitions in a subscription
        protocol: !Protocols {}
      - !Operation 
        operationId: PolicyDefinitions_ListBuiltIn
        apiVersions:
          - !ApiVersion 
            version: '2020-09-01'
        parameters:
          - *ref_32
          - *ref_33
          - !Parameter &ref_63
            schema: *ref_30
            implementation: Method
            extensions:
              x-ms-skip-url-encoding: true
            language: !Languages 
              default:
                name: filter
                description: >-
                  The filter to apply on the operation. Valid values for $filter are: 'atExactScope()', 'policyType -eq {value}' or 'category eq '{value}''. If $filter is not provided, no filtering is performed. If $filter=atExactScope() is
                  provided, the returned list only includes all policy definitions that at the given scope. If $filter='policyType -eq {value}' is provided, the returned list only includes all policy definitions whose type match the
                  {value}. Possible policyType values are NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq {value}' is provided, the returned list only includes all policy definitions whose category match the {value}.
                serializedName: $filter
            protocol: !Protocols 
              http: !HttpParameter 
                in: query
          - !Parameter &ref_64
            schema: *ref_59
            implementation: Method
            language: !Languages 
              default:
                name: top
                description: Maximum number of records to return. When the $top filter is not provided, it will return 500 records.
                serializedName: $top
            protocol: !Protocols 
              http: !HttpParameter 
                in: query
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_35
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /providers/Microsoft.Authorization/policyDefinitions
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_63
          - *ref_64
        responses:
          - !SchemaResponse 
            schema: *ref_62
            language: !Languages 
              default:
                name: ''
                description: OK - Returns an array of built-in policy definitions.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_39
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            List built-in policy definitions:
              $ref: ./examples/listBuiltInPolicyDefinitions.json
          x-ms-pageable:
            nextLinkName: nextLink
        language: !Languages 
          default:
            name: ListBuiltIn
            description: >-
              This operation retrieves a list of all the built-in policy definitions that match the optional given $filter. If $filter='policyType -eq {value}' is provided, the returned list only includes all built-in policy definitions
              whose type match the {value}. Possible policyType values are NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq {value}' is provided, the returned list only includes all built-in policy definitions whose
              category match the {value}.
            paging:
              nextLinkName: nextLink
            summary: Retrieve built-in policy definitions
        protocol: !Protocols {}
      - !Operation 
        operationId: PolicyDefinitions_ListByManagementGroup
        apiVersions:
          - !ApiVersion 
            version: '2020-09-01'
        parameters:
          - *ref_32
          - *ref_33
          - !Parameter &ref_65
            schema: *ref_30
            implementation: Method
            required: true
            language: !Languages 
              default:
                name: managementGroupId
                description: The ID of the management group.
                serializedName: managementGroupId
            protocol: !Protocols 
              http: !HttpParameter 
                in: path
          - !Parameter &ref_66
            schema: *ref_30
            implementation: Method
            extensions:
              x-ms-skip-url-encoding: true
            language: !Languages 
              default:
                name: filter
                description: >-
                  The filter to apply on the operation. Valid values for $filter are: 'atExactScope()', 'policyType -eq {value}' or 'category eq '{value}''. If $filter is not provided, no filtering is performed. If $filter=atExactScope() is
                  provided, the returned list only includes all policy definitions that at the given scope. If $filter='policyType -eq {value}' is provided, the returned list only includes all policy definitions whose type match the
                  {value}. Possible policyType values are NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq {value}' is provided, the returned list only includes all policy definitions whose category match the {value}.
                serializedName: $filter
            protocol: !Protocols 
              http: !HttpParameter 
                in: query
          - !Parameter &ref_67
            schema: *ref_59
            implementation: Method
            language: !Languages 
              default:
                name: top
                description: Maximum number of records to return. When the $top filter is not provided, it will return 500 records.
                serializedName: $top
            protocol: !Protocols 
              http: !HttpParameter 
                in: query
        requests:
          - !Request 
            parameters:
              - !Parameter 
                schema: *ref_35
                implementation: Method
                origin: modelerfour:synthesized/accept
                required: true
                language: !Languages 
                  default:
                    name: accept
                    description: Accept header
                    serializedName: Accept
                protocol: !Protocols 
                  http: !HttpParameter 
                    in: header
            signatureParameters: []
            language: !Languages 
              default:
                name: ''
                description: ''
            protocol: !Protocols 
              http: !HttpRequest 
                path: /providers/Microsoft.Management/managementGroups/{managementGroupId}/providers/Microsoft.Authorization/policyDefinitions
                method: get
                uri: '{$host}'
        signatureParameters:
          - *ref_65
          - *ref_66
          - *ref_67
        responses:
          - !SchemaResponse 
            schema: *ref_62
            language: !Languages 
              default:
                name: ''
                description: OK - Returns an array of policy definitions.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - '200'
        exceptions:
          - !SchemaResponse 
            schema: *ref_39
            language: !Languages 
              default:
                name: ''
                description: Error response describing why the operation failed.
            protocol: !Protocols 
              http: !HttpResponse 
                knownMediaType: json
                mediaTypes:
                  - application/json
                statusCodes:
                  - default
        extensions:
          x-ms-examples:
            List policy definitions by management group:
              $ref: ./examples/listPolicyDefinitionsByManagementGroup.json
          x-ms-pageable:
            nextLinkName: nextLink
        language: !Languages 
          default:
            name: ListByManagementGroup
            description: >-
              This operation retrieves a list of all the policy definitions in a given management group that match the optional given $filter. Valid values for $filter are: 'atExactScope()', 'policyType -eq {value}' or 'category eq
              '{value}''. If $filter is not provided, the unfiltered list includes all policy definitions associated with the management group, including those that apply directly or from management groups that contain the given management
              group. If $filter=atExactScope() is provided, the returned list only includes all policy definitions that at the given management group. If $filter='policyType -eq {value}' is provided, the returned list only includes all
              policy definitions whose type match the {value}. Possible policyType values are NotSpecified, BuiltIn, Custom, and Static. If $filter='category -eq {value}' is provided, the returned list only includes all policy definitions
              whose category match the {value}.
            paging:
              nextLinkName: nextLink
            summary: Retrieve policy definitions in a management group
        protocol: !Protocols {}
    language: !Languages 
      default:
        name: PolicyDefinitions
        description: ''
    protocol: !Protocols {}
security: !Security 
  authenticationRequired: true
  schemes:
    - !OAuth2SecurityScheme 
      type: OAuth2
      scopes:
        - https://management.azure.com/.default
language: !Languages 
  default:
    name: PolicyClient
    description: ''
protocol: !Protocols 
  http: !HttpModel {}
