<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="CreateAsync(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BodyAndPathClient client = new BodyAndPathClient(credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.CreateAsync("<itemName>", content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CreateAsync with all parameters and request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BodyAndPathClient client = new BodyAndPathClient(credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.CreateAsync("<itemName>", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Create(string,RequestContent,RequestContext)">
      <example>
This sample shows how to call Create.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BodyAndPathClient client = new BodyAndPathClient(credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.Create("<itemName>", content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call Create with all parameters and request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BodyAndPathClient client = new BodyAndPathClient(credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.Create("<itemName>", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="CreateStreamAsync(string,RequestContent,ContentType,IEnumerable{string},RequestContext)">
      <example>
This sample shows how to call CreateStreamAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BodyAndPathClient client = new BodyAndPathClient(credential);

using RequestContent content = RequestContent.Create(File.OpenRead("<filePath>"));
Response response = await client.CreateStreamAsync("<itemNameStream>", content, new ContentType("application/json"));

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CreateStreamAsync with all parameters and request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BodyAndPathClient client = new BodyAndPathClient(credential);

using RequestContent content = RequestContent.Create(File.OpenRead("<filePath>"));
Response response = await client.CreateStreamAsync("<itemNameStream>", content, new ContentType("application/json"), excluded: new string[] { "<excluded>" });

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="CreateStream(string,RequestContent,ContentType,IEnumerable{string},RequestContext)">
      <example>
This sample shows how to call CreateStream.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BodyAndPathClient client = new BodyAndPathClient(credential);

using RequestContent content = RequestContent.Create(File.OpenRead("<filePath>"));
Response response = client.CreateStream("<itemNameStream>", content, new ContentType("application/json"));

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CreateStream with all parameters and request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BodyAndPathClient client = new BodyAndPathClient(credential);

using RequestContent content = RequestContent.Create(File.OpenRead("<filePath>"));
Response response = client.CreateStream("<itemNameStream>", content, new ContentType("application/json"), excluded: new string[] { "<excluded>" });

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="CreateEnumAsync(string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateEnumAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BodyAndPathClient client = new BodyAndPathClient(credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.CreateEnumAsync("current", "latest", content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CreateEnumAsync with all parameters and request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BodyAndPathClient client = new BodyAndPathClient(credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.CreateEnumAsync("current", "latest", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="CreateEnum(string,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call CreateEnum.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BodyAndPathClient client = new BodyAndPathClient(credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.CreateEnum("current", "latest", content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call CreateEnum with all parameters and request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BodyAndPathClient client = new BodyAndPathClient(credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.CreateEnum("current", "latest", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="GetBodyAndPathsAsync(RequestContext)">
      <example>
This sample shows how to call GetBodyAndPathsAsync and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BodyAndPathClient client = new BodyAndPathClient(credential);

Response response = await client.GetBodyAndPathsAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
This sample shows how to call GetBodyAndPathsAsync with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BodyAndPathClient client = new BodyAndPathClient(credential);

Response response = await client.GetBodyAndPathsAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetBodyAndPaths(RequestContext)">
      <example>
This sample shows how to call GetBodyAndPaths and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BodyAndPathClient client = new BodyAndPathClient(credential);

Response response = client.GetBodyAndPaths(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
This sample shows how to call GetBodyAndPaths with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BodyAndPathClient client = new BodyAndPathClient(credential);

Response response = client.GetBodyAndPaths(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetItemsAsync(RequestContext)">
      <example>
This sample shows how to call GetItemsAsync and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BodyAndPathClient client = new BodyAndPathClient(credential);

Response response = await client.GetItemsAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
This sample shows how to call GetItemsAsync with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BodyAndPathClient client = new BodyAndPathClient(credential);

Response response = await client.GetItemsAsync(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="GetItems(RequestContext)">
      <example>
This sample shows how to call GetItems and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BodyAndPathClient client = new BodyAndPathClient(credential);

Response response = client.GetItems(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code>
This sample shows how to call GetItems with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BodyAndPathClient client = new BodyAndPathClient(credential);

Response response = client.GetItems(null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result[0].ToString());
]]></code></example>
    </member>
    <member name="UpdateAsync(string,string,string,string,RequestContent,string,RequestContext)">
      <example>
This sample shows how to call UpdateAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BodyAndPathClient client = new BodyAndPathClient(credential);

using RequestContent content = RequestContent.Create(new object());
Response response = await client.UpdateAsync("<item3>", "<item2>", "value", "<item4>", content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call UpdateAsync with all parameters and request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BodyAndPathClient client = new BodyAndPathClient(credential);

using RequestContent content = RequestContent.Create(new Dictionary<string, object>
{
    ["invalid-int-name"] = 1234
});
Response response = await client.UpdateAsync("<item3>", "<item2>", "value", "<item4>", content, item5: "<item5>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="Update(string,string,string,string,RequestContent,string,RequestContext)">
      <example>
This sample shows how to call Update.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BodyAndPathClient client = new BodyAndPathClient(credential);

using RequestContent content = RequestContent.Create(new object());
Response response = client.Update("<item3>", "<item2>", "value", "<item4>", content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call Update with all parameters and request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
BodyAndPathClient client = new BodyAndPathClient(credential);

using RequestContent content = RequestContent.Create(new Dictionary<string, object>
{
    ["invalid-int-name"] = 1234
});
Response response = client.Update("<item3>", "<item2>", "value", "<item4>", content, item5: "<item5>");

Console.WriteLine(response.Status);
]]></code></example>
    </member>
  </members>
</doc>