<?xml version="1.0" encoding="utf-8"?>
<doc>
  <members>
    <member name="NoRequestBodyResponseBodyAsync(int,int,int?,string,RequestContext)">
      <example>
This sample shows how to call NoRequestBodyResponseBodyAsync and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ParametersLowlevelClient client = new ParametersLowlevelClient(credential);

Response response = await client.NoRequestBodyResponseBodyAsync(1234, default, null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call NoRequestBodyResponseBodyAsync with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ParametersLowlevelClient client = new ParametersLowlevelClient(credential);

Response response = await client.NoRequestBodyResponseBodyAsync(1234, default, 1234, "start", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="NoRequestBodyResponseBody(int,int,int?,string,RequestContext)">
      <example>
This sample shows how to call NoRequestBodyResponseBody and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ParametersLowlevelClient client = new ParametersLowlevelClient(credential);

Response response = client.NoRequestBodyResponseBody(1234, default, null, null, null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call NoRequestBodyResponseBody with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ParametersLowlevelClient client = new ParametersLowlevelClient(credential);

Response response = client.NoRequestBodyResponseBody(1234, default, 1234, "start", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="RequestBodyResponseBodyAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call RequestBodyResponseBodyAsync and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ParametersLowlevelClient client = new ParametersLowlevelClient(credential);

using RequestContent content = null;
Response response = await client.RequestBodyResponseBodyAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call RequestBodyResponseBodyAsync with all request content and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ParametersLowlevelClient client = new ParametersLowlevelClient(credential);

using RequestContent content = RequestContent.Create(new
{
    Code = "<Code>",
    Status = "<Status>",
});
Response response = await client.RequestBodyResponseBodyAsync(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("Code").ToString());
Console.WriteLine(result.GetProperty("Status").ToString());
]]></code></example>
    </member>
    <member name="RequestBodyResponseBody(RequestContent,RequestContext)">
      <example>
This sample shows how to call RequestBodyResponseBody and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ParametersLowlevelClient client = new ParametersLowlevelClient(credential);

using RequestContent content = null;
Response response = client.RequestBodyResponseBody(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call RequestBodyResponseBody with all request content and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ParametersLowlevelClient client = new ParametersLowlevelClient(credential);

using RequestContent content = RequestContent.Create(new
{
    Code = "<Code>",
    Status = "<Status>",
});
Response response = client.RequestBodyResponseBody(content);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.GetProperty("Code").ToString());
Console.WriteLine(result.GetProperty("Status").ToString());
]]></code></example>
    </member>
    <member name="DeleteNoRequestBodyResponseBodyAsync(string,RequestContext)">
      <example>
This sample shows how to call DeleteNoRequestBodyResponseBodyAsync and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ParametersLowlevelClient client = new ParametersLowlevelClient(credential);

Response response = await client.DeleteNoRequestBodyResponseBodyAsync("<resourceName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call DeleteNoRequestBodyResponseBodyAsync with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ParametersLowlevelClient client = new ParametersLowlevelClient(credential);

Response response = await client.DeleteNoRequestBodyResponseBodyAsync("<resourceName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="DeleteNoRequestBodyResponseBody(string,RequestContext)">
      <example>
This sample shows how to call DeleteNoRequestBodyResponseBody and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ParametersLowlevelClient client = new ParametersLowlevelClient(credential);

Response response = client.DeleteNoRequestBodyResponseBody("<resourceName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code>
This sample shows how to call DeleteNoRequestBodyResponseBody with all parameters and parse the result.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ParametersLowlevelClient client = new ParametersLowlevelClient(credential);

Response response = client.DeleteNoRequestBodyResponseBody("<resourceName>", null);

JsonElement result = JsonDocument.Parse(response.ContentStream).RootElement;
Console.WriteLine(result.ToString());
]]></code></example>
    </member>
    <member name="NoRequestBodyNoResponseBodyAsync(RequestContext)">
      <example>
This sample shows how to call NoRequestBodyNoResponseBodyAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ParametersLowlevelClient client = new ParametersLowlevelClient(credential);

Response response = await client.NoRequestBodyNoResponseBodyAsync();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call NoRequestBodyNoResponseBodyAsync with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ParametersLowlevelClient client = new ParametersLowlevelClient(credential);

Response response = await client.NoRequestBodyNoResponseBodyAsync();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="NoRequestBodyNoResponseBody(RequestContext)">
      <example>
This sample shows how to call NoRequestBodyNoResponseBody.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ParametersLowlevelClient client = new ParametersLowlevelClient(credential);

Response response = client.NoRequestBodyNoResponseBody();

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call NoRequestBodyNoResponseBody with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ParametersLowlevelClient client = new ParametersLowlevelClient(credential);

Response response = client.NoRequestBodyNoResponseBody();

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="RequestBodyNoResponseBodyAsync(RequestContent,RequestContext)">
      <example>
This sample shows how to call RequestBodyNoResponseBodyAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ParametersLowlevelClient client = new ParametersLowlevelClient(credential);

using RequestContent content = null;
Response response = await client.RequestBodyNoResponseBodyAsync(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call RequestBodyNoResponseBodyAsync with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ParametersLowlevelClient client = new ParametersLowlevelClient(credential);

using RequestContent content = RequestContent.Create("<stringBody>");
Response response = await client.RequestBodyNoResponseBodyAsync(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="RequestBodyNoResponseBody(RequestContent,RequestContext)">
      <example>
This sample shows how to call RequestBodyNoResponseBody.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ParametersLowlevelClient client = new ParametersLowlevelClient(credential);

using RequestContent content = null;
Response response = client.RequestBodyNoResponseBody(content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call RequestBodyNoResponseBody with all request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ParametersLowlevelClient client = new ParametersLowlevelClient(credential);

using RequestContent content = RequestContent.Create("<stringBody>");
Response response = client.RequestBodyNoResponseBody(content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="OptionalPathParametersAsync(int,string,int,RequestContext)">
      <example>
This sample shows how to call OptionalPathParametersAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ParametersLowlevelClient client = new ParametersLowlevelClient(credential);

Response response = await client.OptionalPathParametersAsync(1234, "start", 1234);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call OptionalPathParametersAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ParametersLowlevelClient client = new ParametersLowlevelClient(credential);

Response response = await client.OptionalPathParametersAsync(1234, "start", 1234);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="OptionalPathParameters(int,string,int,RequestContext)">
      <example>
This sample shows how to call OptionalPathParameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ParametersLowlevelClient client = new ParametersLowlevelClient(credential);

Response response = client.OptionalPathParameters(1234, "start", 1234);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call OptionalPathParameters with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ParametersLowlevelClient client = new ParametersLowlevelClient(credential);

Response response = client.OptionalPathParameters(1234, "start", 1234);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="OptionalPathParametersWithMixedSequenceAsync(int,string,int,RequestContext)">
      <example>
This sample shows how to call OptionalPathParametersWithMixedSequenceAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ParametersLowlevelClient client = new ParametersLowlevelClient(credential);

Response response = await client.OptionalPathParametersWithMixedSequenceAsync(1234, "start", default);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call OptionalPathParametersWithMixedSequenceAsync with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ParametersLowlevelClient client = new ParametersLowlevelClient(credential);

Response response = await client.OptionalPathParametersWithMixedSequenceAsync(1234, "start", default);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="OptionalPathParametersWithMixedSequence(int,string,int,RequestContext)">
      <example>
This sample shows how to call OptionalPathParametersWithMixedSequence.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ParametersLowlevelClient client = new ParametersLowlevelClient(credential);

Response response = client.OptionalPathParametersWithMixedSequence(1234, "start", default);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call OptionalPathParametersWithMixedSequence with all parameters.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ParametersLowlevelClient client = new ParametersLowlevelClient(credential);

Response response = client.OptionalPathParametersWithMixedSequence(1234, "start", default);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="OptionalPathBodyParametersWithMixedSequenceAsync(int,string,int,int,RequestContent,int?,RequestContext)">
      <example>
This sample shows how to call OptionalPathBodyParametersWithMixedSequenceAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ParametersLowlevelClient client = new ParametersLowlevelClient(credential);

using RequestContent content = null;
Response response = await client.OptionalPathBodyParametersWithMixedSequenceAsync(default, "<name>", 1234, default, content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call OptionalPathBodyParametersWithMixedSequenceAsync with all parameters and request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ParametersLowlevelClient client = new ParametersLowlevelClient(credential);

using RequestContent content = RequestContent.Create(new
{
    Code = "<Code>",
    Status = "<Status>",
});
Response response = await client.OptionalPathBodyParametersWithMixedSequenceAsync(default, "<name>", 1234, default, content, top: 1234);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="OptionalPathBodyParametersWithMixedSequence(int,string,int,int,RequestContent,int?,RequestContext)">
      <example>
This sample shows how to call OptionalPathBodyParametersWithMixedSequence.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ParametersLowlevelClient client = new ParametersLowlevelClient(credential);

using RequestContent content = null;
Response response = client.OptionalPathBodyParametersWithMixedSequence(default, "<name>", 1234, default, content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call OptionalPathBodyParametersWithMixedSequence with all parameters and request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ParametersLowlevelClient client = new ParametersLowlevelClient(credential);

using RequestContent content = RequestContent.Create(new
{
    Code = "<Code>",
    Status = "<Status>",
});
Response response = client.OptionalPathBodyParametersWithMixedSequence(default, "<name>", 1234, default, content, top: 1234);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="RepeatableActionAsync(int,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call RepeatableActionAsync.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ParametersLowlevelClient client = new ParametersLowlevelClient(credential);

using RequestContent content = null;
Response response = await client.RepeatableActionAsync(default, "<name>", content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call RepeatableActionAsync with all parameters and request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ParametersLowlevelClient client = new ParametersLowlevelClient(credential);

using RequestContent content = RequestContent.Create(new
{
    Code = "<Code>",
    Status = "<Status>",
});
Response response = await client.RepeatableActionAsync(default, "<name>", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
    <member name="RepeatableAction(int,string,RequestContent,RequestContext)">
      <example>
This sample shows how to call RepeatableAction.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ParametersLowlevelClient client = new ParametersLowlevelClient(credential);

using RequestContent content = null;
Response response = client.RepeatableAction(default, "<name>", content);

Console.WriteLine(response.Status);
]]></code>
This sample shows how to call RepeatableAction with all parameters and request content.
<code><![CDATA[
AzureKeyCredential credential = new AzureKeyCredential("<key>");
ParametersLowlevelClient client = new ParametersLowlevelClient(credential);

using RequestContent content = RequestContent.Create(new
{
    Code = "<Code>",
    Status = "<Status>",
});
Response response = client.RepeatableAction(default, "<name>", content);

Console.WriteLine(response.Status);
]]></code></example>
    </member>
  </members>
</doc>