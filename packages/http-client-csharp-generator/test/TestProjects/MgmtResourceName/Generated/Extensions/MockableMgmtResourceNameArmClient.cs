// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using Azure.Core;
using Azure.ResourceManager;
using MgmtResourceName;

namespace MgmtResourceName.Mocking
{
    /// <summary> A class to add extension methods to ArmClient. </summary>
    public partial class MockableMgmtResourceNameArmClient : ArmResource
    {
        /// <summary> Initializes a new instance of the <see cref="MockableMgmtResourceNameArmClient"/> class for mocking. </summary>
        protected MockableMgmtResourceNameArmClient()
        {
        }

        /// <summary> Initializes a new instance of the <see cref="MockableMgmtResourceNameArmClient"/> class. </summary>
        /// <param name="client"> The client parameters to use in these operations. </param>
        /// <param name="id"> The identifier of the resource that is the target of operations. </param>
        internal MockableMgmtResourceNameArmClient(ArmClient client, ResourceIdentifier id) : base(client, id)
        {
        }

        internal MockableMgmtResourceNameArmClient(ArmClient client) : this(client, ResourceIdentifier.Root)
        {
        }

        private string GetApiVersionOrNull(ResourceType resourceType)
        {
            TryGetApiVersion(resourceType, out string apiVersion);
            return apiVersion;
        }

        /// <summary>
        /// Gets an object representing a <see cref="MachineResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="MachineResource.CreateResourceIdentifier" /> to create a <see cref="MachineResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="MachineResource"/> object. </returns>
        public virtual MachineResource GetMachineResource(ResourceIdentifier id)
        {
            MachineResource.ValidateResourceId(id);
            return new MachineResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="Disk"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="Disk.CreateResourceIdentifier" /> to create a <see cref="Disk"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="Disk"/> object. </returns>
        public virtual Disk GetDisk(ResourceIdentifier id)
        {
            Disk.ValidateResourceId(id);
            return new Disk(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="Memory"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="Memory.CreateResourceIdentifier" /> to create a <see cref="Memory"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="Memory"/> object. </returns>
        public virtual Memory GetMemory(ResourceIdentifier id)
        {
            Memory.ValidateResourceId(id);
            return new Memory(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="NetworkResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="NetworkResource.CreateResourceIdentifier" /> to create a <see cref="NetworkResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="NetworkResource"/> object. </returns>
        public virtual NetworkResource GetNetworkResource(ResourceIdentifier id)
        {
            NetworkResource.ValidateResourceId(id);
            return new NetworkResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="DisplayResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="DisplayResource.CreateResourceIdentifier" /> to create a <see cref="DisplayResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="DisplayResource"/> object. </returns>
        public virtual DisplayResource GetDisplayResource(ResourceIdentifier id)
        {
            DisplayResource.ValidateResourceId(id);
            return new DisplayResource(Client, id);
        }

        /// <summary>
        /// Gets an object representing a <see cref="ProviderOperationResource"/> along with the instance operations that can be performed on it but with no data.
        /// You can use <see cref="ProviderOperationResource.CreateResourceIdentifier" /> to create a <see cref="ProviderOperationResource"/> <see cref="ResourceIdentifier"/> from its components.
        /// </summary>
        /// <param name="id"> The resource ID of the resource to get. </param>
        /// <returns> Returns a <see cref="ProviderOperationResource"/> object. </returns>
        public virtual ProviderOperationResource GetProviderOperationResource(ResourceIdentifier id)
        {
            ProviderOperationResource.ValidateResourceId(id);
            return new ProviderOperationResource(Client, id);
        }
    }
}
