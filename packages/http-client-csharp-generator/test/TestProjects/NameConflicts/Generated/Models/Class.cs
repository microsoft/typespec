// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

namespace NameConflicts.Models
{
    /// <summary> The Class. </summary>
    public partial class Class
    {
        /// <summary> Initializes a new instance of <see cref="Class"/>. </summary>
        public Class()
        {
        }

        /// <summary> Initializes a new instance of <see cref="Class"/>. </summary>
        /// <param name="abstract"></param>
        /// <param name="add"></param>
        /// <param name="alias"></param>
        /// <param name="as"></param>
        /// <param name="ascending"></param>
        /// <param name="async"></param>
        /// <param name="await"></param>
        /// <param name="base"></param>
        /// <param name="bool"></param>
        /// <param name="break"></param>
        /// <param name="by"></param>
        /// <param name="byte"></param>
        /// <param name="catch"></param>
        /// <param name="char"></param>
        /// <param name="checked"></param>
        /// <param name="const"></param>
        /// <param name="continue"></param>
        /// <param name="classValue"></param>
        /// <param name="decimal"></param>
        /// <param name="default"></param>
        /// <param name="delegate"></param>
        /// <param name="descending"></param>
        /// <param name="do"></param>
        /// <param name="double"></param>
        /// <param name="dynamic"></param>
        /// <param name="else"></param>
        /// <param name="enum"></param>
        /// <param name="event"></param>
        /// <param name="explicit"></param>
        /// <param name="extern"></param>
        /// <param name="false"></param>
        /// <param name="finally"></param>
        /// <param name="fixed"></param>
        /// <param name="float"></param>
        /// <param name="for"></param>
        /// <param name="foreach"></param>
        /// <param name="from"></param>
        /// <param name="get"></param>
        /// <param name="global"></param>
        /// <param name="goto"></param>
        /// <param name="group"></param>
        /// <param name="if"></param>
        /// <param name="implicit"></param>
        /// <param name="in"></param>
        /// <param name="int"></param>
        /// <param name="interface"></param>
        /// <param name="internal"></param>
        /// <param name="into"></param>
        /// <param name="is"></param>
        /// <param name="join"></param>
        /// <param name="let"></param>
        /// <param name="lock"></param>
        /// <param name="long"></param>
        /// <param name="nameof"></param>
        /// <param name="namespace"></param>
        /// <param name="new"></param>
        /// <param name="nullProperty"></param>
        /// <param name="object"></param>
        /// <param name="on"></param>
        /// <param name="operator"></param>
        /// <param name="orderby"></param>
        /// <param name="out"></param>
        /// <param name="override"></param>
        /// <param name="params"></param>
        /// <param name="partial"></param>
        /// <param name="private"></param>
        /// <param name="protected"></param>
        /// <param name="public"></param>
        /// <param name="readonly"></param>
        /// <param name="ref"></param>
        /// <param name="remove"></param>
        /// <param name="return"></param>
        /// <param name="sbyte"></param>
        /// <param name="sealed"></param>
        /// <param name="select"></param>
        /// <param name="set"></param>
        /// <param name="short"></param>
        /// <param name="sizeof"></param>
        /// <param name="stackalloc"></param>
        /// <param name="static"></param>
        /// <param name="string"></param>
        /// <param name="struct"></param>
        /// <param name="switch"></param>
        /// <param name="this"></param>
        /// <param name="throw"></param>
        /// <param name="true"></param>
        /// <param name="try"></param>
        /// <param name="typeof"></param>
        /// <param name="uint"></param>
        /// <param name="ulong"></param>
        /// <param name="unchecked"></param>
        /// <param name="unmanaged"></param>
        /// <param name="unsafe"></param>
        /// <param name="ushort"></param>
        /// <param name="using"></param>
        /// <param name="value"></param>
        /// <param name="var"></param>
        /// <param name="virtual"></param>
        /// <param name="void"></param>
        /// <param name="volatile"></param>
        /// <param name="when"></param>
        /// <param name="where"></param>
        /// <param name="while"></param>
        /// <param name="yield"></param>
        /// <param name="system"></param>
        /// <param name="toStringValue"></param>
        /// <param name="equalsValue"></param>
        /// <param name="getHashCodeValue"></param>
        internal Class(string @abstract, string @add, string @alias, string @as, string @ascending, string @async, string @await, string @base, string @bool, string @break, string @by, string @byte, string @catch, string @char, string @checked, string @const, string @continue, string classValue, string @decimal, string @default, string @delegate, string @descending, string @do, string @double, string @dynamic, string @else, string @enum, string @event, string @explicit, string @extern, string @false, string @finally, string @fixed, string @float, string @for, string @foreach, string @from, string @get, string @global, string @goto, string group, string @if, string @implicit, string @in, string @int, string @interface, string @internal, string @into, string @is, string @join, string @let, string @lock, string @long, string @nameof, string @namespace, string @new, string nullProperty, string @object, string @on, string @operator, string orderby, string @out, string @override, string @params, string @partial, string @private, string @protected, string @public, string @readonly, string @ref, string @remove, string @return, string @sbyte, string @sealed, string select, string @set, string @short, string @sizeof, string @stackalloc, string @static, string @string, string @struct, string @switch, string @this, string @throw, string @true, string @try, string @typeof, string @uint, string @ulong, string @unchecked, string @unmanaged, string @unsafe, string @ushort, string @using, string value, string @var, string @virtual, string @void, string @volatile, string @when, string @where, string @while, string @yield, SystemEnum? system, string toStringValue, string equalsValue, string getHashCodeValue)
        {
            Abstract = @abstract;
            Add = @add;
            Alias = @alias;
            As = @as;
            Ascending = @ascending;
            Async = @async;
            Await = @await;
            Base = @base;
            Bool = @bool;
            Break = @break;
            By = @by;
            Byte = @byte;
            Catch = @catch;
            Char = @char;
            Checked = @checked;
            Const = @const;
            Continue = @continue;
            ClassValue = classValue;
            Decimal = @decimal;
            Default = @default;
            Delegate = @delegate;
            Descending = @descending;
            Do = @do;
            Double = @double;
            Dynamic = @dynamic;
            Else = @else;
            Enum = @enum;
            Event = @event;
            Explicit = @explicit;
            Extern = @extern;
            False = @false;
            Finally = @finally;
            Fixed = @fixed;
            Float = @float;
            For = @for;
            Foreach = @foreach;
            From = @from;
            Get = @get;
            Global = @global;
            Goto = @goto;
            Group = group;
            If = @if;
            Implicit = @implicit;
            In = @in;
            Int = @int;
            Interface = @interface;
            Internal = @internal;
            Into = @into;
            Is = @is;
            Join = @join;
            Let = @let;
            Lock = @lock;
            Long = @long;
            Nameof = @nameof;
            Namespace = @namespace;
            New = @new;
            NullProperty = nullProperty;
            Object = @object;
            On = @on;
            Operator = @operator;
            Orderby = orderby;
            Out = @out;
            Override = @override;
            Params = @params;
            Partial = @partial;
            Private = @private;
            Protected = @protected;
            Public = @public;
            Readonly = @readonly;
            Ref = @ref;
            Remove = @remove;
            Return = @return;
            Sbyte = @sbyte;
            Sealed = @sealed;
            Select = select;
            Set = @set;
            Short = @short;
            Sizeof = @sizeof;
            Stackalloc = @stackalloc;
            Static = @static;
            String = @string;
            Struct = @struct;
            Switch = @switch;
            This = @this;
            Throw = @throw;
            True = @true;
            Try = @try;
            Typeof = @typeof;
            Uint = @uint;
            Ulong = @ulong;
            Unchecked = @unchecked;
            Unmanaged = @unmanaged;
            Unsafe = @unsafe;
            Ushort = @ushort;
            Using = @using;
            Value = value;
            Var = @var;
            Virtual = @virtual;
            Void = @void;
            Volatile = @volatile;
            When = @when;
            Where = @where;
            While = @while;
            Yield = @yield;
            System = system;
            ToStringValue = toStringValue;
            EqualsValue = equalsValue;
            GetHashCodeValue = getHashCodeValue;
        }

        /// <summary> Gets or sets the abstract. </summary>
        public string Abstract { get; set; }
        /// <summary> Gets or sets the add. </summary>
        public string Add { get; set; }
        /// <summary> Gets or sets the alias. </summary>
        public string Alias { get; set; }
        /// <summary> Gets or sets the as. </summary>
        public string As { get; set; }
        /// <summary> Gets or sets the ascending. </summary>
        public string Ascending { get; set; }
        /// <summary> Gets or sets the async. </summary>
        public string Async { get; set; }
        /// <summary> Gets or sets the await. </summary>
        public string Await { get; set; }
        /// <summary> Gets or sets the base. </summary>
        public string Base { get; set; }
        /// <summary> Gets or sets the bool. </summary>
        public string Bool { get; set; }
        /// <summary> Gets or sets the break. </summary>
        public string Break { get; set; }
        /// <summary> Gets or sets the by. </summary>
        public string By { get; set; }
        /// <summary> Gets or sets the byte. </summary>
        public string Byte { get; set; }
        /// <summary> Gets or sets the catch. </summary>
        public string Catch { get; set; }
        /// <summary> Gets or sets the char. </summary>
        public string Char { get; set; }
        /// <summary> Gets or sets the checked. </summary>
        public string Checked { get; set; }
        /// <summary> Gets or sets the const. </summary>
        public string Const { get; set; }
        /// <summary> Gets or sets the continue. </summary>
        public string Continue { get; set; }
        /// <summary> Gets or sets the class value. </summary>
        public string ClassValue { get; set; }
        /// <summary> Gets or sets the decimal. </summary>
        public string Decimal { get; set; }
        /// <summary> Gets or sets the default. </summary>
        public string Default { get; set; }
        /// <summary> Gets or sets the delegate. </summary>
        public string Delegate { get; set; }
        /// <summary> Gets or sets the descending. </summary>
        public string Descending { get; set; }
        /// <summary> Gets or sets the do. </summary>
        public string Do { get; set; }
        /// <summary> Gets or sets the double. </summary>
        public string Double { get; set; }
        /// <summary> Gets or sets the dynamic. </summary>
        public string Dynamic { get; set; }
        /// <summary> Gets or sets the else. </summary>
        public string Else { get; set; }
        /// <summary> Gets or sets the enum. </summary>
        public string Enum { get; set; }
        /// <summary> Gets or sets the event. </summary>
        public string Event { get; set; }
        /// <summary> Gets or sets the explicit. </summary>
        public string Explicit { get; set; }
        /// <summary> Gets or sets the extern. </summary>
        public string Extern { get; set; }
        /// <summary> Gets or sets the false. </summary>
        public string False { get; set; }
        /// <summary> Gets or sets the finally. </summary>
        public string Finally { get; set; }
        /// <summary> Gets or sets the fixed. </summary>
        public string Fixed { get; set; }
        /// <summary> Gets or sets the float. </summary>
        public string Float { get; set; }
        /// <summary> Gets or sets the for. </summary>
        public string For { get; set; }
        /// <summary> Gets or sets the foreach. </summary>
        public string Foreach { get; set; }
        /// <summary> Gets or sets the from. </summary>
        public string From { get; set; }
        /// <summary> Gets or sets the get. </summary>
        public string Get { get; set; }
        /// <summary> Gets or sets the global. </summary>
        public string Global { get; set; }
        /// <summary> Gets or sets the goto. </summary>
        public string Goto { get; set; }
        /// <summary> Gets or sets the group. </summary>
        public string Group { get; set; }
        /// <summary> Gets or sets the if. </summary>
        public string If { get; set; }
        /// <summary> Gets or sets the implicit. </summary>
        public string Implicit { get; set; }
        /// <summary> Gets or sets the in. </summary>
        public string In { get; set; }
        /// <summary> Gets or sets the int. </summary>
        public string Int { get; set; }
        /// <summary> Gets or sets the interface. </summary>
        public string Interface { get; set; }
        /// <summary> Gets or sets the internal. </summary>
        public string Internal { get; set; }
        /// <summary> Gets or sets the into. </summary>
        public string Into { get; set; }
        /// <summary> Gets or sets the is. </summary>
        public string Is { get; set; }
        /// <summary> Gets or sets the join. </summary>
        public string Join { get; set; }
        /// <summary> Gets or sets the let. </summary>
        public string Let { get; set; }
        /// <summary> Gets or sets the lock. </summary>
        public string Lock { get; set; }
        /// <summary> Gets or sets the long. </summary>
        public string Long { get; set; }
        /// <summary> Gets or sets the nameof. </summary>
        public string Nameof { get; set; }
        /// <summary> Gets or sets the namespace. </summary>
        public string Namespace { get; set; }
        /// <summary> Gets or sets the new. </summary>
        public string New { get; set; }
        /// <summary> Gets or sets the null property. </summary>
        public string NullProperty { get; set; }
        /// <summary> Gets or sets the object. </summary>
        public string Object { get; set; }
        /// <summary> Gets or sets the on. </summary>
        public string On { get; set; }
        /// <summary> Gets or sets the operator. </summary>
        public string Operator { get; set; }
        /// <summary> Gets or sets the orderby. </summary>
        public string Orderby { get; set; }
        /// <summary> Gets or sets the out. </summary>
        public string Out { get; set; }
        /// <summary> Gets or sets the override. </summary>
        public string Override { get; set; }
        /// <summary> Gets or sets the params. </summary>
        public string Params { get; set; }
        /// <summary> Gets or sets the partial. </summary>
        public string Partial { get; set; }
        /// <summary> Gets or sets the private. </summary>
        public string Private { get; set; }
        /// <summary> Gets or sets the protected. </summary>
        public string Protected { get; set; }
        /// <summary> Gets or sets the public. </summary>
        public string Public { get; set; }
        /// <summary> Gets or sets the readonly. </summary>
        public string Readonly { get; set; }
        /// <summary> Gets or sets the ref. </summary>
        public string Ref { get; set; }
        /// <summary> Gets or sets the remove. </summary>
        public string Remove { get; set; }
        /// <summary> Gets or sets the return. </summary>
        public string Return { get; set; }
        /// <summary> Gets or sets the sbyte. </summary>
        public string Sbyte { get; set; }
        /// <summary> Gets or sets the sealed. </summary>
        public string Sealed { get; set; }
        /// <summary> Gets or sets the select. </summary>
        public string Select { get; set; }
        /// <summary> Gets or sets the set. </summary>
        public string Set { get; set; }
        /// <summary> Gets or sets the short. </summary>
        public string Short { get; set; }
        /// <summary> Gets or sets the sizeof. </summary>
        public string Sizeof { get; set; }
        /// <summary> Gets or sets the stackalloc. </summary>
        public string Stackalloc { get; set; }
        /// <summary> Gets or sets the static. </summary>
        public string Static { get; set; }
        /// <summary> Gets or sets the string. </summary>
        public string String { get; set; }
        /// <summary> Gets or sets the struct. </summary>
        public string Struct { get; set; }
        /// <summary> Gets or sets the switch. </summary>
        public string Switch { get; set; }
        /// <summary> Gets or sets the this. </summary>
        public string This { get; set; }
        /// <summary> Gets or sets the throw. </summary>
        public string Throw { get; set; }
        /// <summary> Gets or sets the true. </summary>
        public string True { get; set; }
        /// <summary> Gets or sets the try. </summary>
        public string Try { get; set; }
        /// <summary> Gets or sets the typeof. </summary>
        public string Typeof { get; set; }
        /// <summary> Gets or sets the uint. </summary>
        public string Uint { get; set; }
        /// <summary> Gets or sets the ulong. </summary>
        public string Ulong { get; set; }
        /// <summary> Gets or sets the unchecked. </summary>
        public string Unchecked { get; set; }
        /// <summary> Gets or sets the unmanaged. </summary>
        public string Unmanaged { get; set; }
        /// <summary> Gets or sets the unsafe. </summary>
        public string Unsafe { get; set; }
        /// <summary> Gets or sets the ushort. </summary>
        public string Ushort { get; set; }
        /// <summary> Gets or sets the using. </summary>
        public string Using { get; set; }
        /// <summary> Gets or sets the value. </summary>
        public string Value { get; set; }
        /// <summary> Gets or sets the var. </summary>
        public string Var { get; set; }
        /// <summary> Gets or sets the virtual. </summary>
        public string Virtual { get; set; }
        /// <summary> Gets or sets the void. </summary>
        public string Void { get; set; }
        /// <summary> Gets or sets the volatile. </summary>
        public string Volatile { get; set; }
        /// <summary> Gets or sets the when. </summary>
        public string When { get; set; }
        /// <summary> Gets or sets the where. </summary>
        public string Where { get; set; }
        /// <summary> Gets or sets the while. </summary>
        public string While { get; set; }
        /// <summary> Gets or sets the yield. </summary>
        public string Yield { get; set; }
        /// <summary> Gets or sets the system. </summary>
        public SystemEnum? System { get; set; }
        /// <summary> Gets or sets the to string value. </summary>
        public string ToStringValue { get; set; }
        /// <summary> Gets or sets the equals value. </summary>
        public string EqualsValue { get; set; }
        /// <summary> Gets or sets the get hash code value. </summary>
        public string GetHashCodeValue { get; set; }
    }
}
