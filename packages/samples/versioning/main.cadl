import "@cadl-lang/versioning";
import "@cadl-lang/rest";
import "./library.cadl";

using Cadl.Versioning;
using Cadl.Rest;

@versionedDependency([[Versions.v1, Library.Versions.v1_0], [Versions.v2, Library.Versions.v1_1]])
@serviceTitle("Pet Store Service")
@versioned(Versions)
namespace VersionedApi;
using Cadl.Http;

enum Versions {
  v1,
  v2,
}

model ApiVersionParam {
  @header apiVersion: Versions;
}

@discriminator("type")
model PetBase {
  name: string;
  favoriteToys: Library.PetToy[];
}

model Dog extends PetBase {
  type: "dog";
  nextWalkTime: zonedDateTime;

  @madeOptional(Versions.v2)
  walkerName?: string;

  @added(Versions.v2)
  commandList: string[];
}

@added(Versions.v2)
model Cat extends PetBase {
  type: "cat";
  catnipDose: int32;
}

@route("/")
interface MyService {
  getPet(...ApiVersionParam): OkResponse<PetBase>;

  @added(Versions.v2)
  @post
  @route("/walkDog")
  walkDog(...ApiVersionParam): OkResponse<{}>;

  @removed(Versions.v2)
  @post
  @route("/walkCat")
  walkCat(...ApiVersionParam): OkResponse<{}>;
}
