import "@cadl-lang/rest";
import "@cadl-lang/openapi";
import "./decorators.js";

using Cadl.Http;

@serviceTitle("Pet Store Service")
@serviceVersion("2021-03-25")
@doc("This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.")
namespace PetStore;

// Model types
model Pet {
  name: string;
  tag?: string;

  @minValue(0)
  @maxValue(20)
  age: int32;
}

model Toy {
  id: int64;
  petId: int64;
  name: string;
}

@doc("Error")
@error
model Error {
  code: int32;
  message: string;
}

@doc("Not modified")
model NotModified<T> {
  @statusCode _: 304;
  @body body: T;
}

@friendlyName("{name}ListResults", T)
model ResponsePage<T> {
  items: T[];
  nextLink?: string;
}

model PetId {
  @path petId: int32;
}

@doc("Manage your pets.")
@route("/pets")
namespace Pets {
  @doc("Delete a pet.")
  @delete
  op delete(...PetId): {
    ...Response<200>;
  } | Error;

  @fancyDoc("List pets.")
  op list(@query nextLink?: string): OkResponse<ResponsePage<Pet>> | Error;

  @doc("Returns a pet. Supports eTags.")
  op read(...PetId): OkResponse<Pet> | NotModified<Pet> | Error;

  @post op create(@body pet: Pet): OkResponse<Pet> | Error;
}

@route("/pets/{petId}/toys")
namespace ListPetToysResponse {
  op list(@path petId: string, @query nameFilter: string): OkResponse<ResponsePage<Toy>> | Error;
}
