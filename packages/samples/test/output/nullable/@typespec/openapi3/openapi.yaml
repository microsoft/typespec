openapi: 3.0.0
info:
  title: Nullable sample
  version: 0.0.0
tags: []
paths:
  /test:
    get:
      operationId: NullableMethods_read
      parameters:
        - name: someParam
          in: query
          required: true
          schema:
            type: string
            nullable: true
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HasNullables'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              allOf:
                - $ref: '#/components/schemas/AnotherModel'
              nullable: true
components:
  schemas:
    AnotherModel:
      type: object
      required:
        - num
      properties:
        num:
          type: integer
          format: int32
    HasNullables:
      type: object
      required:
        - str
        - when
        - strOrNull
        - modelOrNull
        - literalsOrNull
        - manyNullsOneString
        - manyNullsSomeValues
        - arr
      properties:
        str:
          type: string
        when:
          type: string
          format: time
        strOrNull:
          type: string
          nullable: true
        modelOrNull:
          type: object
          allOf:
            - $ref: '#/components/schemas/AnotherModel'
          nullable: true
        literalsOrNull:
          type: string
          enum:
            - one
            - two
          nullable: true
        manyNullsOneString:
          type: string
          nullable: true
        manyNullsSomeValues:
          type: number
          enum:
            - 42
            - 100
          nullable: true
        arr:
          type: array
          items:
            type: string
          nullable: true
