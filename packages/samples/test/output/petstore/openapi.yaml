openapi: 3.0.0
info:
  title: Pet Store Service
  version: '2021-03-25'
  description: >-
    This is a sample server Petstore server.  You can find out more about
    Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net,
    #swagger](http://swagger.io/irc/).  For this sample, you can use the api key
    `special-key` to test the authorization filters.
tags: []
paths:
  /pets/{petId}:
    delete:
      operationId: Pets_delete
      description: Delete a pet.
      parameters:
        - &ref_0
          $ref: '#/components/parameters/PetId'
      responses:
        '200':
          description: The request has succeeded.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: &ref_2
                  value: '#/components/schemas/Error'
    get:
      operationId: Pets_read
      description: Returns a pet. Supports eTags.
      parameters:
        - *ref_0
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: &ref_1
                  value: '#/components/schemas/Pet'
        '304':
          description: >-
            The client has made a conditional request and the resource has not
            been modified.
          content:
            application/json:
              schema:
                $ref: *ref_1
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: *ref_2
  /pets:
    get:
      operationId: Pets_list
      description: <blink>List pets.</blink>
      parameters:
        - name: nextLink
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref:
                  value: '#/components/schemas/PetListResults'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: *ref_2
    post:
      operationId: Pets_create
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: *ref_1
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: *ref_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: *ref_1
  /pets/{petId}/toys:
    get:
      operationId: ListPetToysResponse_list
      parameters:
        - name: petId
          in: path
          required: true
          schema:
            type: string
        - name: nameFilter
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref:
                  value: '#/components/schemas/ToyListResults'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: *ref_2
components:
  parameters:
    PetId:
      name: petId
      in: path
      required: true
      schema:
        type: integer
        format: int32
  schemas:
    Error:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
      description: Error
      required:
        - code
        - message
    PetListResults:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: *ref_1
          x-cadl-name: Pet[]
        nextLink:
          type: string
      required:
        - items
    Pet:
      type: object
      properties:
        name:
          type: string
        tag:
          type: string
        age:
          type: integer
          format: int32
          minimum: 0
          maximum: 20
      required:
        - name
        - age
    ToyListResults:
      type: object
      properties:
        items:
          type: array
          items:
            $ref:
              value: '#/components/schemas/Toy'
          x-cadl-name: Toy[]
        nextLink:
          type: string
      required:
        - items
    Toy:
      type: object
      properties:
        id:
          type: integer
          format: int64
        petId:
          type: integer
          format: int64
        name:
          type: string
      required:
        - id
        - petId
        - name
    PetId:
      type: object
      properties: {}
