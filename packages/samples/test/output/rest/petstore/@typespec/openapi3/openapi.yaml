openapi: 3.0.0
info:
  title: Pet Store Service
  version: 2021-03-25
tags: []
paths:
  /checkups:
    get:
      operationId: Checkups_list
      description: Lists all instances of the resource.
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckupCollectionWithNextLink'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetStoreError'
  /checkups/{checkupId}:
    patch:
      operationId: Checkups_createOrUpdate
      description: Creates or update an instance of the resource.
      parameters:
        - $ref: '#/components/parameters/CheckupKey'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Checkup'
        '201':
          description: Resource create operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Checkup'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetStoreError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckupUpdate'
  /owners:
    post:
      operationId: Owners_create
      description: Creates a new instance of the resource.
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Owner'
        '201':
          description: Resource create operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Owner'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetStoreError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OwnerCreate'
    get:
      operationId: Owners_list
      description: Lists all instances of the resource.
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OwnerCollectionWithNextLink'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetStoreError'
  /owners/{ownerId}:
    get:
      operationId: Owners_get
      description: Gets an instance of the resource.
      parameters:
        - $ref: '#/components/parameters/OwnerKey'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Owner'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetStoreError'
    patch:
      operationId: Owners_update
      description: Updates an existing instance of the resource.
      parameters:
        - $ref: '#/components/parameters/OwnerKey'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Owner'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetStoreError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OwnerUpdate'
    delete:
      operationId: Owners_delete
      description: Deletes an existing instance of the resource.
      parameters:
        - $ref: '#/components/parameters/OwnerKey'
      responses:
        '200':
          description: Resource deleted successfully.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetStoreError'
  /owners/{ownerId}/checkups:
    get:
      operationId: OwnerCheckups_list
      description: Lists all instances of the extension resource.
      parameters:
        - $ref: '#/components/parameters/OwnerKey'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckupCollectionWithNextLink'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetStoreError'
  /owners/{ownerId}/checkups/{checkupId}:
    patch:
      operationId: OwnerCheckups_createOrUpdate
      description: Creates or update an instance of the extension resource.
      parameters:
        - $ref: '#/components/parameters/OwnerKey'
        - $ref: '#/components/parameters/CheckupKey'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Checkup'
        '201':
          description: Resource create operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Checkup'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetStoreError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckupUpdate'
  /owners/{ownerId}/insurance:
    get:
      operationId: OwnerInsurance_get
      description: Gets the singleton resource.
      parameters:
        - $ref: '#/components/parameters/OwnerKey'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insurance'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetStoreError'
    patch:
      operationId: OwnerInsurance_update
      description: Updates the singleton resource.
      parameters:
        - $ref: '#/components/parameters/OwnerKey'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insurance'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetStoreError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsuranceUpdate'
  /pets:
    post:
      operationId: Pets_create
      description: Creates a new instance of the resource.
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        '201':
          description: Resource create operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetStoreError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetCreate'
    get:
      operationId: Pets_list
      description: Lists all instances of the resource.
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetCollectionWithNextLink'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetStoreError'
  /pets/{petId}:
    get:
      operationId: Pets_get
      description: Gets an instance of the resource.
      parameters:
        - $ref: '#/components/parameters/PetKey'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetStoreError'
    patch:
      operationId: Pets_update
      description: Updates an existing instance of the resource.
      parameters:
        - $ref: '#/components/parameters/PetKey'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pet'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetStoreError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetUpdate'
    delete:
      operationId: Pets_delete
      description: Deletes an existing instance of the resource.
      parameters:
        - $ref: '#/components/parameters/PetKey'
      responses:
        '200':
          description: Resource deleted successfully.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetStoreError'
  /pets/{petId}/checkups:
    get:
      operationId: PetCheckups_list
      description: Lists all instances of the extension resource.
      parameters:
        - $ref: '#/components/parameters/PetKey'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckupCollectionWithNextLink'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetStoreError'
  /pets/{petId}/checkups/{checkupId}:
    patch:
      operationId: PetCheckups_createOrUpdate
      description: Creates or update an instance of the extension resource.
      parameters:
        - $ref: '#/components/parameters/PetKey'
        - $ref: '#/components/parameters/CheckupKey'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Checkup'
        '201':
          description: Resource create operation completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Checkup'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetStoreError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckupUpdate'
  /pets/{petId}/insurance:
    get:
      operationId: PetInsurance_get
      description: Gets the singleton resource.
      parameters:
        - $ref: '#/components/parameters/PetKey'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insurance'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetStoreError'
    patch:
      operationId: PetInsurance_update
      description: Updates the singleton resource.
      parameters:
        - $ref: '#/components/parameters/PetKey'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insurance'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetStoreError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsuranceUpdate'
  /pets/{petId}/toys:
    get:
      operationId: Toys_list
      parameters:
        - $ref: '#/components/parameters/ToyParentKey'
        - name: nameFilter
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ToyCollectionWithNextLink'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetStoreError'
  /pets/{petId}/toys/{toyId}:
    get:
      operationId: Toys_get
      description: Gets an instance of the resource.
      parameters:
        - $ref: '#/components/parameters/ToyKey.petId'
        - $ref: '#/components/parameters/ToyKey.toyId'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Toy'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetStoreError'
  /pets/{petId}/toys/{toyId}/insurance:
    get:
      operationId: ToyInsurance_get
      description: Gets the singleton resource.
      parameters:
        - $ref: '#/components/parameters/ToyKey.petId'
        - $ref: '#/components/parameters/ToyKey.toyId'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insurance'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetStoreError'
    patch:
      operationId: ToyInsurance_update
      description: Updates the singleton resource.
      parameters:
        - $ref: '#/components/parameters/ToyKey.petId'
        - $ref: '#/components/parameters/ToyKey.toyId'
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Insurance'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PetStoreError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsuranceUpdate'
components:
  parameters:
    CheckupKey:
      name: checkupId
      in: path
      required: true
      schema:
        type: integer
        format: int32
    OwnerKey:
      name: ownerId
      in: path
      required: true
      schema:
        type: integer
        format: int64
    PetKey:
      name: petId
      in: path
      required: true
      schema:
        type: integer
        format: int32
    ToyKey.petId:
      name: petId
      in: path
      required: true
      schema:
        type: integer
        format: int32
    ToyKey.toyId:
      name: toyId
      in: path
      required: true
      schema:
        type: integer
        format: int64
    ToyParentKey:
      name: petId
      in: path
      required: true
      schema:
        type: integer
        format: int32
  schemas:
    Checkup:
      type: object
      required:
        - id
        - vetName
        - notes
      properties:
        id:
          type: integer
          format: int32
        vetName:
          type: string
        notes:
          type: string
    CheckupCollectionWithNextLink:
      type: object
      required:
        - value
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Checkup'
          description: The items on this page
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      description: Paged response of Checkup items
    CheckupUpdate:
      type: object
      properties:
        vetName:
          type: string
        notes:
          type: string
      description: Resource create or update operation model.
    Insurance:
      type: object
      required:
        - provider
        - premium
        - deductible
      properties:
        provider:
          type: string
        premium:
          type: integer
          format: int32
        deductible:
          type: integer
          format: int32
    InsuranceUpdate:
      type: object
      properties:
        provider:
          type: string
        premium:
          type: integer
          format: int32
        deductible:
          type: integer
          format: int32
      description: Resource create or update operation model.
    Owner:
      type: object
      required:
        - id
        - name
        - age
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        age:
          type: integer
          format: int32
    OwnerCollectionWithNextLink:
      type: object
      required:
        - value
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Owner'
          description: The items on this page
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      description: Paged response of Owner items
    OwnerCreate:
      type: object
      required:
        - name
        - age
      properties:
        name:
          type: string
        age:
          type: integer
          format: int32
      description: Resource create operation model.
    OwnerUpdate:
      type: object
      properties:
        name:
          type: string
        age:
          type: integer
          format: int32
      description: Resource create or update operation model.
    Pet:
      type: object
      required:
        - id
        - name
        - age
        - ownerId
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        tag:
          type: string
        age:
          type: integer
          format: int32
          minimum: 0
          maximum: 20
        ownerId:
          type: integer
          format: int64
    PetCollectionWithNextLink:
      type: object
      required:
        - value
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Pet'
          description: The items on this page
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      description: Paged response of Pet items
    PetCreate:
      type: object
      required:
        - name
        - age
        - ownerId
      properties:
        name:
          type: string
        tag:
          type: string
        age:
          type: integer
          format: int32
          minimum: 0
          maximum: 20
        ownerId:
          type: integer
          format: int64
      description: Resource create operation model.
    PetStoreError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    PetUpdate:
      type: object
      properties:
        name:
          type: string
        tag:
          type: string
        age:
          type: integer
          format: int32
          minimum: 0
          maximum: 20
        ownerId:
          type: integer
          format: int64
      description: Resource create or update operation model.
    Toy:
      type: object
      required:
        - id
        - petId
        - name
      properties:
        id:
          type: integer
          format: int64
        petId:
          type: integer
          format: int64
        name:
          type: string
    ToyCollectionWithNextLink:
      type: object
      required:
        - value
      properties:
        value:
          type: array
          items:
            $ref: '#/components/schemas/Toy'
          description: The items on this page
        nextLink:
          type: string
          format: uri
          description: The link to the next page of items
      description: Paged response of Toy items
