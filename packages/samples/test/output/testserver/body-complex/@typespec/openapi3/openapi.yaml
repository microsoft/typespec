openapi: 3.0.0
info:
  title: sample
  version: 0000-00-00
tags: []
paths:
  /complex/array/valid:
    get:
      operationId: Complex_getArray
      description: Get complex types with array properties
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayWrapper'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: Complex_putArray
      description: Put complex types with array properties
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArrayWrapper'
  /complex/basic/valid:
    get:
      operationId: Complex_getValid
      description: "Get complex type {id: 2, name: 'abc', color: 'YELLOW'}"
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Basic'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: Complex_putValid
      description: "Please put {id: 2, name: 'abc', color: 'Magenta'}"
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Basic'
  /complex/dictionary/typed/valid:
    get:
      operationId: Dictionary_getDictionary
      description: Get complex types with dictionary property
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DictionaryWrapper'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: Dictionary_putArray
      description: Put complex types with dictionary property
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DictionaryWrapper'
  /complex/primitive/bool:
    get:
      operationId: Complex_getBool
      description: Get complex types with bool properties
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BooleanWrapper'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: Complex_putBool
      description: Put complex types with bool properties
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BooleanWrapper'
  /complex/primitive/bytes:
    get:
      operationId: Complex_getBytes
      description: Get complex types with bytes properties
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BytesWrapper'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: Complex_putBytes
      description: Put complex types with bytes properties
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BytesWrapper'
  /complex/primitive/date:
    get:
      operationId: Complex_getPlainDate
      description: Get complex types with date properties
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlainDateWrapper'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: Complex_putPlainDate
      description: Put complex types with date properties
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlainDateWrapper'
  /complex/primitive/datetime:
    get:
      operationId: Complex_getZonedDateTime
      description: Get complex types with DateTime properties
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DateTimeWrapper'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: Complex_putZonedDateTime
      description: Put complex types with DateTime properties
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DateTimeWrapper'
  /complex/primitive/double:
    get:
      operationId: Complex_getDouble
      description: Get complex types with double properties
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DoubleWrapper'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: Complex_putDouble
      description: Put complex types with double properties
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DoubleWrapper'
  /complex/primitive/duration:
    get:
      operationId: Complex_getZonedDuration
      description: Get complex types with Duration properties
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DurationWrapper'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: Complex_putZonedDuration
      description: Put complex types with Duration properties
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DurationWrapper'
  /complex/primitive/float:
    get:
      operationId: Complex_getFloat
      description: Get complex types with float properties
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloatWrapper'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: Complex_putFloat
      description: Put complex types with float properties
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FloatWrapper'
  /complex/primitive/integer:
    get:
      operationId: Complex_getInt
      description: Get complex types with integer properties
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IntWrapper'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: Complex_putInt
      description: Put complex types with integer properties
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IntWrapper'
  /complex/primitive/long:
    get:
      operationId: Complex_getLong
      description: Get complex types with long properties
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LongWrapper'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: Complex_putLong
      description: Put complex types with long properties
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LongWrapper'
  /complex/primitive/string:
    get:
      operationId: Complex_getString
      description: Get complex types with string properties
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringWrapper'
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      operationId: Complex_putString
      description: Put complex types with string properties
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StringWrapper'
components:
  schemas:
    ArrayWrapper:
      type: object
      required:
        - field
      properties:
        field:
          type: array
          items:
            type: string
    Basic:
      type: object
      required:
        - id
        - name
        - color
      properties:
        id:
          type: integer
          format: int32
          nullable: true
          description: Basic Id
        name:
          type: string
          description: Name property with a very long description that does not fit on a single line and a line break.
        color:
          $ref: '#/components/schemas/CMYKColors'
    BooleanWrapper:
      type: object
      required:
        - field_true
        - field_false
      properties:
        field_true:
          type: boolean
        field_false:
          type: boolean
    BytesWrapper:
      type: object
      required:
        - field
      properties:
        field:
          type: string
          format: byte
    CMYKColors:
      type: string
      enum:
        - cyan
        - Magenta
        - YELLOW
        - blacK
    DateTimeWrapper:
      type: object
      required:
        - field
        - now
      properties:
        field:
          type: string
          format: date-time
        now:
          type: string
          format: date-time
    DictionaryWrapper:
      type: object
      required:
        - field
      properties:
        field:
          type: object
          additionalProperties:
            type: string
    DoubleWrapper:
      type: object
      required:
        - field1
        - field_56_zeros_after_the_dot_and_negative_zero_before_dot_and_this_is_a_long_field_name_on_purpose
      properties:
        field1:
          type: number
          format: double
        field_56_zeros_after_the_dot_and_negative_zero_before_dot_and_this_is_a_long_field_name_on_purpose:
          type: number
          format: double
    DurationWrapper:
      type: object
      required:
        - field
      properties:
        field:
          type: string
          format: duration
    Error:
      type: object
      description: Error
      required:
        - message
      properties:
        message:
          type: string
    FloatWrapper:
      type: object
      required:
        - field1
        - field2
      properties:
        field1:
          type: number
          format: float
        field2:
          type: number
          format: float
    IntWrapper:
      type: object
      required:
        - field1
        - field2
      properties:
        field1:
          type: integer
          format: int32
        field2:
          type: integer
          format: int32
    LongWrapper:
      type: object
      required:
        - field1
        - field2
      properties:
        field1:
          type: integer
          format: int64
        field2:
          type: integer
          format: int64
    Pet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    PlainDateWrapper:
      type: object
      required:
        - field
        - leap
      properties:
        field:
          type: string
          format: date
        leap:
          type: string
          format: date
    ReadonlyObj:
      type: object
      required:
        - id
        - size
      properties:
        id:
          type: integer
          format: int32
          readOnly: true
        size:
          type: integer
          format: int32
          readOnly: true
    StringWrapper:
      type: object
      required:
        - field
        - empty
        - 'null'
      properties:
        field:
          type: string
        empty:
          type: string
        'null':
          type: string
          nullable: true
