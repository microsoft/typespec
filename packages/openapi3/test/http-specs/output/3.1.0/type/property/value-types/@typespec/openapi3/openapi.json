{
  "openapi": "3.1.0",
  "info": {
    "title": "TypePropertyValueTypes",
    "description": "Illustrates various property types for models",
    "version": "0.0.0"
  },
  "tags": [],
  "paths": {
    "/type/property/value-types/boolean": {
      "get": {
        "operationId": "Boolean_get",
        "description": "Get call",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanProperty"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Boolean_put",
        "description": "Put operation",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BooleanProperty"
              }
            }
          },
          "description": "body"
        }
      }
    },
    "/type/property/value-types/boolean/literal": {
      "get": {
        "operationId": "BooleanLiteral_get",
        "description": "Get call",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BooleanLiteralProperty"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "BooleanLiteral_put",
        "description": "Put operation",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BooleanLiteralProperty"
              }
            }
          },
          "description": "body"
        }
      }
    },
    "/type/property/value-types/bytes": {
      "get": {
        "operationId": "Bytes_get",
        "description": "Get call",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BytesProperty"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Bytes_put",
        "description": "Put operation",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BytesProperty"
              }
            }
          },
          "description": "body"
        }
      }
    },
    "/type/property/value-types/collections/int": {
      "get": {
        "operationId": "CollectionsInt_get",
        "description": "Get call",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionsIntProperty"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "CollectionsInt_put",
        "description": "Put operation",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionsIntProperty"
              }
            }
          },
          "description": "body"
        }
      }
    },
    "/type/property/value-types/collections/model": {
      "get": {
        "operationId": "CollectionsModel_get",
        "description": "Get call",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionsModelProperty"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "CollectionsModel_put",
        "description": "Put operation",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionsModelProperty"
              }
            }
          },
          "description": "body"
        }
      }
    },
    "/type/property/value-types/collections/string": {
      "get": {
        "operationId": "CollectionsString_get",
        "description": "Get call",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionsStringProperty"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "CollectionsString_put",
        "description": "Put operation",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionsStringProperty"
              }
            }
          },
          "description": "body"
        }
      }
    },
    "/type/property/value-types/datetime": {
      "get": {
        "operationId": "Datetime_get",
        "description": "Get call",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatetimeProperty"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Datetime_put",
        "description": "Put operation",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DatetimeProperty"
              }
            }
          },
          "description": "body"
        }
      }
    },
    "/type/property/value-types/decimal": {
      "get": {
        "operationId": "Decimal_get",
        "description": "Get call",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DecimalProperty"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Decimal_put",
        "description": "Put operation",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DecimalProperty"
              }
            }
          },
          "description": "body"
        }
      }
    },
    "/type/property/value-types/decimal128": {
      "get": {
        "operationId": "Decimal128_get",
        "description": "Get call",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Decimal128Property"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Decimal128_put",
        "description": "Put operation",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Decimal128Property"
              }
            }
          },
          "description": "body"
        }
      }
    },
    "/type/property/value-types/dictionary/string": {
      "get": {
        "operationId": "DictionaryString_get",
        "description": "Get call",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DictionaryStringProperty"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "DictionaryString_put",
        "description": "Put operation",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DictionaryStringProperty"
              }
            }
          },
          "description": "body"
        }
      }
    },
    "/type/property/value-types/duration": {
      "get": {
        "operationId": "Duration_get",
        "description": "Get call",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DurationProperty"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Duration_put",
        "description": "Put operation",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DurationProperty"
              }
            }
          },
          "description": "body"
        }
      }
    },
    "/type/property/value-types/enum": {
      "get": {
        "operationId": "Enum_get",
        "description": "Get call",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnumProperty"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Enum_put",
        "description": "Put operation",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EnumProperty"
              }
            }
          },
          "description": "body"
        }
      }
    },
    "/type/property/value-types/extensible-enum": {
      "get": {
        "operationId": "ExtensibleEnum_get",
        "description": "Get call",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExtensibleEnumProperty"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "ExtensibleEnum_put",
        "description": "Put operation",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtensibleEnumProperty"
              }
            }
          },
          "description": "body"
        }
      }
    },
    "/type/property/value-types/float": {
      "get": {
        "operationId": "Float_get",
        "description": "Get call",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FloatProperty"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Float_put",
        "description": "Put operation",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FloatProperty"
              }
            }
          },
          "description": "body"
        }
      }
    },
    "/type/property/value-types/float/literal": {
      "get": {
        "operationId": "FloatLiteral_get",
        "description": "Get call",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FloatLiteralProperty"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "FloatLiteral_put",
        "description": "Put operation",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FloatLiteralProperty"
              }
            }
          },
          "description": "body"
        }
      }
    },
    "/type/property/value-types/int": {
      "get": {
        "operationId": "Int_get",
        "description": "Get call",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntProperty"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Int_put",
        "description": "Put operation",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntProperty"
              }
            }
          },
          "description": "body"
        }
      }
    },
    "/type/property/value-types/int/literal": {
      "get": {
        "operationId": "IntLiteral_get",
        "description": "Get call",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntLiteralProperty"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "IntLiteral_put",
        "description": "Put operation",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IntLiteralProperty"
              }
            }
          },
          "description": "body"
        }
      }
    },
    "/type/property/value-types/model": {
      "get": {
        "operationId": "Model_get",
        "description": "Get call",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ModelProperty"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Model_put",
        "description": "Put operation",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelProperty"
              }
            }
          },
          "description": "body"
        }
      }
    },
    "/type/property/value-types/never": {
      "get": {
        "operationId": "Never_get",
        "description": "Get call",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NeverProperty"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Never_put",
        "description": "Put operation",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NeverProperty"
              }
            }
          },
          "description": "body"
        }
      }
    },
    "/type/property/value-types/string": {
      "get": {
        "operationId": "String_get",
        "description": "Get call",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringProperty"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "String_put",
        "description": "Put operation",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StringProperty"
              }
            }
          },
          "description": "body"
        }
      }
    },
    "/type/property/value-types/string/literal": {
      "get": {
        "operationId": "StringLiteral_get",
        "description": "Get call",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringLiteralProperty"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "StringLiteral_put",
        "description": "Put operation",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StringLiteralProperty"
              }
            }
          },
          "description": "body"
        }
      }
    },
    "/type/property/value-types/union-enum-value": {
      "get": {
        "operationId": "UnionEnumValue_get",
        "description": "Get call",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnionEnumValueProperty"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "UnionEnumValue_put",
        "description": "Put operation",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnionEnumValueProperty"
              }
            }
          },
          "description": "body"
        }
      }
    },
    "/type/property/value-types/union/float/literal": {
      "get": {
        "operationId": "UnionFloatLiteral_get",
        "description": "Get call",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnionFloatLiteralProperty"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "UnionFloatLiteral_put",
        "description": "Put operation",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnionFloatLiteralProperty"
              }
            }
          },
          "description": "body"
        }
      }
    },
    "/type/property/value-types/union/int/literal": {
      "get": {
        "operationId": "UnionIntLiteral_get",
        "description": "Get call",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnionIntLiteralProperty"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "UnionIntLiteral_put",
        "description": "Put operation",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnionIntLiteralProperty"
              }
            }
          },
          "description": "body"
        }
      }
    },
    "/type/property/value-types/union/string/literal": {
      "get": {
        "operationId": "UnionStringLiteral_get",
        "description": "Get call",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnionStringLiteralProperty"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "UnionStringLiteral_put",
        "description": "Put operation",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnionStringLiteralProperty"
              }
            }
          },
          "description": "body"
        }
      }
    },
    "/type/property/value-types/unknown/array": {
      "get": {
        "operationId": "UnknownArray_get",
        "description": "Get call",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnknownArrayProperty"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "UnknownArray_put",
        "description": "Put operation",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnknownArrayProperty"
              }
            }
          },
          "description": "body"
        }
      }
    },
    "/type/property/value-types/unknown/dict": {
      "get": {
        "operationId": "UnknownDict_get",
        "description": "Get call",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnknownDictProperty"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "UnknownDict_put",
        "description": "Put operation",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnknownDictProperty"
              }
            }
          },
          "description": "body"
        }
      }
    },
    "/type/property/value-types/unknown/int": {
      "get": {
        "operationId": "UnknownInt_get",
        "description": "Get call",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnknownIntProperty"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "UnknownInt_put",
        "description": "Put operation",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnknownIntProperty"
              }
            }
          },
          "description": "body"
        }
      }
    },
    "/type/property/value-types/unknown/string": {
      "get": {
        "operationId": "UnknownString_get",
        "description": "Get call",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnknownStringProperty"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "UnknownString_put",
        "description": "Put operation",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UnknownStringProperty"
              }
            }
          },
          "description": "body"
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BooleanLiteralProperty": {
        "type": "object",
        "required": [
          "property"
        ],
        "properties": {
          "property": {
            "type": "boolean",
            "enum": [
              true
            ],
            "description": "Property"
          }
        },
        "description": "Model with a boolean literal property."
      },
      "BooleanProperty": {
        "type": "object",
        "required": [
          "property"
        ],
        "properties": {
          "property": {
            "type": "boolean",
            "description": "Property"
          }
        },
        "description": "Model with a boolean property"
      },
      "BytesProperty": {
        "type": "object",
        "required": [
          "property"
        ],
        "properties": {
          "property": {
            "type": "string",
            "contentEncoding": "base64",
            "description": "Property"
          }
        },
        "description": "Model with a bytes property"
      },
      "CollectionsIntProperty": {
        "type": "object",
        "required": [
          "property"
        ],
        "properties": {
          "property": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "description": "Property"
          }
        },
        "description": "Model with collection int properties"
      },
      "CollectionsModelProperty": {
        "type": "object",
        "required": [
          "property"
        ],
        "properties": {
          "property": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InnerModel"
            },
            "description": "Property"
          }
        },
        "description": "Model with collection model properties"
      },
      "CollectionsStringProperty": {
        "type": "object",
        "required": [
          "property"
        ],
        "properties": {
          "property": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Property"
          }
        },
        "description": "Model with collection string properties"
      },
      "DatetimeProperty": {
        "type": "object",
        "required": [
          "property"
        ],
        "properties": {
          "property": {
            "type": "string",
            "format": "date-time",
            "description": "Property"
          }
        },
        "description": "Model with a datetime property"
      },
      "Decimal128Property": {
        "type": "object",
        "required": [
          "property"
        ],
        "properties": {
          "property": {
            "type": "number",
            "format": "decimal128",
            "description": "Property"
          }
        },
        "description": "Model with a decimal128 property"
      },
      "DecimalProperty": {
        "type": "object",
        "required": [
          "property"
        ],
        "properties": {
          "property": {
            "type": "number",
            "format": "decimal",
            "description": "Property"
          }
        },
        "description": "Model with a decimal property"
      },
      "DictionaryStringProperty": {
        "type": "object",
        "required": [
          "property"
        ],
        "properties": {
          "property": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Property"
          }
        },
        "description": "Model with dictionary string properties"
      },
      "DurationProperty": {
        "type": "object",
        "required": [
          "property"
        ],
        "properties": {
          "property": {
            "type": "string",
            "format": "duration",
            "description": "Property"
          }
        },
        "description": "Model with a duration property"
      },
      "EnumProperty": {
        "type": "object",
        "required": [
          "property"
        ],
        "properties": {
          "property": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FixedInnerEnum"
              }
            ],
            "description": "Property"
          }
        },
        "description": "Model with enum properties"
      },
      "ExtendedEnum": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "type": "string",
            "enum": [
              "value2"
            ]
          }
        ]
      },
      "ExtensibleEnumProperty": {
        "type": "object",
        "required": [
          "property"
        ],
        "properties": {
          "property": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InnerEnum"
              }
            ],
            "description": "Property"
          }
        },
        "description": "Model with extensible enum properties"
      },
      "FixedInnerEnum": {
        "type": "string",
        "enum": [
          "ValueOne",
          "ValueTwo"
        ],
        "description": "Enum that will be used as a property for model EnumProperty. Non-extensible."
      },
      "FloatLiteralProperty": {
        "type": "object",
        "required": [
          "property"
        ],
        "properties": {
          "property": {
            "type": "number",
            "enum": [
              43.125
            ],
            "description": "Property"
          }
        },
        "description": "Model with a float literal property."
      },
      "FloatProperty": {
        "type": "object",
        "required": [
          "property"
        ],
        "properties": {
          "property": {
            "type": "number",
            "format": "float",
            "description": "Property"
          }
        },
        "description": "Model with a float property"
      },
      "InnerEnum": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "type": "string",
            "enum": [
              "ValueOne",
              "ValueTwo"
            ]
          }
        ],
        "description": "Enum that will be used as a property for model EnumProperty. Extensible."
      },
      "InnerModel": {
        "type": "object",
        "required": [
          "property"
        ],
        "properties": {
          "property": {
            "type": "string",
            "description": "Required string property"
          }
        },
        "description": "Inner model. Will be a property type for ModelWithModelProperties"
      },
      "IntLiteralProperty": {
        "type": "object",
        "required": [
          "property"
        ],
        "properties": {
          "property": {
            "type": "number",
            "enum": [
              42
            ],
            "description": "Property"
          }
        },
        "description": "Model with a int literal property."
      },
      "IntProperty": {
        "type": "object",
        "required": [
          "property"
        ],
        "properties": {
          "property": {
            "type": "integer",
            "format": "int32",
            "description": "Property"
          }
        },
        "description": "Model with a int property"
      },
      "ModelProperty": {
        "type": "object",
        "required": [
          "property"
        ],
        "properties": {
          "property": {
            "allOf": [
              {
                "$ref": "#/components/schemas/InnerModel"
              }
            ],
            "description": "Property"
          }
        },
        "description": "Model with model properties"
      },
      "NeverProperty": {
        "type": "object",
        "description": "Model with a property never. (This property should not be included)."
      },
      "StringLiteralProperty": {
        "type": "object",
        "required": [
          "property"
        ],
        "properties": {
          "property": {
            "type": "string",
            "enum": [
              "hello"
            ],
            "description": "Property"
          }
        },
        "description": "Model with a string literal property."
      },
      "StringProperty": {
        "type": "object",
        "required": [
          "property"
        ],
        "properties": {
          "property": {
            "type": "string",
            "description": "Property"
          }
        },
        "description": "Model with a string property"
      },
      "UnionEnumValueProperty": {
        "type": "object",
        "required": [
          "property"
        ],
        "properties": {
          "property": {
            "type": "string",
            "enum": [
              "value2"
            ],
            "description": "Property"
          }
        },
        "description": "Template type for testing models with specific properties. Pass in the type of the property you are looking for"
      },
      "UnionFloatLiteralProperty": {
        "type": "object",
        "required": [
          "property"
        ],
        "properties": {
          "property": {
            "type": "number",
            "enum": [
              43.125,
              46.875
            ],
            "description": "Property"
          }
        },
        "description": "Model with a union of float literal as property."
      },
      "UnionIntLiteralProperty": {
        "type": "object",
        "required": [
          "property"
        ],
        "properties": {
          "property": {
            "type": "number",
            "enum": [
              42,
              43
            ],
            "description": "Property"
          }
        },
        "description": "Model with a union of int literal as property."
      },
      "UnionStringLiteralProperty": {
        "type": "object",
        "required": [
          "property"
        ],
        "properties": {
          "property": {
            "type": "string",
            "enum": [
              "hello",
              "world"
            ],
            "description": "Property"
          }
        },
        "description": "Model with a union of string literal as property."
      },
      "UnknownArrayProperty": {
        "type": "object",
        "required": [
          "property"
        ],
        "properties": {
          "property": {
            "description": "Property"
          }
        },
        "description": "Model with a property unknown, and the data is an array."
      },
      "UnknownDictProperty": {
        "type": "object",
        "required": [
          "property"
        ],
        "properties": {
          "property": {
            "description": "Property"
          }
        },
        "description": "Model with a property unknown, and the data is a dictionnary."
      },
      "UnknownIntProperty": {
        "type": "object",
        "required": [
          "property"
        ],
        "properties": {
          "property": {
            "description": "Property"
          }
        },
        "description": "Model with a property unknown, and the data is a int32."
      },
      "UnknownStringProperty": {
        "type": "object",
        "required": [
          "property"
        ],
        "properties": {
          "property": {
            "description": "Property"
          }
        },
        "description": "Model with a property unknown, and the data is a string."
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "TestServer endpoint",
      "variables": {}
    }
  ]
}