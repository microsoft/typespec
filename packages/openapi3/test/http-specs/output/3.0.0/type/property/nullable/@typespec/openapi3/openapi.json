{
  "openapi": "3.0.0",
  "info": {
    "title": "TypePropertyNullable",
    "description": "Illustrates models with nullable properties.",
    "version": "0.0.0"
  },
  "tags": [],
  "paths": {
    "/type/property/nullable/bytes/non-null": {
      "get": {
        "operationId": "Bytes_getNonNull",
        "description": "Get models that will return all properties in the model",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BytesProperty"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Bytes_patchNonNull",
        "description": "Put a body with all properties present.",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BytesPropertyUpdate"
              }
            }
          }
        }
      }
    },
    "/type/property/nullable/bytes/null": {
      "get": {
        "operationId": "Bytes_getNull",
        "description": "Get models that will return the default object",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BytesProperty"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Bytes_patchNull",
        "description": "Put a body with default properties.",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BytesPropertyUpdate"
              }
            }
          }
        }
      }
    },
    "/type/property/nullable/collections/bytes/non-null": {
      "get": {
        "operationId": "CollectionsByte_getNonNull",
        "description": "Get models that will return all properties in the model",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionsByteProperty"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "CollectionsByte_patchNonNull",
        "description": "Put a body with all properties present.",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionsBytePropertyUpdate"
              }
            }
          }
        }
      }
    },
    "/type/property/nullable/collections/bytes/null": {
      "get": {
        "operationId": "CollectionsByte_getNull",
        "description": "Get models that will return the default object",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionsByteProperty"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "CollectionsByte_patchNull",
        "description": "Put a body with default properties.",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionsBytePropertyUpdate"
              }
            }
          }
        }
      }
    },
    "/type/property/nullable/collections/model/non-null": {
      "get": {
        "operationId": "CollectionsModel_getNonNull",
        "description": "Get models that will return all properties in the model",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionsModelProperty"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "CollectionsModel_patchNonNull",
        "description": "Put a body with all properties present.",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionsModelPropertyUpdate"
              }
            }
          }
        }
      }
    },
    "/type/property/nullable/collections/model/null": {
      "get": {
        "operationId": "CollectionsModel_getNull",
        "description": "Get models that will return the default object",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionsModelProperty"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "CollectionsModel_patchNull",
        "description": "Put a body with default properties.",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionsModelPropertyUpdate"
              }
            }
          }
        }
      }
    },
    "/type/property/nullable/collections/string/non-null": {
      "get": {
        "operationId": "CollectionsString_getNonNull",
        "description": "Get models that will return all properties in the model",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionsStringProperty"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "CollectionsString_patchNonNull",
        "description": "Put a body with all properties present.",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionsStringPropertyUpdate"
              }
            }
          }
        }
      }
    },
    "/type/property/nullable/collections/string/null": {
      "get": {
        "operationId": "CollectionsString_getNull",
        "description": "Get models that will return the default object",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectionsStringProperty"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "CollectionsString_patchNull",
        "description": "Put a body with default properties.",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CollectionsStringPropertyUpdate"
              }
            }
          }
        }
      }
    },
    "/type/property/nullable/datetime/non-null": {
      "get": {
        "operationId": "Datetime_getNonNull",
        "description": "Get models that will return all properties in the model",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatetimeProperty"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Datetime_patchNonNull",
        "description": "Put a body with all properties present.",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DatetimePropertyUpdate"
              }
            }
          }
        }
      }
    },
    "/type/property/nullable/datetime/null": {
      "get": {
        "operationId": "Datetime_getNull",
        "description": "Get models that will return the default object",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatetimeProperty"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Datetime_patchNull",
        "description": "Put a body with default properties.",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DatetimePropertyUpdate"
              }
            }
          }
        }
      }
    },
    "/type/property/nullable/duration/non-null": {
      "get": {
        "operationId": "Duration_getNonNull",
        "description": "Get models that will return all properties in the model",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DurationProperty"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Duration_patchNonNull",
        "description": "Put a body with all properties present.",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DurationPropertyUpdate"
              }
            }
          }
        }
      }
    },
    "/type/property/nullable/duration/null": {
      "get": {
        "operationId": "Duration_getNull",
        "description": "Get models that will return the default object",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DurationProperty"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Duration_patchNull",
        "description": "Put a body with default properties.",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DurationPropertyUpdate"
              }
            }
          }
        }
      }
    },
    "/type/property/nullable/string/non-null": {
      "get": {
        "operationId": "String_getNonNull",
        "description": "Get models that will return all properties in the model",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringProperty"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "String_patchNonNull",
        "description": "Put a body with all properties present.",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/StringPropertyUpdate"
              }
            }
          }
        }
      }
    },
    "/type/property/nullable/string/null": {
      "get": {
        "operationId": "String_getNull",
        "description": "Get models that will return the default object",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StringProperty"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "String_patchNull",
        "description": "Put a body with default properties.",
        "parameters": [],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. "
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/StringPropertyUpdate"
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BytesProperty": {
        "type": "object",
        "required": [
          "requiredProperty",
          "nullableProperty"
        ],
        "properties": {
          "requiredProperty": {
            "type": "string",
            "description": "Required property"
          },
          "nullableProperty": {
            "type": "string",
            "format": "byte",
            "nullable": true,
            "description": "Property"
          }
        },
        "description": "Template type for testing models with nullable property. Pass in the type of the property you are looking for"
      },
      "BytesPropertyUpdate": {
        "type": "object",
        "properties": {
          "requiredProperty": {
            "type": "string",
            "description": "Required property"
          },
          "nullableProperty": {
            "type": "string",
            "format": "byte",
            "nullable": true,
            "description": "Property"
          }
        },
        "description": "Template type for testing models with nullable property. Pass in the type of the property you are looking for"
      },
      "CollectionsByteProperty": {
        "type": "object",
        "required": [
          "requiredProperty",
          "nullableProperty"
        ],
        "properties": {
          "requiredProperty": {
            "type": "string",
            "description": "Required property"
          },
          "nullableProperty": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            },
            "nullable": true,
            "description": "Property"
          }
        },
        "description": "Model with collection bytes properties"
      },
      "CollectionsBytePropertyUpdate": {
        "type": "object",
        "properties": {
          "requiredProperty": {
            "type": "string",
            "description": "Required property"
          },
          "nullableProperty": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            },
            "nullable": true,
            "description": "Property"
          }
        },
        "description": "Model with collection bytes properties"
      },
      "CollectionsModelProperty": {
        "type": "object",
        "required": [
          "requiredProperty",
          "nullableProperty"
        ],
        "properties": {
          "requiredProperty": {
            "type": "string",
            "description": "Required property"
          },
          "nullableProperty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InnerModel"
            },
            "nullable": true,
            "description": "Property"
          }
        },
        "description": "Model with collection models properties"
      },
      "CollectionsModelPropertyUpdate": {
        "type": "object",
        "properties": {
          "requiredProperty": {
            "type": "string",
            "description": "Required property"
          },
          "nullableProperty": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InnerModel"
            },
            "nullable": true,
            "description": "Property"
          }
        },
        "description": "Model with collection models properties"
      },
      "CollectionsStringProperty": {
        "type": "object",
        "required": [
          "requiredProperty",
          "nullableProperty"
        ],
        "properties": {
          "requiredProperty": {
            "type": "string",
            "description": "Required property"
          },
          "nullableProperty": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "description": "Property"
          }
        },
        "description": "Model with collection string properties"
      },
      "CollectionsStringPropertyUpdate": {
        "type": "object",
        "properties": {
          "requiredProperty": {
            "type": "string",
            "description": "Required property"
          },
          "nullableProperty": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "description": "Property"
          }
        },
        "description": "Model with collection string properties"
      },
      "DatetimeProperty": {
        "type": "object",
        "required": [
          "requiredProperty",
          "nullableProperty"
        ],
        "properties": {
          "requiredProperty": {
            "type": "string",
            "description": "Required property"
          },
          "nullableProperty": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Property"
          }
        },
        "description": "Model with a datetime property"
      },
      "DatetimePropertyUpdate": {
        "type": "object",
        "properties": {
          "requiredProperty": {
            "type": "string",
            "description": "Required property"
          },
          "nullableProperty": {
            "type": "string",
            "format": "date-time",
            "nullable": true,
            "description": "Property"
          }
        },
        "description": "Model with a datetime property"
      },
      "DurationProperty": {
        "type": "object",
        "required": [
          "requiredProperty",
          "nullableProperty"
        ],
        "properties": {
          "requiredProperty": {
            "type": "string",
            "description": "Required property"
          },
          "nullableProperty": {
            "type": "string",
            "format": "duration",
            "nullable": true,
            "description": "Property"
          }
        },
        "description": "Model with a duration property"
      },
      "DurationPropertyUpdate": {
        "type": "object",
        "properties": {
          "requiredProperty": {
            "type": "string",
            "description": "Required property"
          },
          "nullableProperty": {
            "type": "string",
            "format": "duration",
            "nullable": true,
            "description": "Property"
          }
        },
        "description": "Model with a duration property"
      },
      "InnerModel": {
        "type": "object",
        "required": [
          "property"
        ],
        "properties": {
          "property": {
            "type": "string",
            "description": "Inner model property"
          }
        },
        "description": "Inner model used in collections model property"
      },
      "StringProperty": {
        "type": "object",
        "required": [
          "requiredProperty",
          "nullableProperty"
        ],
        "properties": {
          "requiredProperty": {
            "type": "string",
            "description": "Required property"
          },
          "nullableProperty": {
            "type": "string",
            "nullable": true,
            "description": "Property"
          }
        },
        "description": "Template type for testing models with nullable property. Pass in the type of the property you are looking for"
      },
      "StringPropertyUpdate": {
        "type": "object",
        "properties": {
          "requiredProperty": {
            "type": "string",
            "description": "Required property"
          },
          "nullableProperty": {
            "type": "string",
            "nullable": true,
            "description": "Property"
          }
        },
        "description": "Template type for testing models with nullable property. Pass in the type of the property you are looking for"
      }
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "TestServer endpoint",
      "variables": {}
    }
  ]
}