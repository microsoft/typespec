trigger:
  branches:
    include:
      - main
  paths:
    include:
      - packages/http-client-csharp/

pr: none

extends:
  template: /eng/common/pipelines/templates/1es-redirect.yml

  parameters:
    stages:
      - template: /eng/emitters/pipelines/templates/stages/emitter-stages.yml
        parameters:
          BuildPrereleaseVersion: true
          UseTypeSpecNext: false
          Publish: ${{replace(replace('True',eq(variables['Build.SourceBranchName'], 'main'), 'public'),'True','internal')}}
          PublishDependsOnTest: true
          PackagePath: /packages/http-client-csharp
          EmitterPackageJsonPath: packages/http-client-csharp/package.json
          Packages:
            - name: typespec-http-client-csharp
              file: typespec-http-client-csharp-*.tgz
              type: npm
            - name: Microsoft.TypeSpec.Generator
              file: Microsoft.TypeSpec.Generator.*.nupkg
              type: nuget
            - name: Microsoft.TypeSpec.Generator.ClientModel
              file: Microsoft.TypeSpec.Generator.ClientModel.*.nupkg
              type: nuget
            - name: Microsoft.TypeSpec.Generator.Input
              file: Microsoft.TypeSpec.Generator.Input.*.nupkg
              type: nuget
            - name: Microsoft.TypeSpec.Generator.Customization
              file: Microsoft.TypeSpec.Generator.Customization.*.nupkg
              type: nuget
          UnitTestArgs: -UnitTests
          StagePrefix: "CSharp"
          LanguageShortName: "csharp"
          HasNugetPackages: true
          CadlRanchName: "@typespec/http-client-csharp"
          AdditionalInitializeSteps:
            - task: UseDotNet@2
              inputs:
                useGlobalJson: true
                workingDirectory: $(Build.SourcesDirectory)/packages/http-client-csharp

      - stage: CreateAzureSdkForNetPR
        displayName: Create PR for azure-sdk-for-net
        dependsOn: Publish
        condition: and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.SourceBranchName'], 'main'))
        pool:
          name: $(LINUXPOOL)
          image: $(LINUXVMIMAGE)
          os: linux
        jobs:
          - job: CreatePR
            steps:
              - checkout: self

              - pwsh: |
                  # Get package version from package.json
                  $packageJsonPath = "$(Build.SourcesDirectory)/packages/http-client-csharp/package.json"
                  $packageJson = Get-Content $packageJsonPath | ConvertFrom-Json
                  $packageVersion = $packageJson.version
                  Write-Host "Package version: $packageVersion"
                  Write-Host "##vso[task.setvariable variable=PackageVersion]$packageVersion"

                  # Determine the TypeSpec PR URL 
                  $sourceBranch = '$(Build.SourceBranch)'
                  $repoUrl = '$(Build.Repository.Uri)'
                  $buildReason = '$(Build.Reason)'
                  
                  if ($sourceBranch -match "^refs/pull/(\d+)/(head|merge)$") {
                    $typeSpecPRUrl = "$repoUrl/pull/$($Matches[1])"
                  } elseif ($sourceBranch -match "^refs/heads/(.+)$") {
                    $typeSpecPRUrl = "$repoUrl/tree/$($Matches[1])"
                  } else {
                    $typeSpecPRUrl = "$repoUrl/tree/$sourceBranch"
                  }
                  Write-Host "TypeSpec PR URL: $typeSpecPRUrl"
                  Write-Host "##vso[task.setvariable variable=TypeSpecPRUrl]$typeSpecPRUrl"

                  # Set package URL
                  $packageUrl = "https://pkgs.dev.azure.com/azure-sdk/public/_packaging/azure-sdk-for-js-test-autorest/nuget/v3/flat2/Microsoft.TypeSpec.Generator.ClientModel/$packageVersion"
                  Write-Host "Package URL: $packageUrl"
                  Write-Host "##vso[task.setvariable variable=PackageUrl]$packageUrl"
                displayName: Set variables for PR creation

              - task: PowerShell@2
                displayName: Create PR in azure-sdk-for-net
                inputs:
                  pwsh: true
                  filePath: $(Build.SourcesDirectory)/eng/common/scripts/Submit-AzureSdkForNetPr.ps1
                  arguments: >
                    -PackageVersion '$(PackageVersion)'
                    -TypeSpecPRUrl '$(TypeSpecPRUrl)'
                    -PackageUrl '$(PackageUrl)'
                    -AuthToken '$(azure-sdk-build-github-token)'
