trigger:
  branches:
    include:
      - main
  paths:
    include:
      - packages/http-client-csharp/

pr: none

parameters:
  - name: CreateAzureSdkForNetPR
    displayName: Create PR for azure-sdk-for-net
    type: boolean
    default: false

extends:
  template: /eng/common/pipelines/templates/1es-redirect.yml

  parameters:
    stages:
      - template: /eng/emitters/pipelines/templates/stages/emitter-stages.yml
        parameters:
          BuildPrereleaseVersion: true
          UseTypeSpecNext: false
          Publish: ${{replace(replace('True',eq(variables['Build.SourceBranchName'], 'main'), 'public'),'True','internal')}}
          PublishDependsOnTest: true
          PackagePath: /packages/http-client-csharp
          EmitterPackageJsonPath: packages/http-client-csharp/package.json
          Packages:
            - name: typespec-http-client-csharp
              file: typespec-http-client-csharp-*.tgz
              type: npm
            - name: Microsoft.TypeSpec.Generator
              file: Microsoft.TypeSpec.Generator.*.nupkg
              type: nuget
            - name: Microsoft.TypeSpec.Generator.ClientModel
              file: Microsoft.TypeSpec.Generator.ClientModel.*.nupkg
              type: nuget
            - name: Microsoft.TypeSpec.Generator.Input
              file: Microsoft.TypeSpec.Generator.Input.*.nupkg
              type: nuget
            - name: Microsoft.TypeSpec.Generator.Customization
              file: Microsoft.TypeSpec.Generator.Customization.*.nupkg
              type: nuget
          UnitTestArgs: -UnitTests
          StagePrefix: "CSharp"
          LanguageShortName: "csharp"
          HasNugetPackages: true
          CadlRanchName: "@typespec/http-client-csharp"
          AdditionalInitializeSteps:
            - task: UseDotNet@2
              inputs:
                displayName: "Install .NET 8"
                performMultiLevelLookup: true
                useGlobalJson: false
                version: 8.x
                workingDirectory: $(Build.SourcesDirectory)/packages/http-client-csharp
            - task: UseDotNet@2
              inputs:
                displayName: "Install .NET 9"
                performMultiLevelLookup: true
                useGlobalJson: true
                workingDirectory: $(Build.SourcesDirectory)/packages/http-client-csharp

      - stage: CreateAzureSdkForNetPR
        displayName: Create PR for azure-sdk-for-net
        dependsOn:
          - CSharp_Publish
          - CSharp_Build
        condition: and(succeeded(), or(eq(variables['Build.SourceBranchName'], 'main'), and(eq(variables['Build.Reason'], 'Manual'), ${{ parameters.CreateAzureSdkForNetPR }})))
        variables:
          PackageVersion: $[ stageDependencies.CSharp_Build.Build_linux_20.outputs['ci_build.emitterVersion'] ]
        pool:
          name: $(LINUXPOOL)
          image: $(LINUXVMIMAGE)
          os: linux
        jobs:
          - job: CreatePR
            steps:
              - checkout: self
              - pwsh: |
                  # Determine the TypeSpec PR URL 
                  $repoUrl = '$(Build.Repository.Uri)'.TrimEnd('/')
                  $commitSha = '$(Build.SourceVersion)'
                  $typeSpecCommitUrl = "$repoUrl/commit/$commitSha"

                  Write-Host "Commit SHA: $commitSha"
                  Write-Host "TypeSpec Commit URL: $typeSpecCommitUrl"
                  Write-Host "##vso[task.setvariable variable=TypeSpecCommitUrl]$typeSpecCommitUrl"
                displayName: Set variables for PR creation

              - task: UseNode@1
                displayName: "Install Node.js"
                inputs:
                  version: "22.x"

              - download: current
                displayName: Download pipeline artifacts

              - pwsh: |
                  npm install -g @azure-tools/typespec-client-generator-cli@latest
                displayName: Install tsp-client

              - task: PowerShell@2
                displayName: Update package.json with injected dependencies
                inputs:
                  pwsh: true
                  filePath: $(Build.SourcesDirectory)/packages/http-client-csharp/eng/scripts/Update-PackageJson.ps1
                  workingDirectory: $(Build.SourcesDirectory)/packages/http-client-csharp
                  arguments: >
                    -PackageVersion '$(PackageVersion)'
                    -PackageJsonPath '$(Build.SourcesDirectory)/packages/http-client-csharp/package.json'

              - task: UseDotNet@2
                inputs:
                  useGlobalJson: true
                  workingDirectory: $(Build.SourcesDirectory)/packages/http-client-csharp

              - task: PowerShell@2
                displayName: Generate emitter-package.json files & create PR in azure-sdk-for-net
                inputs:
                  pwsh: true
                  filePath: $(Build.SourcesDirectory)/packages/http-client-csharp/eng/scripts/Submit-AzureSdkForNetPr.ps1
                  arguments: >
                    -PackageVersion '$(PackageVersion)'
                    -TypeSpecCommitUrl '$(TypeSpecCommitUrl)'
                    -AuthToken '$(azuresdk-github-pat)'
                    -TypeSpecSourcePackageJsonPath '$(Build.SourcesDirectory)/packages/http-client-csharp/package.json'
