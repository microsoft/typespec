// <auto-generated/>

#nullable disable

using System;
using System.ClientModel;
using System.ClientModel.Primitives;
using System.Collections.Generic;

namespace Sample
{
    internal partial class CatClientGetCatsAsyncCollectionResult : global::System.ClientModel.Primitives.AsyncCollectionResult
    {
        private readonly global::Sample.CatClient _client;
        private readonly string _myToken;
        private readonly global::System.ClientModel.Primitives.RequestOptions _options;

        public CatClientGetCatsAsyncCollectionResult(global::Sample.CatClient client, string myToken, global::System.ClientModel.Primitives.RequestOptions options)
        {
            global::Sample.Argument.AssertNotNull(myToken, nameof(myToken));

            _client = client;
            _myToken = myToken;
            _options = options;
        }

        public override async global::System.Collections.Generic.IAsyncEnumerable<global::System.ClientModel.ClientResult> GetRawPagesAsync()
        {
            global::System.ClientModel.Primitives.PipelineMessage message = _client.CreateGetCatsRequest(_myToken, _options);
            string nextToken = null;
            while (true)
            {
                global::System.ClientModel.ClientResult result = global::System.ClientModel.ClientResult.FromResponse(await _client.Pipeline.ProcessMessageAsync(message, _options).ConfigureAwait(false));
                yield return result;

                if (result.GetRawResponse().Headers.TryGetValue("nextPage", out string value))
                {
                    nextToken = value;
                }
                else
                {
                    yield break;
                }
                message = _client.CreateGetCatsRequest(nextToken, _options);
            }
        }

        public override global::System.ClientModel.ContinuationToken GetContinuationToken(global::System.ClientModel.ClientResult page)
        {
            if (page.GetRawResponse().Headers.TryGetValue("nextPage", out string value))
            {
                return global::System.ClientModel.ContinuationToken.FromBytes(global::System.BinaryData.FromString(value));
            }
            else
            {
                return null;
            }
        }
    }
}
