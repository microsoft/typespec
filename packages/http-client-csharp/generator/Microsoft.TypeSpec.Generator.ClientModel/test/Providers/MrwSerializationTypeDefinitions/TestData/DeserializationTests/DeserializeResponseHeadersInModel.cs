// <auto-generated/>

#nullable disable

using System;
using System.ClientModel.Primitives;
using System.Collections.Generic;
using System.Text.Json;
using Sample;

namespace Sample.Models
{
    /// <summary></summary>
    public partial class ModelWithResponseHeaders : global::System.ClientModel.Primitives.IJsonModel<global::Sample.Models.ModelWithResponseHeaders>
    {
        internal static global::Sample.Models.ModelWithResponseHeaders DeserializeModelWithResponseHeaders(global::System.Text.Json.JsonElement element, global::System.ClientModel.Primitives.ModelReaderWriterOptions options, global::System.ClientModel.Primitives.PipelineResponseHeaders responseHeaders = default)
        {
            if ((element.ValueKind == global::System.Text.Json.JsonValueKind.Null))
            {
                return null;
            }
            string foo = default;
            string cat = default;
            int bar = default;
            global::System.Collections.Generic.IDictionary<string, global::System.BinaryData> additionalBinaryDataProperties = new global::Sample.ChangeTrackingDictionary<string, global::System.BinaryData>();
            foreach (var prop in element.EnumerateObject())
            {
                if (prop.NameEquals("bar"u8))
                {
                    bar = prop.Value.GetInt32();
                    continue;
                }
                if ((options.Format != "W"))
                {
                    additionalBinaryDataProperties.Add(prop.Name, global::System.BinaryData.FromString(prop.Value.GetRawText()));
                }
            }
            if ((responseHeaders != null))
            {
                if (responseHeaders.TryGetValue("foo", out string value))
                {
                    foo = value;
                }
                if (responseHeaders.TryGetValue("x-cat", out string value0))
                {
                    cat = value0;
                }
            }
            return new global::Sample.Models.ModelWithResponseHeaders(foo, cat, bar, additionalBinaryDataProperties);
        }
    }
}
