// <auto-generated/>

#nullable disable

using System.ClientModel.Primitives;
using System.Collections.Generic;

namespace Sample
{
    /// <summary></summary>
    public partial class TestClient
    {
        internal global::System.ClientModel.Primitives.PipelineMessage CreateSampleOpRequest(global::System.Collections.Generic.IEnumerable<string> p1Explode, global::System.Collections.Generic.IEnumerable<string> p1, global::System.Collections.Generic.IEnumerable<int> p2Explode, global::System.Collections.Generic.IEnumerable<int> p2, string optionalParam, global::System.ClientModel.Primitives.RequestOptions options)
        {
            global::System.ClientModel.Primitives.PipelineMessage message = Pipeline.CreateMessage();
            message.ResponseClassifier = PipelineMessageClassifier200;
            global::System.ClientModel.Primitives.PipelineRequest request = message.Request;
            request.Method = "GET";
            global::Sample.ClientUriBuilder uri = new global::Sample.ClientUriBuilder();
            uri.Reset(_endpoint);
            if (((p1Explode != null) && !((p1Explode is global::Sample.ChangeTrackingList<string> changeTrackingList) && changeTrackingList.IsUndefined)))
            {
                foreach (var @param in p1Explode)
                {
                    uri.AppendQuery("p1Explode", @param, true);
                }
            }
            if (((p1 != null) && !((p1 is global::Sample.ChangeTrackingList<string> changeTrackingList0) && changeTrackingList0.IsUndefined)))
            {
                uri.AppendQueryDelimited("p1", p1, "|", null, true);
            }
            if (((p2Explode != null) && !((p2Explode is global::Sample.ChangeTrackingList<int> changeTrackingList1) && changeTrackingList1.IsUndefined)))
            {
                foreach (var @param in p2Explode)
                {
                    uri.AppendQuery("p2Explode", @param, true);
                }
            }
            if (((p2 != null) && !((p2 is global::Sample.ChangeTrackingList<int> changeTrackingList2) && changeTrackingList2.IsUndefined)))
            {
                uri.AppendQueryDelimited("p2", p2, " ", null, true);
            }
            if ((optionalParam != null))
            {
                uri.AppendQuery("optionalParam", optionalParam, true);
            }
            request.Uri = uri.ToUri();
            message.Apply(options);
            return message;
        }
    }
}
