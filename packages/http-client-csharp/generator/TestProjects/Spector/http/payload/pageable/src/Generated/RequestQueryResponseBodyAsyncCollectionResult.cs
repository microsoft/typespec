// <auto-generated/>

#nullable disable

using System;
using System.ClientModel;
using System.ClientModel.Primitives;
using System.Collections.Generic;
using Payload.Pageable._ServerDrivenPagination.ContinuationToken;

namespace Payload.Pageable
{
    internal partial class RequestQueryResponseBodyAsyncCollectionResult : AsyncCollectionResult
    {
        private readonly ServerDrivenPaginationContinuationToken _client;
        private readonly string _token;
        private readonly string _foo;
        private readonly string _bar;
        private readonly RequestOptions _options;

        public RequestQueryResponseBodyAsyncCollectionResult(ServerDrivenPaginationContinuationToken client, string token, string foo, string bar, RequestOptions options)
        {
            _client = client;
            _token = token;
            _foo = foo;
            _bar = bar;
            _options = options;
        }

        public override async IAsyncEnumerable<ClientResult> GetRawPagesAsync()
        {
            PipelineMessage message = _client.CreateRequestQueryResponseBodyRequest(_token, _foo, _bar, _options);
            string nextToken = null;
            while (true)
            {
                ClientResult result = ClientResult.FromResponse(await _client.Pipeline.ProcessMessageAsync(message, _options).ConfigureAwait(false));
                yield return result;

                nextToken = ((RequestQueryResponseBodyResponse)result).NextToken;
                if (nextToken == null)
                {
                    yield break;
                }
                message = _client.CreateRequestQueryResponseBodyRequest(nextToken, _foo, _bar, _options);
            }
        }

        public override ContinuationToken GetContinuationToken(ClientResult page)
        {
            string nextPage = ((RequestQueryResponseBodyResponse)page).NextToken;
            return ContinuationToken.FromBytes(BinaryData.FromString(nextPage));
        }
    }
}
