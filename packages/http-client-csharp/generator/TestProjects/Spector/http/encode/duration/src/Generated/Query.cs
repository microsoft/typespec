// <auto-generated/>

#nullable disable

using System;
using System.ClientModel;
using System.ClientModel.Primitives;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;

namespace Encode.Duration._Query
{
    public partial class Query
    {
        protected Query() => throw null;

        public ClientPipeline Pipeline => throw null;

        public virtual ClientResult Default(TimeSpan input, RequestOptions options) => throw null;

        public virtual Task<ClientResult> DefaultAsync(TimeSpan input, RequestOptions options) => throw null;

        public virtual ClientResult Default(TimeSpan input, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<ClientResult> DefaultAsync(TimeSpan input, CancellationToken cancellationToken = default) => throw null;

        public virtual ClientResult Iso8601(TimeSpan input, RequestOptions options) => throw null;

        public virtual Task<ClientResult> Iso8601Async(TimeSpan input, RequestOptions options) => throw null;

        public virtual ClientResult Iso8601(TimeSpan input, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<ClientResult> Iso8601Async(TimeSpan input, CancellationToken cancellationToken = default) => throw null;

        public virtual ClientResult Int32Seconds(TimeSpan input, RequestOptions options) => throw null;

        public virtual Task<ClientResult> Int32SecondsAsync(TimeSpan input, RequestOptions options) => throw null;

        public virtual ClientResult Int32Seconds(TimeSpan input, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<ClientResult> Int32SecondsAsync(TimeSpan input, CancellationToken cancellationToken = default) => throw null;

        public virtual ClientResult FloatSeconds(TimeSpan input, RequestOptions options) => throw null;

        public virtual Task<ClientResult> FloatSecondsAsync(TimeSpan input, RequestOptions options) => throw null;

        public virtual ClientResult FloatSeconds(TimeSpan input, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<ClientResult> FloatSecondsAsync(TimeSpan input, CancellationToken cancellationToken = default) => throw null;

        public virtual ClientResult Float64Seconds(TimeSpan input, RequestOptions options) => throw null;

        public virtual Task<ClientResult> Float64SecondsAsync(TimeSpan input, RequestOptions options) => throw null;

        public virtual ClientResult Float64Seconds(TimeSpan input, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<ClientResult> Float64SecondsAsync(TimeSpan input, CancellationToken cancellationToken = default) => throw null;

        public virtual ClientResult Int32Milliseconds(TimeSpan input, RequestOptions options) => throw null;

        public virtual Task<ClientResult> Int32MillisecondsAsync(TimeSpan input, RequestOptions options) => throw null;

        public virtual ClientResult Int32Milliseconds(TimeSpan input, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<ClientResult> Int32MillisecondsAsync(TimeSpan input, CancellationToken cancellationToken = default) => throw null;

        public virtual ClientResult FloatMilliseconds(TimeSpan input, RequestOptions options) => throw null;

        public virtual Task<ClientResult> FloatMillisecondsAsync(TimeSpan input, RequestOptions options) => throw null;

        public virtual ClientResult FloatMilliseconds(TimeSpan input, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<ClientResult> FloatMillisecondsAsync(TimeSpan input, CancellationToken cancellationToken = default) => throw null;

        public virtual ClientResult Float64Milliseconds(TimeSpan input, RequestOptions options) => throw null;

        public virtual Task<ClientResult> Float64MillisecondsAsync(TimeSpan input, RequestOptions options) => throw null;

        public virtual ClientResult Float64Milliseconds(TimeSpan input, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<ClientResult> Float64MillisecondsAsync(TimeSpan input, CancellationToken cancellationToken = default) => throw null;

        public virtual ClientResult Int32SecondsArray(IEnumerable<TimeSpan> input, RequestOptions options) => throw null;

        public virtual Task<ClientResult> Int32SecondsArrayAsync(IEnumerable<TimeSpan> input, RequestOptions options) => throw null;

        public virtual ClientResult Int32SecondsArray(IEnumerable<TimeSpan> input, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<ClientResult> Int32SecondsArrayAsync(IEnumerable<TimeSpan> input, CancellationToken cancellationToken = default) => throw null;

        public virtual ClientResult Int32MillisecondsArray(IEnumerable<TimeSpan> input, RequestOptions options) => throw null;

        public virtual Task<ClientResult> Int32MillisecondsArrayAsync(IEnumerable<TimeSpan> input, RequestOptions options) => throw null;

        public virtual ClientResult Int32MillisecondsArray(IEnumerable<TimeSpan> input, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<ClientResult> Int32MillisecondsArrayAsync(IEnumerable<TimeSpan> input, CancellationToken cancellationToken = default) => throw null;
    }
}
