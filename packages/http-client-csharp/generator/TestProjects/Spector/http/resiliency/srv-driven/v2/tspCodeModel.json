{
 "$id": "1",
 "name": "Resiliency.SrvDriven.V2",
 "apiVersions": [
  "v1",
  "v2"
 ],
 "enums": [
  {
   "$id": "2",
   "kind": "enum",
   "name": "Versions",
   "crossLanguageDefinitionId": "Resiliency.ServiceDriven.Versions",
   "valueType": {
    "$id": "3",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "4",
     "kind": "enumvalue",
     "name": "v1",
     "value": "v1",
     "valueType": {
      "$id": "5",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "2"
     },
     "doc": "Version 1",
     "decorators": []
    },
    {
     "$id": "6",
     "kind": "enumvalue",
     "name": "v2",
     "value": "v2",
     "valueType": {
      "$id": "7",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "2"
     },
     "doc": "Version 2",
     "decorators": []
    }
   ],
   "namespace": "Resiliency.ServiceDriven",
   "doc": "Service versions",
   "isFixed": true,
   "isFlags": false,
   "usage": "ApiVersionEnum",
   "decorators": []
  }
 ],
 "models": [],
 "clients": [
  {
   "$id": "8",
   "kind": "client",
   "name": "ResiliencyServiceDrivenClient",
   "namespace": "Resiliency.ServiceDriven",
   "doc": "Test that we can grow up a service spec and service deployment into a multi-versioned service with full client support.\n\nThere are three concepts that should be clarified:\n1. Client spec version: refers to the spec that the client is generated from. 'v1' is a client generated from old.tsp and 'v2' is a client generated from main.tsp.\n2. Service deployment version: refers to a deployment version of the service. 'v1' represents the initial deployment of the service with a single api version. 'v2' represents the new deployment of a service with multiple api versions\n3. Api version: The initial deployment of the service only supports api version 'v1'. The new deployment of the service supports api versions 'v1' and 'v2'.\n\nWe test the following configurations from this service spec:\n- A client generated from the second service spec can call the second deployment of a service with api version v1\n- A client generated from the second service spec can call the second deployment of a service with api version v2",
   "methods": [
    {
     "$id": "9",
     "kind": "basic",
     "name": "addOperation",
     "accessibility": "public",
     "apiVersions": [
      "v2"
     ],
     "doc": "Added operation",
     "operation": {
      "$id": "10",
      "name": "addOperation",
      "resourceName": "ServiceDriven",
      "doc": "Added operation",
      "accessibility": "public",
      "parameters": [],
      "responses": [
       {
        "$id": "11",
        "statusCodes": [
         204
        ],
        "headers": [],
        "isErrorResponse": false
       }
      ],
      "httpMethod": "DELETE",
      "uri": "{endpoint}/resiliency/service-driven/client:v2/service:{serviceDeploymentVersion}/api-version:{apiVersion}",
      "path": "/add-operation",
      "bufferResponse": true,
      "generateProtocolMethod": true,
      "generateConvenienceMethod": true,
      "crossLanguageDefinitionId": "Resiliency.ServiceDriven.addOperation",
      "decorators": []
     },
     "parameters": [],
     "response": {
      "$id": "12"
     },
     "isOverride": false,
     "generateConvenient": true,
     "generateProtocol": true,
     "crossLanguageDefinitionId": "Resiliency.ServiceDriven.addOperation"
    },
    {
     "$id": "13",
     "kind": "basic",
     "name": "fromNone",
     "accessibility": "public",
     "apiVersions": [
      "v1",
      "v2"
     ],
     "doc": "Test that grew up from accepting no parameters to an optional input parameter",
     "operation": {
      "$id": "14",
      "name": "fromNone",
      "resourceName": "AddOptionalParam",
      "doc": "Test that grew up from accepting no parameters to an optional input parameter",
      "accessibility": "public",
      "parameters": [
       {
        "$id": "15",
        "name": "new-parameter",
        "nameInRequest": "new-parameter",
        "doc": "I'm a new input optional parameter",
        "type": {
         "$id": "16",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "location": "Query",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": false,
        "kind": "Method",
        "decorators": [],
        "skipUrlEncoding": false
       }
      ],
      "responses": [
       {
        "$id": "17",
        "statusCodes": [
         204
        ],
        "headers": [],
        "isErrorResponse": false
       }
      ],
      "httpMethod": "HEAD",
      "uri": "{endpoint}/resiliency/service-driven/client:v2/service:{serviceDeploymentVersion}/api-version:{apiVersion}",
      "path": "/add-optional-param/from-none",
      "bufferResponse": true,
      "generateProtocolMethod": true,
      "generateConvenienceMethod": true,
      "crossLanguageDefinitionId": "Resiliency.ServiceDriven.AddOptionalParam.fromNone",
      "decorators": []
     },
     "parameters": [
      {
       "$id": "18",
       "name": "new-parameter",
       "nameInRequest": "new-parameter",
       "doc": "I'm a new input optional parameter",
       "type": {
        "$id": "19",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "location": "Query",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": false,
       "kind": "Method",
       "decorators": [],
       "skipUrlEncoding": false
      }
     ],
     "response": {
      "$id": "20"
     },
     "isOverride": false,
     "generateConvenient": true,
     "generateProtocol": true,
     "crossLanguageDefinitionId": "Resiliency.ServiceDriven.AddOptionalParam.fromNone"
    },
    {
     "$id": "21",
     "kind": "basic",
     "name": "fromOneRequired",
     "accessibility": "public",
     "apiVersions": [
      "v1",
      "v2"
     ],
     "doc": "Operation that grew up from accepting one required parameter to accepting a required parameter and an optional parameter.",
     "operation": {
      "$id": "22",
      "name": "fromOneRequired",
      "resourceName": "AddOptionalParam",
      "doc": "Operation that grew up from accepting one required parameter to accepting a required parameter and an optional parameter.",
      "accessibility": "public",
      "parameters": [
       {
        "$id": "23",
        "name": "parameter",
        "nameInRequest": "parameter",
        "doc": "I am a required parameter",
        "type": {
         "$id": "24",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "location": "Query",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": true,
        "kind": "Method",
        "decorators": [],
        "skipUrlEncoding": false
       },
       {
        "$id": "25",
        "name": "new-parameter",
        "nameInRequest": "new-parameter",
        "doc": "I'm a new input optional parameter",
        "type": {
         "$id": "26",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "location": "Query",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": false,
        "kind": "Method",
        "decorators": [],
        "skipUrlEncoding": false
       }
      ],
      "responses": [
       {
        "$id": "27",
        "statusCodes": [
         204
        ],
        "headers": [],
        "isErrorResponse": false
       }
      ],
      "httpMethod": "GET",
      "uri": "{endpoint}/resiliency/service-driven/client:v2/service:{serviceDeploymentVersion}/api-version:{apiVersion}",
      "path": "/add-optional-param/from-one-required",
      "bufferResponse": true,
      "generateProtocolMethod": true,
      "generateConvenienceMethod": true,
      "crossLanguageDefinitionId": "Resiliency.ServiceDriven.AddOptionalParam.fromOneRequired",
      "decorators": []
     },
     "parameters": [
      {
       "$id": "28",
       "name": "parameter",
       "nameInRequest": "parameter",
       "doc": "I am a required parameter",
       "type": {
        "$id": "29",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "location": "Query",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": true,
       "kind": "Method",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "30",
       "name": "new-parameter",
       "nameInRequest": "new-parameter",
       "doc": "I'm a new input optional parameter",
       "type": {
        "$id": "31",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "location": "Query",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": false,
       "kind": "Method",
       "decorators": [],
       "skipUrlEncoding": false
      }
     ],
     "response": {
      "$id": "32"
     },
     "isOverride": false,
     "generateConvenient": true,
     "generateProtocol": true,
     "crossLanguageDefinitionId": "Resiliency.ServiceDriven.AddOptionalParam.fromOneRequired"
    },
    {
     "$id": "33",
     "kind": "basic",
     "name": "fromOneOptional",
     "accessibility": "public",
     "apiVersions": [
      "v1",
      "v2"
     ],
     "doc": "Tests that we can grow up an operation from accepting one optional parameter to accepting two optional parameters.",
     "operation": {
      "$id": "34",
      "name": "fromOneOptional",
      "resourceName": "AddOptionalParam",
      "doc": "Tests that we can grow up an operation from accepting one optional parameter to accepting two optional parameters.",
      "accessibility": "public",
      "parameters": [
       {
        "$id": "35",
        "name": "parameter",
        "nameInRequest": "parameter",
        "doc": "I am an optional parameter",
        "type": {
         "$id": "36",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "location": "Query",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": false,
        "kind": "Method",
        "decorators": [],
        "skipUrlEncoding": false
       },
       {
        "$id": "37",
        "name": "new-parameter",
        "nameInRequest": "new-parameter",
        "doc": "I'm a new input optional parameter",
        "type": {
         "$id": "38",
         "kind": "string",
         "name": "string",
         "crossLanguageDefinitionId": "TypeSpec.string",
         "decorators": []
        },
        "location": "Query",
        "isApiVersion": false,
        "isContentType": false,
        "isEndpoint": false,
        "explode": false,
        "isRequired": false,
        "kind": "Method",
        "decorators": [],
        "skipUrlEncoding": false
       }
      ],
      "responses": [
       {
        "$id": "39",
        "statusCodes": [
         204
        ],
        "headers": [],
        "isErrorResponse": false
       }
      ],
      "httpMethod": "GET",
      "uri": "{endpoint}/resiliency/service-driven/client:v2/service:{serviceDeploymentVersion}/api-version:{apiVersion}",
      "path": "/add-optional-param/from-one-optional",
      "bufferResponse": true,
      "generateProtocolMethod": true,
      "generateConvenienceMethod": true,
      "crossLanguageDefinitionId": "Resiliency.ServiceDriven.AddOptionalParam.fromOneOptional",
      "decorators": []
     },
     "parameters": [
      {
       "$id": "40",
       "name": "parameter",
       "nameInRequest": "parameter",
       "doc": "I am an optional parameter",
       "type": {
        "$id": "41",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "location": "Query",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": false,
       "kind": "Method",
       "decorators": [],
       "skipUrlEncoding": false
      },
      {
       "$id": "42",
       "name": "new-parameter",
       "nameInRequest": "new-parameter",
       "doc": "I'm a new input optional parameter",
       "type": {
        "$id": "43",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "location": "Query",
       "isApiVersion": false,
       "isContentType": false,
       "isEndpoint": false,
       "explode": false,
       "isRequired": false,
       "kind": "Method",
       "decorators": [],
       "skipUrlEncoding": false
      }
     ],
     "response": {
      "$id": "44"
     },
     "isOverride": false,
     "generateConvenient": true,
     "generateProtocol": true,
     "crossLanguageDefinitionId": "Resiliency.ServiceDriven.AddOptionalParam.fromOneOptional"
    }
   ],
   "parameters": [
    {
     "$id": "45",
     "name": "endpoint",
     "nameInRequest": "endpoint",
     "doc": "Need to be set as 'http://localhost:3000' in client.",
     "type": {
      "$id": "46",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "location": "Uri",
     "isApiVersion": false,
     "isContentType": false,
     "isRequired": true,
     "isEndpoint": true,
     "skipUrlEncoding": false,
     "explode": false,
     "kind": "Client"
    },
    {
     "$id": "47",
     "name": "serviceDeploymentVersion",
     "nameInRequest": "serviceDeploymentVersion",
     "doc": "Pass in either 'v1' or 'v2'. This represents a version of the service deployment in history. 'v1' is for the deployment when the service had only one api version. 'v2' is for the deployment when the service had api-versions 'v1' and 'v2'.",
     "type": {
      "$id": "48",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "location": "Uri",
     "isApiVersion": false,
     "isContentType": false,
     "isRequired": true,
     "isEndpoint": false,
     "skipUrlEncoding": false,
     "explode": false,
     "kind": "Client"
    },
    {
     "$id": "49",
     "name": "apiVersion",
     "nameInRequest": "apiVersion",
     "doc": "Pass in either 'v1' or 'v2'. This represents the API version of a service.",
     "type": {
      "$id": "50",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "location": "Uri",
     "isApiVersion": true,
     "isContentType": false,
     "isRequired": true,
     "isEndpoint": false,
     "skipUrlEncoding": false,
     "explode": false,
     "kind": "Client",
     "defaultValue": {
      "$id": "51",
      "type": {
       "$id": "52",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string"
      },
      "value": "v2"
     }
    }
   ],
   "decorators": [],
   "crossLanguageDefinitionId": "Resiliency.ServiceDriven",
   "apiVersions": [
    "v1",
    "v2"
   ]
  }
 ]
}
