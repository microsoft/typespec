// <auto-generated/>

#nullable disable

using System.ClientModel;
using System.ClientModel.Primitives;
using System.Threading;
using System.Threading.Tasks;
using Routes._PathParameters.LabelExpansion;
using Routes._PathParameters.MatrixExpansion;
using Routes._PathParameters.PathExpansion;
using Routes._PathParameters.ReservedExpansion;
using Routes._PathParameters.SimpleExpansion;

namespace Routes._PathParameters
{
    public partial class PathParameters
    {
        protected PathParameters() => throw null;

        public ClientPipeline Pipeline => throw null;

        public virtual ClientResult TemplateOnly(string @param, RequestOptions options) => throw null;

        public virtual Task<ClientResult> TemplateOnlyAsync(string @param, RequestOptions options) => throw null;

        public virtual ClientResult TemplateOnly(string @param, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<ClientResult> TemplateOnlyAsync(string @param, CancellationToken cancellationToken = default) => throw null;

        public virtual ClientResult Explicit(string @param, RequestOptions options) => throw null;

        public virtual Task<ClientResult> ExplicitAsync(string @param, RequestOptions options) => throw null;

        public virtual ClientResult Explicit(string @param, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<ClientResult> ExplicitAsync(string @param, CancellationToken cancellationToken = default) => throw null;

        public virtual ClientResult AnnotationOnly(string @param, RequestOptions options) => throw null;

        public virtual Task<ClientResult> AnnotationOnlyAsync(string @param, RequestOptions options) => throw null;

        public virtual ClientResult AnnotationOnly(string @param, CancellationToken cancellationToken = default) => throw null;

        public virtual Task<ClientResult> AnnotationOnlyAsync(string @param, CancellationToken cancellationToken = default) => throw null;

        public virtual PathParametersReservedExpansion GetPathParametersReservedExpansionClient() => throw null;

        public virtual PathParametersSimpleExpansion GetPathParametersSimpleExpansionClient() => throw null;

        public virtual PathParametersPathExpansion GetPathParametersPathExpansionClient() => throw null;

        public virtual PathParametersLabelExpansion GetPathParametersLabelExpansionClient() => throw null;

        public virtual PathParametersMatrixExpansion GetPathParametersMatrixExpansionClient() => throw null;
    }
}
