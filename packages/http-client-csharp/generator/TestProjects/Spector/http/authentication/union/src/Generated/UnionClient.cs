// <auto-generated/>

#nullable disable

using System;
using System.ClientModel;
using System.ClientModel.Primitives;
using System.Threading;
using System.Threading.Tasks;

namespace Authentication.Union
{
    public partial class UnionClient
    {
        protected UnionClient() => throw null;

        public UnionClient(ApiKeyCredential credential) : this(new Uri("http://localhost:3000"), credential, new UnionClientOptions()) => throw null;

        public UnionClient(Uri endpoint, ApiKeyCredential credential, UnionClientOptions options) => throw null;

        public ClientPipeline Pipeline => throw null;

        /// <summary> Check whether client is authenticated. </summary>
        /// <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <returns> The response returned from the service. </returns>
        public virtual ClientResult ValidKey(RequestOptions options) => throw null;

        /// <summary> Check whether client is authenticated. </summary>
        /// <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <returns> The response returned from the service. </returns>
        public virtual Task<ClientResult> ValidKeyAsync(RequestOptions options) => throw null;

        /// <summary> Check whether client is authenticated. </summary>
        /// <param name="cancellationToken"> The cancellation token that can be used to cancel the operation. </param>
        public virtual ClientResult ValidKey(CancellationToken cancellationToken = default) => throw null;

        /// <summary> Check whether client is authenticated. </summary>
        /// <param name="cancellationToken"> The cancellation token that can be used to cancel the operation. </param>
        public virtual Task<ClientResult> ValidKeyAsync(CancellationToken cancellationToken = default) => throw null;

        /// <summary> Check whether client is authenticated. </summary>
        /// <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <returns> The response returned from the service. </returns>
        public virtual ClientResult ValidToken(RequestOptions options) => throw null;

        /// <summary> Check whether client is authenticated. </summary>
        /// <param name="options"> The request options, which can override default behaviors of the client pipeline on a per-call basis. </param>
        /// <returns> The response returned from the service. </returns>
        public virtual Task<ClientResult> ValidTokenAsync(RequestOptions options) => throw null;

        /// <summary> Check whether client is authenticated. </summary>
        /// <param name="cancellationToken"> The cancellation token that can be used to cancel the operation. </param>
        public virtual ClientResult ValidToken(CancellationToken cancellationToken = default) => throw null;

        /// <summary> Check whether client is authenticated. </summary>
        /// <param name="cancellationToken"> The cancellation token that can be used to cancel the operation. </param>
        public virtual Task<ClientResult> ValidTokenAsync(CancellationToken cancellationToken = default) => throw null;
    }
}
