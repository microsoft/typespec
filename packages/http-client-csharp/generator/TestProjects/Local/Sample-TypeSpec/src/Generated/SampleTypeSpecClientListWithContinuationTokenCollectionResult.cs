// Copyright (c) Microsoft. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.ClientModel;
using System.ClientModel.Primitives;
using System.Collections.Generic;

namespace SampleTypeSpec
{
    internal partial class SampleTypeSpecClientListWithContinuationTokenCollectionResult : CollectionResult
    {
        private readonly SampleTypeSpecClient _client;
        private readonly string _token;
        private readonly RequestOptions _options;

        public SampleTypeSpecClientListWithContinuationTokenCollectionResult(SampleTypeSpecClient client, string token, RequestOptions options)
        {
            _client = client;
            _token = token;
            _options = options;
        }

        public override IEnumerable<ClientResult> GetRawPages()
        {
            PipelineMessage message = _client.CreateListWithContinuationTokenRequest(_token, _options);
            string nextToken = null;
            while (true)
            {
                ClientResult result = ClientResult.FromResponse(_client.Pipeline.ProcessMessage(message, _options));
                yield return result;

                nextToken = ((ListWithContinuationTokenResponse)result).NextToken;
                if (nextToken == null)
                {
                    yield break;
                }
                message = _client.CreateListWithContinuationTokenRequest(nextToken, _options);
            }
        }

        public override ContinuationToken GetContinuationToken(ClientResult page)
        {
            string nextPage = ((ListWithContinuationTokenResponse)page).NextToken;
            if (nextPage != null)
            {
                return ContinuationToken.FromBytes(BinaryData.FromString(nextPage));
            }
            else
            {
                return null;
            }
        }
    }
}
