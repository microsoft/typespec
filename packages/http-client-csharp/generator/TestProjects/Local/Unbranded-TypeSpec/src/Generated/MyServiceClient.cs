// <auto-generated/>

#nullable disable

using System;
using System.ClientModel.Primitives;

namespace MyService
{
    /// <summary></summary>
    public partial class MyServiceClient
    {
        private readonly Uri _endpoint;

        /// <summary> Initializes a new instance of MyServiceClient for mocking. </summary>
        protected MyServiceClient()
        {
        }

        /// <summary> Initializes a new instance of MyServiceClient. </summary>
        /// <param name="endpoint"> Service endpoint. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="endpoint"/> is null. </exception>
        public MyServiceClient(Uri endpoint) : this(endpoint, new MyServiceClientOptions())
        {
        }

        /// <summary> Initializes a new instance of MyServiceClient. </summary>
        /// <param name="endpoint"> Service endpoint. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="endpoint"/> is null. </exception>
        public MyServiceClient(Uri endpoint, MyServiceClientOptions options)
        {
            Argument.AssertNotNull(endpoint, nameof(endpoint));

            options ??= new MyServiceClientOptions();

            _endpoint = endpoint;
            Pipeline = ClientPipeline.Create(options, Array.Empty<PipelinePolicy>(), Array.Empty<PipelinePolicy>(), Array.Empty<PipelinePolicy>());
        }

        /// <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        public ClientPipeline Pipeline { get; }
    }
}
