// <auto-generated/>

#nullable disable

using System;
using UnbrandedTypeSpec.Models;

namespace UnbrandedTypeSpec
{
    /// <summary></summary>
    public partial class UnbrandedTypeSpecClient
    {
        internal void CreateSayHiRequest(Uri unbrandedTypeSpecUrl, string headParameter, string queryParameter, string optionalQuery, string accept)
        {
        }

        internal void CreateHelloAgainRequest(Uri unbrandedTypeSpecUrl, string p1, string contentType, string p2, RoundTripModel action, string accept)
        {
        }

        internal void CreateNoContentTypeRequest(Uri unbrandedTypeSpecUrl, string p1, string p2, RoundTripModel action, string accept, string contentType)
        {
        }

        internal void CreateHelloDemo2Request(Uri unbrandedTypeSpecUrl, string accept)
        {
        }

        internal void CreateCreateLiteralRequest(Uri unbrandedTypeSpecUrl, Thing body, string accept, string contentType)
        {
        }

        internal void CreateHelloLiteralRequest(Uri unbrandedTypeSpecUrl, string p1, int p2, bool p3, string accept)
        {
        }

        internal void CreateTopActionRequest(Uri unbrandedTypeSpecUrl, DateTimeOffset action, string accept)
        {
        }

        internal void CreateTopAction2Request(Uri unbrandedTypeSpecUrl, string accept)
        {
        }

        internal void CreatePatchActionRequest(Uri unbrandedTypeSpecUrl, Thing body, string accept, string contentType)
        {
        }

        internal void CreateAnonymousBodyRequest(Uri unbrandedTypeSpecUrl, Thing Thing, string accept, string contentType)
        {
        }

        internal void CreateFriendlyModelRequest(Uri unbrandedTypeSpecUrl, Friend Friend, string accept, string contentType)
        {
        }

        internal void CreateAddTimeHeaderRequest(Uri unbrandedTypeSpecUrl, DateTimeOffset repeatabilityFirstSent, string accept)
        {
        }

        internal void CreateProjectedNameModelRequest(Uri unbrandedTypeSpecUrl, ProjectedModel ProjectedModel, string accept, string contentType)
        {
        }

        internal void CreateReturnsAnonymousModelRequest(Uri unbrandedTypeSpecUrl, string accept)
        {
        }

        internal void CreateGetUnknownValueRequest(Uri unbrandedTypeSpecUrl, string accept)
        {
        }

        internal void CreateInternalProtocolRequest(Uri unbrandedTypeSpecUrl, Thing body, string accept, string contentType)
        {
        }

        internal void CreateStillConvenientRequest(Uri unbrandedTypeSpecUrl, string accept)
        {
        }

        internal void CreateHeadAsBooleanRequest(Uri unbrandedTypeSpecUrl, string id, string accept)
        {
        }
    }
}
