// <auto-generated/>

#nullable disable

using System.ClientModel;
using System.ClientModel.Primitives;
using System.Threading.Tasks;
using _Type.Property.Nullable.Models;

namespace _Type.Property.Nullable
{
    public partial class CollectionsModel
    {
        protected CollectionsModel() => throw null;

        public ClientPipeline Pipeline => throw null;

        public virtual ClientResult GetNonNull(RequestOptions options) => throw null;

        public virtual Task<ClientResult> GetNonNullAsync(RequestOptions options) => throw null;

        public virtual ClientResult<CollectionsModelProperty> GetNonNull() => throw null;

        public virtual Task<ClientResult<CollectionsModelProperty>> GetNonNullAsync() => throw null;

        public virtual ClientResult GetNull(RequestOptions options) => throw null;

        public virtual Task<ClientResult> GetNullAsync(RequestOptions options) => throw null;

        public virtual ClientResult<CollectionsModelProperty> GetNull() => throw null;

        public virtual Task<ClientResult<CollectionsModelProperty>> GetNullAsync() => throw null;

        public virtual ClientResult PatchNonNull(BinaryContent content, RequestOptions options) => throw null;

        public virtual Task<ClientResult> PatchNonNullAsync(BinaryContent content, RequestOptions options) => throw null;

        public virtual ClientResult PatchNull(BinaryContent content, RequestOptions options) => throw null;

        public virtual Task<ClientResult> PatchNullAsync(BinaryContent content, RequestOptions options) => throw null;
    }
}
