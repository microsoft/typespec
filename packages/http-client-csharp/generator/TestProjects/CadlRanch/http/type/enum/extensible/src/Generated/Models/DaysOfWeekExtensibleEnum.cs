// <auto-generated/>

#nullable disable

using System;
using System.ComponentModel;

namespace _Type._Enum.Extensible.Models
{
    public readonly partial struct DaysOfWeekExtensibleEnum : IEquatable<DaysOfWeekExtensibleEnum>
    {
        public DaysOfWeekExtensibleEnum(string value) => throw null;

        public static DaysOfWeekExtensibleEnum Monday => throw null;

        public static DaysOfWeekExtensibleEnum Tuesday => throw null;

        public static DaysOfWeekExtensibleEnum Wednesday => throw null;

        public static DaysOfWeekExtensibleEnum Thursday => throw null;

        public static DaysOfWeekExtensibleEnum Friday => throw null;

        public static DaysOfWeekExtensibleEnum Saturday => throw null;

        public static DaysOfWeekExtensibleEnum Sunday => throw null;

        public static bool operator ==(DaysOfWeekExtensibleEnum left, DaysOfWeekExtensibleEnum right) => throw null;

        public static bool operator !=(DaysOfWeekExtensibleEnum left, DaysOfWeekExtensibleEnum right) => throw null;

        public static implicit operator DaysOfWeekExtensibleEnum(string value) => throw null;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override bool Equals(object obj) => throw null;

        public bool Equals(DaysOfWeekExtensibleEnum other) => throw null;

        [EditorBrowsable(EditorBrowsableState.Never)]
        public override int GetHashCode() => throw null;

        public override string ToString() => throw null;
    }
}
