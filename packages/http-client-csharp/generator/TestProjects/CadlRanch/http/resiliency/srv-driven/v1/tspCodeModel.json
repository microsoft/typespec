{
 "$id": "1",
 "Name": "Resiliency.ServiceDriven",
 "ApiVersions": [
  "v1"
 ],
 "Enums": [
  {
   "$id": "2",
   "kind": "enum",
   "name": "Versions",
   "crossLanguageDefinitionId": "Resiliency.ServiceDriven.Versions",
   "valueType": {
    "$id": "3",
    "kind": "string",
    "name": "string",
    "crossLanguageDefinitionId": "TypeSpec.string",
    "decorators": []
   },
   "values": [
    {
     "$id": "4",
     "kind": "enumvalue",
     "name": "v1",
     "value": "v1",
     "valueType": {
      "$id": "5",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "enumType": {
      "$ref": "2"
     },
     "description": "Version 1",
     "decorators": []
    }
   ],
   "description": "Service versions.",
   "isFixed": true,
   "isFlags": false,
   "usage": "ApiVersionEnum",
   "decorators": []
  }
 ],
 "Models": [],
 "Clients": [
  {
   "$id": "6",
   "Name": "ResiliencyServiceDrivenClient",
   "Description": "Test that we can grow up a service spec and service deployment into a multi-versioned service with full client support.",
   "Operations": [
    {
     "$id": "7",
     "Name": "fromNone",
     "ResourceName": "AddOptionalParam",
     "Description": "Test that currently accepts no parameters, will be updated in next spec to accept a new optional parameter as well",
     "Accessibility": "public",
     "Parameters": [],
     "Responses": [
      {
       "$id": "8",
       "StatusCodes": [
        204
       ],
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false
      }
     ],
     "HttpMethod": "HEAD",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}/resiliency/service-driven/client:v1/service:{serviceDeploymentVersion}/api-version:{apiVersion}",
     "Path": "/add-optional-param/from-none",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "Resiliency.ServiceDriven.AddOptionalParam.fromNone",
     "Decorators": []
    },
    {
     "$id": "9",
     "Name": "fromOneRequired",
     "ResourceName": "AddOptionalParam",
     "Description": "Test that currently accepts one required parameter, will be updated in next spec to accept a new optional parameter as well",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "10",
       "Name": "parameter",
       "NameInRequest": "parameter",
       "Description": "I am a required parameter",
       "Type": {
        "$id": "11",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": true,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "12",
       "StatusCodes": [
        204
       ],
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}/resiliency/service-driven/client:v1/service:{serviceDeploymentVersion}/api-version:{apiVersion}",
     "Path": "/add-optional-param/from-one-required",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "Resiliency.ServiceDriven.AddOptionalParam.fromOneRequired",
     "Decorators": []
    },
    {
     "$id": "13",
     "Name": "fromOneOptional",
     "ResourceName": "AddOptionalParam",
     "Description": "Test that currently accepts one optional parameter, will be updated in next spec to accept a new optional parameter as well",
     "Accessibility": "public",
     "Parameters": [
      {
       "$id": "14",
       "Name": "parameter",
       "NameInRequest": "parameter",
       "Description": "I am an optional parameter",
       "Type": {
        "$id": "15",
        "kind": "string",
        "name": "string",
        "crossLanguageDefinitionId": "TypeSpec.string",
        "decorators": []
       },
       "Location": "Query",
       "IsApiVersion": false,
       "IsContentType": false,
       "IsEndpoint": false,
       "Explode": false,
       "IsRequired": false,
       "Kind": "Method",
       "Decorators": [],
       "SkipUrlEncoding": false
      }
     ],
     "Responses": [
      {
       "$id": "16",
       "StatusCodes": [
        204
       ],
       "BodyMediaType": "Json",
       "Headers": [],
       "IsErrorResponse": false
      }
     ],
     "HttpMethod": "GET",
     "RequestBodyMediaType": "None",
     "Uri": "{endpoint}/resiliency/service-driven/client:v1/service:{serviceDeploymentVersion}/api-version:{apiVersion}",
     "Path": "/add-optional-param/from-one-optional",
     "BufferResponse": true,
     "GenerateProtocolMethod": true,
     "GenerateConvenienceMethod": true,
     "CrossLanguageDefinitionId": "Resiliency.ServiceDriven.AddOptionalParam.fromOneOptional",
     "Decorators": []
    }
   ],
   "Protocol": {
    "$id": "17"
   },
   "Parameters": [
    {
     "$id": "18",
     "Name": "endpoint",
     "NameInRequest": "endpoint",
     "Description": "Need to be set as 'http://localhost:3000' in client.",
     "Type": {
      "$id": "19",
      "kind": "url",
      "name": "url",
      "crossLanguageDefinitionId": "TypeSpec.url"
     },
     "Location": "Uri",
     "IsApiVersion": false,
     "IsResourceParameter": false,
     "IsContentType": false,
     "IsRequired": true,
     "IsEndpoint": true,
     "SkipUrlEncoding": false,
     "Explode": false,
     "Kind": "Client"
    },
    {
     "$id": "20",
     "Name": "serviceDeploymentVersion",
     "NameInRequest": "serviceDeploymentVersion",
     "Description": "Pass in either 'v1' or 'v2'. This represents a version of the service deployment in history. 'v1' is for the deployment when the service had only one api version. 'v2' is for the deployment when the service had api-versions 'v1' and 'v2'.",
     "Type": {
      "$id": "21",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "Location": "Uri",
     "IsApiVersion": false,
     "IsResourceParameter": false,
     "IsContentType": false,
     "IsRequired": true,
     "IsEndpoint": false,
     "SkipUrlEncoding": false,
     "Explode": false,
     "Kind": "Client"
    },
    {
     "$id": "22",
     "Name": "apiVersion",
     "NameInRequest": "apiVersion",
     "Description": "Pass in 'v1'. This represents the API version of the service. Will grow up in the next deployment to be both 'v1' and 'v2'",
     "Type": {
      "$id": "23",
      "kind": "string",
      "name": "string",
      "crossLanguageDefinitionId": "TypeSpec.string",
      "decorators": []
     },
     "Location": "Uri",
     "IsApiVersion": true,
     "IsResourceParameter": false,
     "IsContentType": false,
     "IsRequired": true,
     "IsEndpoint": false,
     "SkipUrlEncoding": false,
     "Explode": false,
     "Kind": "Client",
     "DefaultValue": {
      "$id": "24",
      "Type": {
       "$id": "25",
       "kind": "string",
       "name": "string",
       "crossLanguageDefinitionId": "TypeSpec.string"
      },
      "Value": "v1"
     }
    }
   ],
   "Decorators": []
  }
 ]
}
