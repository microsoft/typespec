// <auto-generated/>

#nullable disable

using System;
using System.ClientModel;
using System.ClientModel.Primitives;
using System.Threading;
using System.Threading.Tasks;
using Client.Naming.Models;

namespace Client.Naming
{
    public partial class NamingClient
    {
        public NamingClient() : this(new Uri("http://localhost:3000"), new NamingClientOptions()) => throw null;

        public NamingClient(Uri endpoint, NamingClientOptions options) => throw null;

        public ClientPipeline Pipeline => throw null;

        public virtual ClientResult ClientName(RequestOptions options) => throw null;

        public virtual Task<ClientResult> ClientNameAsync(RequestOptions options) => throw null;

        public virtual ClientResult ClientName() => throw null;

        public virtual Task<ClientResult> ClientNameAsync(CancellationToken cancellationToken = default) => throw null;

        public virtual ClientResult Parameter(string clientName, RequestOptions options) => throw null;

        public virtual Task<ClientResult> ParameterAsync(string clientName, RequestOptions options) => throw null;

        public virtual ClientResult Parameter(string clientName) => throw null;

        public virtual Task<ClientResult> ParameterAsync(string clientName, CancellationToken cancellationToken = default) => throw null;

        public virtual ClientResult Client(BinaryContent content, RequestOptions options = null) => throw null;

        public virtual Task<ClientResult> ClientAsync(BinaryContent content, RequestOptions options = null) => throw null;

        public virtual ClientResult Client(ClientNameModel body) => throw null;

        public virtual Task<ClientResult> ClientAsync(ClientNameModel body, CancellationToken cancellationToken = default) => throw null;

        public virtual ClientResult Language(BinaryContent content, RequestOptions options = null) => throw null;

        public virtual Task<ClientResult> LanguageAsync(BinaryContent content, RequestOptions options = null) => throw null;

        public virtual ClientResult Language(LanguageClientNameModel body) => throw null;

        public virtual Task<ClientResult> LanguageAsync(LanguageClientNameModel body, CancellationToken cancellationToken = default) => throw null;

        public virtual ClientResult CompatibleWithEncodedName(BinaryContent content, RequestOptions options = null) => throw null;

        public virtual Task<ClientResult> CompatibleWithEncodedNameAsync(BinaryContent content, RequestOptions options = null) => throw null;

        public virtual ClientResult CompatibleWithEncodedName(ClientNameAndJsonEncodedNameModel body) => throw null;

        public virtual Task<ClientResult> CompatibleWithEncodedNameAsync(ClientNameAndJsonEncodedNameModel body, CancellationToken cancellationToken = default) => throw null;

        public virtual ClientResult Request(string clientName, RequestOptions options) => throw null;

        public virtual Task<ClientResult> RequestAsync(string clientName, RequestOptions options) => throw null;

        public virtual ClientResult Request(string clientName) => throw null;

        public virtual Task<ClientResult> RequestAsync(string clientName, CancellationToken cancellationToken = default) => throw null;

        public virtual ClientResult Response(RequestOptions options) => throw null;

        public virtual Task<ClientResult> ResponseAsync(RequestOptions options) => throw null;

        public virtual ClientResult Response() => throw null;

        public virtual Task<ClientResult> ResponseAsync(CancellationToken cancellationToken = default) => throw null;

        public virtual ClientModel GetClientModelClient() => throw null;

        public virtual UnionEnum GetUnionEnumClient() => throw null;
    }
}
