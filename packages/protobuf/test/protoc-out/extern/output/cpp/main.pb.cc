// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: main.proto

#include "main.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = ::PROTOBUF_NAMESPACE_ID::internal;
PROTOBUF_CONSTEXPR BarRequest::BarRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.empty_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BarRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BarRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BarRequestDefaultTypeInternal() {}
  union {
    BarRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BarRequestDefaultTypeInternal _BarRequest_default_instance_;
PROTOBUF_CONSTEXPR BarResponse::BarResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.myextern_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BarResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BarResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BarResponseDefaultTypeInternal() {}
  union {
    BarResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BarResponseDefaultTypeInternal _BarResponse_default_instance_;
static ::_pb::Metadata file_level_metadata_main_2eproto[2];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_main_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_main_2eproto = nullptr;
const ::uint32_t TableStruct_main_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::BarRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::BarRequest, _impl_.empty_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::BarResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::BarResponse, _impl_.myextern_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        { 0, -1, -1, sizeof(::BarRequest)},
        { 9, -1, -1, sizeof(::BarResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::_BarRequest_default_instance_._instance,
    &::_BarResponse_default_instance_._instance,
};
const char descriptor_table_protodef_main_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\nmain.proto\032\rfoo/bar.proto\032\033google/prot"
    "obuf/empty.proto\"3\n\nBarRequest\022%\n\005empty\030"
    "\001 \001(\0132\026.google.protobuf.Empty\")\n\013BarResp"
    "onse\022\032\n\010myExtern\030\001 \001(\0132\010.foo.Bar2T\n\007Serv"
    "ice\022\'\n\003Foo\022\010.foo.Bar\032\026.google.protobuf.E"
    "mpty\022 \n\003Bar\022\013.BarRequest\032\014.BarResponseb\006"
    "proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_main_2eproto_deps[2] =
    {
        &::descriptor_table_foo_2fbar_2eproto,
        &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::absl::once_flag descriptor_table_main_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_main_2eproto = {
    false,
    false,
    246,
    descriptor_table_protodef_main_2eproto,
    "main.proto",
    &descriptor_table_main_2eproto_once,
    descriptor_table_main_2eproto_deps,
    2,
    2,
    schemas,
    file_default_instances,
    TableStruct_main_2eproto::offsets,
    file_level_metadata_main_2eproto,
    file_level_enum_descriptors_main_2eproto,
    file_level_service_descriptors_main_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_main_2eproto_getter() {
  return &descriptor_table_main_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_main_2eproto(&descriptor_table_main_2eproto);
// ===================================================================

class BarRequest::_Internal {
 public:
  static const ::PROTOBUF_NAMESPACE_ID::Empty& empty(const BarRequest* msg);
};

const ::PROTOBUF_NAMESPACE_ID::Empty&
BarRequest::_Internal::empty(const BarRequest* msg) {
  return *msg->_impl_.empty_;
}
void BarRequest::clear_empty() {
  if (GetArenaForAllocation() == nullptr && _impl_.empty_ != nullptr) {
    delete _impl_.empty_;
  }
  _impl_.empty_ = nullptr;
}
BarRequest::BarRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:BarRequest)
}
BarRequest::BarRequest(const BarRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BarRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.empty_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_empty()) {
    _this->_impl_.empty_ = new ::PROTOBUF_NAMESPACE_ID::Empty(*from._impl_.empty_);
  }
  // @@protoc_insertion_point(copy_constructor:BarRequest)
}

inline void BarRequest::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.empty_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BarRequest::~BarRequest() {
  // @@protoc_insertion_point(destructor:BarRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BarRequest::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.empty_;
}

void BarRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BarRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:BarRequest)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.empty_ != nullptr) {
    delete _impl_.empty_;
  }
  _impl_.empty_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BarRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .google.protobuf.Empty empty = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_empty(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* BarRequest::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:BarRequest)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .google.protobuf.Empty empty = 1;
  if (this->_internal_has_empty()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::empty(this),
        _Internal::empty(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BarRequest)
  return target;
}

::size_t BarRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BarRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Empty empty = 1;
  if (this->_internal_has_empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.empty_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BarRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BarRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BarRequest::GetClassData() const { return &_class_data_; }


void BarRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BarRequest*>(&to_msg);
  auto& from = static_cast<const BarRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:BarRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_empty()) {
    _this->_internal_mutable_empty()->::PROTOBUF_NAMESPACE_ID::Empty::MergeFrom(
        from._internal_empty());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BarRequest::CopyFrom(const BarRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BarRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BarRequest::IsInitialized() const {
  return true;
}

void BarRequest::InternalSwap(BarRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.empty_, other->_impl_.empty_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BarRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_main_2eproto_getter, &descriptor_table_main_2eproto_once,
      file_level_metadata_main_2eproto[0]);
}
// ===================================================================

class BarResponse::_Internal {
 public:
  static const ::foo::Bar& myextern(const BarResponse* msg);
};

const ::foo::Bar&
BarResponse::_Internal::myextern(const BarResponse* msg) {
  return *msg->_impl_.myextern_;
}
void BarResponse::clear_myextern() {
  if (GetArenaForAllocation() == nullptr && _impl_.myextern_ != nullptr) {
    delete _impl_.myextern_;
  }
  _impl_.myextern_ = nullptr;
}
BarResponse::BarResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:BarResponse)
}
BarResponse::BarResponse(const BarResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BarResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.myextern_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_myextern()) {
    _this->_impl_.myextern_ = new ::foo::Bar(*from._impl_.myextern_);
  }
  // @@protoc_insertion_point(copy_constructor:BarResponse)
}

inline void BarResponse::SharedCtor(::_pb::Arena* arena) {
  (void)arena;
  new (&_impl_) Impl_{
      decltype(_impl_.myextern_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BarResponse::~BarResponse() {
  // @@protoc_insertion_point(destructor:BarResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BarResponse::SharedDtor() {
  ABSL_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.myextern_;
}

void BarResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BarResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:BarResponse)
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.myextern_ != nullptr) {
    delete _impl_.myextern_;
  }
  _impl_.myextern_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BarResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .foo.Bar myExtern = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_myextern(), ptr);
          CHK_(ptr);
        } else {
          goto handle_unusual;
        }
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

::uint8_t* BarResponse::_InternalSerialize(
    ::uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:BarResponse)
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .foo.Bar myExtern = 1;
  if (this->_internal_has_myextern()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::myextern(this),
        _Internal::myextern(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:BarResponse)
  return target;
}

::size_t BarResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:BarResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .foo.Bar myExtern = 1;
  if (this->_internal_has_myextern()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.myextern_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BarResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BarResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BarResponse::GetClassData() const { return &_class_data_; }


void BarResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BarResponse*>(&to_msg);
  auto& from = static_cast<const BarResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:BarResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_myextern()) {
    _this->_internal_mutable_myextern()->::foo::Bar::MergeFrom(
        from._internal_myextern());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BarResponse::CopyFrom(const BarResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:BarResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BarResponse::IsInitialized() const {
  return true;
}

void BarResponse::InternalSwap(BarResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.myextern_, other->_impl_.myextern_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BarResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_main_2eproto_getter, &descriptor_table_main_2eproto_once,
      file_level_metadata_main_2eproto[1]);
}
// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::BarRequest*
Arena::CreateMaybeMessage< ::BarRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::BarRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::BarResponse*
Arena::CreateMaybeMessage< ::BarResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::BarResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
