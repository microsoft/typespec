{
  "changes": [
    {
      "packageName": "@typespec/compiler",
      "comment": "Emitter Framework: Add new `TypeEmitter` methods for scalar instantiation.",
      "type": "none"
    },
    {
      "packageName": "@typespec/compiler",
      "comment": "Emitter Framework: Fix that context was set incorrectly for some `TypeEmitter` methods, and add missing context methods for model properties, enum members, and union variants.",
      "type": "none"
    },
    {
      "packageName": "@typespec/compiler",
      "comment": "Emitter Framework: Fix that some context methods were not being passed the expected parameters.",
      "type": "none"
    },
    {
      "packageName": "@typespec/compiler",
      "comment": "Emitter Framework: Breaking change: Add support for templates instantiated with types without declared names. In such cases, `TypeEmitter`'s declarationName method may return `undefined`, and so the various `*Instantiation` methods might be called with an undefined name, and `AssetEmitter`'s `emitDeclarationName` method might return undefined.",
      "type": "none"
    }
  ],
  "packageName": "@typespec/compiler"
}
