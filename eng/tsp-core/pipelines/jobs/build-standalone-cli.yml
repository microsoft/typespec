parameters:
  - name: name
    type: string
  - name: pool
    type: string
  - name: vmImage
    type: string
  - name: hostArchitecture
    type: string
    default: image
  - name: os
    type: string

jobs:
  - job: build_${{ replace(parameters.name, '-', '_') }}
    displayName: Build ${{ parameters.name }}
    pool:
      name: ${{ parameters.pool }}
      # 1es pipeline templates converts `image` to demands: ImageOverride under the hood
      # which is incompatible with image selection in the default non-1es hosted pools
      ${{ if eq(parameters.os, 'macOS') }}:
        vmImage: ${{ parameters.vmImage }}
      ${{ else }}:
        image: ${{ parameters.vmImage }}
      os: ${{ parameters.os }}
      ${{ if eq(parameters.hostArchitecture, 'arm64') }}:
        hostArchitecture: ${{ parameters.hostArchitecture }}

    steps:
      - task: NodeTool@0
        displayName: Install Node.js
        retryCountOnTaskFailure: 3
        inputs:
          versionSpec: 22.x
      - pwsh: |
          Get-ChildItem "C:/Program Files (x86)/Windows Kits/10/bin/"
          Get-ChildItem "C:/Program Files (x86)/Windows Kits/10/bin/10.0.26100.0/x64"

          $windowsSdkPath=Get-ChildItem "C:/Program Files (x86)/Windows Kits/10/bin/1*" | Select-Object FullName | Sort-Object -Descending { [version](Split-Path $_.FullName -leaf)} | Select-Object -first 1
          $signtoolPath = "$($windowsSdkPath.FullName)\x64\signtool.exe"
          echo "Sign tool path: $signtoolPath"
          echo "##vso[task.setvariable variable=SIGNTOOL_PATH]$signtoolPath"
        displayName: Find signtool path

      - script: npm install -g pnpm
        displayName: Install pnpm

      - script: pnpm install --filter "@typespec/standalone-cli"
        displayName: Install JavaScript Dependencies

      - script: pnpm build
        workingDirectory: packages/standalone
        displayName: Build

      - script: pnpm check
        workingDirectory: packages/standalone
        displayName: Check executable runs

    templateContext:
      outputs:
        - output: pipelineArtifact
          path: packages/standalone/dist
          artifact: standalone-${{ parameters.name }}
          displayName: Publish standalone dist as pipeline artifacts
