parameters:
  - name: platform
    type: string

jobs:
  - job: build_${{ replace(parameters.platform, '-', '_') }}
    displayName: Build CLI ${{ parameters.platform }}
    pool:
      ${{ if eq(parameters.platform, 'linux-x64') }}:
        name: $(LINUXPOOL)
        image: $(LINUXVMIMAGE)
        os: linux
      ${{ if eq(parameters.platform, 'linux-arm64') }}:
        name: $(LINUXARMPOOL)
        image: $(LINUXARMVMIMAGE)
        os: linux
        hostArchitecture: arm64
      ${{ if eq(parameters.platform, 'macos-x64') }}:
        name: $(MACPOOL)
        vmImage: $(MACVMIMAGE)
        os: macOS
      ${{ if eq(parameters.platform, 'macos-arm64') }}:
        name: $(MACPOOL)
        vmImage: $(MACVMIMAGEM1)
        os: macOS
      ${{ if eq(parameters.platform, 'windows-x64') }}:
        name: $(WINDOWSPOOL)
        image: $(WINDOWSVMIMAGE)
        os: windows
      ${{ if eq(parameters.platform, 'windows-arm64') }}:
        name: $(ARMPOOL)
        image: $(WINDOWSARMVMIMAGE)
        os: windows

    steps:
      - task: NodeTool@0
        displayName: Install Node.js
        retryCountOnTaskFailure: 3
        inputs:
          versionSpec: 22.x

      # - script: npm install -g bun
      #   displayName: Install bun

      - script: npm install -g pnpm
        displayName: Install pnpm

      - script: pnpm install --filter "@typespec/standalone-cli"
        displayName: Install JavaScript Dependencies

      - script: pnpm build
        workingDirectory: packages/standalone
        displayName: Build

      - script: pnpm check
        workingDirectory: packages/standalone
        displayName: Check executable runs

    templateContext:
      outputs:
        - output: pipelineArtifact
          path: packages/standalone/dist
          artifact: standalone-${{ parameters.platform }}
          displayName: Publish standalone dist as pipeline artifacts
