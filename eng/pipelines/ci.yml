# Continuous Integration

trigger:
  - main
  # For patch releases
  - release/*

pr: none

variables:
  - template: templates/variables/globals.yml

stages:
  - stage: build
    displayName: Build
    jobs:
      - job: npm_stable
        displayName: Npm publish
        pool:
          name: azsdk-pool-mms-win-2022-general
          vmImage: windows-2022

        variables:
          TYPESPEC_SKIP_DOCUSAURUS_BUILD: true # Disable docusaurus build

        steps:
          - template: ./templates/install.yml
          - template: ./templates/build.yml

          - script: pnpm run test-official
            displayName: Test

          - template: ./templates/upload-coverage.yml

          - script: pnpm run pack:all
            displayName: Pack packages

          - pwsh: |
              echo "Updating config"
              pnpm config set '//registry.npmjs.org/:_authToken' '${NPM_AUTH_TOKEN}'
              echo "Publishing"
              pnpm chronus publish  "./temp/artifacts/*.tgz" --access public  --engine npm --report-summary ./publish-summary.json
            name: Publish
            env:
              NPM_AUTH_TOKEN: $(azure-sdk-npm-token)

          - script: |
              echo "Publish summary:"
              cat ./publish-summary.json
            displayName: Log publish summary

          - script: pnpm chronus-github create-releases --repo microsoft/typespec --publish-summary ./publish-summary.json
            displayName: Create github releases
            env:
              GITHUB_TOKEN: $(azuresdk-github-pat)

          - publish: $(Build.SourcesDirectory)/temp/artifacts
            artifact: packages
            displayName: Publish packages(.tgz) as pipeline artifacts

          - task: CopyFiles@2
            inputs:
              SourceFolder: "$(Build.SourcesDirectory)/packages/typespec-vscode"
              Contents: "*.vsix"
              TargetFolder: "$(Build.ArtifactStagingDirectory)/vscode-extension"

          - publish: $(Build.ArtifactStagingDirectory)/vscode-extension
            artifact: vscode-extension-unsigned
            displayName: Publish VSCode extension(.vsix) as pipeline artifacts

          - task: CopyFiles@2
            inputs:
              SourceFolder: "$(Build.SourcesDirectory)/packages/typespec-vs"
              Contents: "*.vsix"
              TargetFolder: "$(Build.ArtifactStagingDirectory)/vs-extension"

          - publish: $(Build.ArtifactStagingDirectory)/vs-extension
            artifact: vs-extension-unsigned
            displayName: Publish VS extension(.vsix) as pipeline artifacts

          - task: AzureCLI@1
            displayName: "Publish bundled packages to package storage"
            inputs:
              azureSubscription: "Azure SDK Engineering System"
              scriptLocation: inlineScript
              inlineScript: node ./eng/scripts/upload-bundler-packages.js

          - task: AzureCLI@1
            displayName: "Publish playground"
            inputs:
              azureSubscription: "Azure SDK Engineering System"
              scriptLocation: inlineScript
              inlineScript: |
                az storage blob upload-batch ^
                  --destination $web ^
                  --account-name "cadlplayground" ^
                  --destination-path / ^
                  --source "./packages/playground-website/dist/" ^
                  --overwrite

  - stage: publish_dev_npm
    displayName: Publish Dev Packages
    dependsOn: build
    jobs:
      - job: npm_dev
        displayName: Npm publish dev version
        condition: eq(variables['Build.SourceBranch'], 'refs/heads/main') # Only publish -dev on main branch.
        pool:
          name: azsdk-pool-mms-win-2022-general
          vmImage: windows-2022

        variables:
          TYPESPEC_SKIP_DOCUSAURUS_BUILD: true # Disable docusaurus build

        steps:
          - template: ./templates/install.yml
          - template: ./templates/build.yml

          - script: node ./packages/internal-build-utils/cmd/cli.js bump-version-preview .
            displayName: Bump version to prerelease targets

          - script: npm run gen-manifest
            displayName: Regen manifest for compiler
            workingDirectory: ./packages/compiler

          - pwsh: |
              echo "Updating config"
              pnpm config set '//registry.npmjs.org/:_authToken' '${NPM_AUTH_TOKEN}'
              echo "Publishing"
              pnpm chronus publish  --access public --report-summary ./publish-summary.json

            name: Publish
            env:
              NPM_AUTH_TOKEN: $(azure-sdk-npm-token)

  - stage: publish_vscode
    displayName: Publish VSCode extension
    dependsOn: build
    jobs:
      - template: ./jobs/publish-vscode.yml

  - stage: publish_vs
    displayName: Publish VS extension
    dependsOn: build
    jobs:
      - template: ./jobs/publish-vs.yml

  - stage: docker
    displayName: Docker
    dependsOn: []
    jobs:
      - job: docker
        displayName: Build and publish
        variables:
          imageName: "azsdkengsys.azurecr.io/typespec"
        pool:
          name: azsdk-pool-mms-ubuntu-2004-general
          vmImage: ubuntu-20.04
        steps:
          - task: Docker@1
            displayName: login
            inputs:
              azureSubscriptionEndpoint: "AzureSDKEngKeyVault Secrets"
              azureContainerRegistry: azsdkengsys.azurecr.io
              command: login

          - script: |
              docker build -f ./docker/Dockerfile \
                -t $(imageName):latest \
                -t $(imageName):alpine \
                .
            displayName: "Build"
          - script: docker push $(imageName) --all-tags
            displayName: "Push"
