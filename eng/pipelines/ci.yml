# Continuous Integration

trigger:
  branches:
    include:
      - main
      # For patch releases
      - release/*
  paths:
    exclude:
      - packages/http-client-csharp

pr: none

extends:
  template: /eng/pipelines/templates/1es-redirect.yml
  parameters:
    variables:
      - template: /eng/pipelines/templates/variables/globals.yml@self

    stages:
      - stage: build
        displayName: Build

        pool:
          name: $(WINDOWSPOOL)
          image: $(WINDOWSVMIMAGE)
          os: windows

        jobs:
          - job: npm_stable
            displayName: Npm publish

            variables:
              TYPESPEC_SKIP_DOCUSAURUS_BUILD: true # Disable docusaurus build

            steps:
              - template: /eng/pipelines/templates/install.yml
              - template: /eng/pipelines/templates/build.yml

              - script: pnpm run test:ci
                displayName: Test

              - template: /eng/pipelines/templates/upload-coverage.yml

              - script: pnpm run pack:all
                displayName: Pack packages

              - pwsh: |
                  echo "Updating config"
                  pnpm config set '//registry.npmjs.org/:_authToken' '${NPM_AUTH_TOKEN}'
                  echo "Publishing"
                  pnpm chronus publish  "./temp/artifacts/*.tgz" --access public  --engine npm --report-summary ./publish-summary.json
                name: Publish
                env:
                  NPM_AUTH_TOKEN: $(azure-sdk-npm-token)

              - script: |
                  echo "Publish summary:"
                  cat ./publish-summary.json
                displayName: Log publish summary

              - script: pnpm chronus-github create-releases --repo microsoft/typespec --publish-summary ./publish-summary.json
                displayName: Create github releases
                env:
                  GITHUB_TOKEN: $(azuresdk-github-pat)

              - task: CopyFiles@2
                inputs:
                  SourceFolder: "$(Build.SourcesDirectory)/packages/typespec-vscode"
                  Contents: "*.vsix"
                  TargetFolder: "$(Build.ArtifactStagingDirectory)/vscode-extension"

              - task: CopyFiles@2
                inputs:
                  SourceFolder: "$(Build.SourcesDirectory)/packages/typespec-vs"
                  Contents: "*.vsix"
                  TargetFolder: "$(Build.ArtifactStagingDirectory)/vs-extension"

              - task: AzureCLI@1
                displayName: "Publish bundled packages to package storage"
                inputs:
                  azureSubscription: "Azure SDK Engineering System"
                  scriptLocation: inlineScript
                  inlineScript: node ./eng/scripts/upload-bundler-packages.js

              - task: AzureCLI@1
                displayName: "Publish playground"
                inputs:
                  azureSubscription: "Azure SDK Engineering System"
                  scriptLocation: inlineScript
                  inlineScript: |
                    az storage blob upload-batch ^
                      --destination $web ^
                      --account-name "cadlplayground" ^
                      --destination-path / ^
                      --source "./packages/playground-website/dist/" ^
                      --overwrite

            templateContext:
              outputs:
                - output: pipelineArtifact
                  path: $(Build.SourcesDirectory)/temp/artifacts
                  artifact: packages
                  displayName: Publish packages(.tgz) as pipeline artifacts

                - output: pipelineArtifact
                  path: $(Build.ArtifactStagingDirectory)/vscode-extension
                  artifact: vscode-extension-unsigned
                  displayName: Publish VSCode extension(.vsix) as pipeline artifacts

                - output: pipelineArtifact
                  path: $(Build.ArtifactStagingDirectory)/vs-extension
                  artifact: vs-extension-unsigned
                  displayName: Publish VS extension(.vsix) as pipeline artifacts

      - stage: publish_dev_npm
        displayName: Publish Dev Packages
        dependsOn: build

        pool:
          name: $(LINUXPOOL)
          image: $(LINUXVMIMAGE)
          os: linux

        jobs:
          - job: npm_dev
            displayName: Npm publish dev version
            condition: eq(variables['Build.SourceBranch'], 'refs/heads/main') # Only publish -dev on main branch.

            variables:
              TYPESPEC_SKIP_DOCUSAURUS_BUILD: true # Disable docusaurus build

            steps:
              - template: /eng/pipelines/templates/install.yml
              - template: /eng/pipelines/templates/build.yml

              - script: node ./packages/internal-build-utils/cmd/cli.js bump-version-preview .
                displayName: Bump version to prerelease targets

              - script: npm run gen-manifest
                displayName: Regen manifest for compiler
                workingDirectory: ./packages/compiler

              - pwsh: |
                  echo "Updating config"
                  pnpm config set '//registry.npmjs.org/:_authToken' '${NPM_AUTH_TOKEN}'
                  echo "Publishing"
                  pnpm -r publish --access public --no-git-checks --tag next

                # Chronus doesn't support tag yet.
                # pnpm chronus publish --tag next  --access public --report-summary ./publish-summary.json

                name: Publish
                env:
                  NPM_AUTH_TOKEN: $(azure-sdk-npm-token)

      - stage: publish_vscode
        displayName: Publish VSCode extension
        dependsOn: build
        jobs:
          - template: /eng/pipelines/jobs/publish-vscode.yml

      - stage: publish_vs
        displayName: Publish VS extension
        dependsOn: build
        jobs:
          - template: /eng/pipelines/jobs/publish-vs.yml

      - stage: docker
        displayName: Docker
        dependsOn: []
        jobs:
          - job: docker
            displayName: Build and publish
            variables:
              imageName: "azsdkengsys.azurecr.io/typespec"
            pool:
              name: $(LINUXPOOL)
              image: $(LINUXVMIMAGE)
              os: linux
            steps:
              - task: Docker@1
                displayName: login
                inputs:
                  azureSubscriptionEndpoint: "AzureSDKEngKeyVault Secrets"
                  azureContainerRegistry: azsdkengsys.azurecr.io
                  command: login

              - script: |
                  docker build -f ./docker/Dockerfile \
                    -t $(imageName):latest \
                    -t $(imageName):alpine \
                    .
                displayName: "Build"
              - script: docker push $(imageName) --all-tags
                displayName: "Push"
