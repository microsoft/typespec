parameters:
  - name: nodeVersion
    type: string
  - name: poolName
    type: string

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: ${{ parameters.nodeVersion }}
    displayName: Install Node.js

  - task: UseDotNet@2
    inputs:
      version: 6.0.x

  - script: |
      echo "Node:"
      node -v
      echo "Npm:"
      npm -v
      echo "Dotnet:"
      dotnet --version
    displayName: "Log tool versions used"

  - script: node common/scripts/install-run-rush.js install
    displayName: Install JavaScript Dependencies

  - script: dotnet restore
    displayName: Restore .NET Dependencies
    workingDirectory: packages/typespec-vs

  - script: node common/scripts/install-run-rush.js rebuild --parallelism max --verbose
    displayName: Build

  - script: node common/scripts/install-run-rush.js test-official
    displayName: Test

  - template: ./upload-coverage.yml

  - script: node common/scripts/install-run-rush.js check-format
    displayName: Check Formatting
    condition: ne(variables['Agent.OS'], 'Windows_NT')

  - script: node common/scripts/install-run-rush.js lint --parallelism max --verbose
    displayName: Lint
    condition: ne(variables['Agent.OS'], 'Windows_NT')

  - script: cd packages/samples && npm run regen-samples
    displayName: Regenerate Samples

  - script: node eng/scripts/check-for-changed-files.js
    displayName: Check Git Status For Changed Files

  - script: node common/scripts/install-run-rush.js cspell
    displayName: Spell check
    condition: ne(variables['Agent.OS'], 'Windows_NT')

  - script: node common/scripts/install-run-rush.js e2e
    displayName: E2E Tests
    # Skipping the e2e test on the prepare publish branch as there is a bug in the npm version installed on node 16
    # causing npx to try to download the unpublished version of the cli.
    condition: eq('${{ parameters.nodeVersion }}', '18.x')
    # condition: and(not(startsWith(variables['System.PullRequest.SourceBranch'], 'publish/')), not(eq('${{ parameters.nodeVersion }}', '16.x')))

  # Unlink node_modules folders to significantly improve performance of subsequent tasks
  # which need to walk the directory tree (and are hardcoded to follow symlinks).
  - script: node common/scripts/install-run-rush.js unlink
    displayName: "Unlink dependencies"
    condition: always()

  # It's important for performance to pass "packages" as "searchFolder" to avoid looking under root "node_modules".
  # PublishTestResults.searchFolder only supports absolute paths, not relative.
  - task: PublishTestResults@2
    inputs:
      testResultsFormat: "JUnit"
      searchFolder: "$(System.DefaultWorkingDirectory)/packages"
      testResultsFiles: "*/test-results.xml"
      mergeTestResults: true
      failTaskOnFailedTests: true
      testRunTitle: "Test os: ${{ parameters.poolName }}, node: ${{ parameters.nodeVersion }}"
    displayName: Publish test results
    condition: always()

  - publish: ./packages/playground/test-results
    artifact: "uitestresults-${{ parameters.poolName }}-node-${{ parameters.nodeVersion }}"
    displayName: Publish UI tests artifacts
    condition: ne(variables['Agent.OS'], 'Windows_NT')
